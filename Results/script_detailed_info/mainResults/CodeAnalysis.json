{
  "ProjectName": "C# Project",
  "ProjectDirectory": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets",
  "DirectoryPath": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets",
  "LOC": 2643,
  "ConfigurationFile": "Config.json",
  "ProjectLanguage": "C#",
  "ProjectLanguageVersion": "CSharp8",
  "Project": [
    {
      "Name": "AudioManager",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
      "Language": "C#",
      "Loc": 19,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "AudioManager",
          "FullName": "AudioManager",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "PlaySFX",
              "IsEmpty": false,
              "FullName": "AudioManager.PlaySFX(AudioClip)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "clip",
                  "Type": "AudioClip",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "SFXSource.PlayOneShot",
                  "FullName": "SFXSource.PlayOneShot",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "clip",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 17
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 15
            }
          ],
          "Fields": [
            {
              "Name": "SFXSource",
              "Type": "AudioSource",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [
                "SerializeField"
              ],
              "FullName": "AudioManager.SFXSource",
              "Line": 7
            },
            {
              "Name": "appearSound",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.appearSound",
              "Line": 8
            },
            {
              "Name": "disappearSound",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.disappearSound",
              "Line": 9
            },
            {
              "Name": "axeSound",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.axeSound",
              "Line": 10
            },
            {
              "Name": "swordSound",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.swordSound",
              "Line": 11
            },
            {
              "Name": "hintSound",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.hintSound",
              "Line": 12
            },
            {
              "Name": "angryLogVoice",
              "Type": "AudioClip",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "AudioManager.angryLogVoice",
              "Line": 13
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "HintTextController",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\HintTextController.cs",
      "Language": "C#",
      "Loc": 33,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "HintTextController",
          "FullName": "HintTextController",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Awake",
              "IsEmpty": false,
              "FullName": "HintTextController.Awake()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "FullName": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 14
                },
                {
                  "Name": "GameObject.FindGameObjectWithTag",
                  "FullName": "GameObject.FindGameObjectWithTag",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"Audio\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 14
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "audioManager",
                    "Type": "AudioManager",
                    "Assignment": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Kind": "Assignment",
                    "AssignmentLine": 13,
                    "VariableKind": "Field",
                    "FullName": "HintTextController.audioManager",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "audioManager"
                        ],
                        "Properties": [],
                        "Fields": [
                          "HintTextController.audioManager"
                        ],
                        "Invocations": [],
                        "Type": "AudioManager",
                        "Statement": "audioManager",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Type": "AudioManager",
                    "Kind": "Use",
                    "UseLine": 13,
                    "UseKind": "Invalid",
                    "AssignedTo": "audioManager",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 12
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": false,
              "FullName": "HintTextController.Start()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "backgroundObject.SetActive",
                  "FullName": "backgroundObject.SetActive",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "false",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 20
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "hintText.enabled",
                    "Type": "?",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 18,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "hintText"
                        ],
                        "Properties": [],
                        "Fields": [
                          "HintTextController.hintText"
                        ],
                        "Invocations": [],
                        "Type": "TMP_Text",
                        "Statement": "hintText",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 18,
                    "UseKind": "Literal",
                    "AssignedTo": "hintText.enabled",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 17
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Update",
              "IsEmpty": false,
              "FullName": "HintTextController.Update()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "Input.GetKeyDownKeyCode.H"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Input.GetKeyDown",
                        "FullName": "Input.GetKeyDown",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "KeyCode.H",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 25
                      }
                    ],
                    "Type": "?",
                    "Statement": "Input.GetKeyDown(KeyCode.H)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 31,
                  "StartLine": 25,
                  "Invocations": [
                    {
                      "Name": "Input.GetKeyDown",
                      "FullName": "Input.GetKeyDown",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "KeyCode.H",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 25
                    },
                    {
                      "Name": "PlaySFX",
                      "FullName": "AudioManager.PlaySFX(AudioClip)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                      "DefinitionLine": 15,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "audioManager.hintSound",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 27
                    },
                    {
                      "Name": "backgroundObject.SetActive",
                      "FullName": "backgroundObject.SetActive",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "isHintVisible",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 30
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "isHintVisible",
                        "Type": "bool",
                        "Assignment": "!isHintVisible",
                        "Kind": "Assignment",
                        "AssignmentLine": 27,
                        "VariableKind": "Field",
                        "FullName": "HintTextController.isHintVisible",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "isHintVisible"
                            ],
                            "Properties": [],
                            "Fields": [
                              "HintTextController.isHintVisible"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "isHintVisible",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "hintText.enabled",
                        "Type": "?",
                        "Assignment": "isHintVisible",
                        "Kind": "Assignment",
                        "AssignmentLine": 28,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "hintText"
                            ],
                            "Properties": [],
                            "Fields": [
                              "HintTextController.hintText"
                            ],
                            "Invocations": [],
                            "Type": "TMP_Text",
                            "Statement": "hintText",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "!isHintVisible",
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 27,
                        "UseKind": "UnaryOperator",
                        "AssignedTo": "isHintVisible",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "isHintVisible",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 28,
                        "UseKind": "FieldReference",
                        "AssignedTo": "hintText.enabled",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 23
            }
          ],
          "Fields": [
            {
              "Name": "hintText",
              "Type": "TMP_Text",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "HintTextController.hintText",
              "Line": 6
            },
            {
              "Name": "backgroundObject",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "HintTextController.backgroundObject",
              "Line": 7
            },
            {
              "Name": "isHintVisible",
              "Type": "bool",
              "Modifiers": [
                "private"
              ],
              "Assignment": "false",
              "Attributes": [],
              "FullName": "HintTextController.isHintVisible",
              "Line": 8
            },
            {
              "Name": "audioManager",
              "Type": "AudioManager",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "HintTextController.audioManager",
              "Line": 10
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 4
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        },
        {
          "Name": "TMPro",
          "Line": 2
        }
      ],
      "Line": 1
    },
    {
      "Name": "MainMenuController",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\MainMenuController.cs",
      "Language": "C#",
      "Loc": 28,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "MainMenuController",
          "FullName": "MainMenuController",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "PlayGame",
              "IsEmpty": false,
              "FullName": "MainMenuController.PlayGame()",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "SceneManager.LoadScene",
                  "FullName": "SceneManager.LoadScene",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "SceneManager.GetActiveScene().buildIndex + 1",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 11
                },
                {
                  "Name": "SceneManager.GetActiveScene",
                  "FullName": "SceneManager.GetActiveScene",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 11
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 9
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Instructions",
              "IsEmpty": false,
              "FullName": "MainMenuController.Instructions()",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "InstructionsPanel.alpha",
                    "Type": "?",
                    "Assignment": "1",
                    "Kind": "Assignment",
                    "AssignmentLine": 14,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "InstructionsPanel"
                        ],
                        "Properties": [],
                        "Fields": [
                          "MainMenuController.InstructionsPanel"
                        ],
                        "Invocations": [],
                        "Type": "CanvasGroup",
                        "Statement": "InstructionsPanel",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "InstructionsPanel.blocksRaycasts",
                    "Type": "?",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 15,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "InstructionsPanel"
                        ],
                        "Properties": [],
                        "Fields": [
                          "MainMenuController.InstructionsPanel"
                        ],
                        "Invocations": [],
                        "Type": "CanvasGroup",
                        "Statement": "InstructionsPanel",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 14,
                    "UseKind": "Literal",
                    "AssignedTo": "InstructionsPanel.alpha",
                    "Value": "1",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 15,
                    "UseKind": "Literal",
                    "AssignedTo": "InstructionsPanel.blocksRaycasts",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 13
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Back",
              "IsEmpty": false,
              "FullName": "MainMenuController.Back()",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "InstructionsPanel.alpha",
                    "Type": "?",
                    "Assignment": "0",
                    "Kind": "Assignment",
                    "AssignmentLine": 19,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "InstructionsPanel"
                        ],
                        "Properties": [],
                        "Fields": [
                          "MainMenuController.InstructionsPanel"
                        ],
                        "Invocations": [],
                        "Type": "CanvasGroup",
                        "Statement": "InstructionsPanel",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "InstructionsPanel.blocksRaycasts",
                    "Type": "?",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 20,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "InstructionsPanel"
                        ],
                        "Properties": [],
                        "Fields": [
                          "MainMenuController.InstructionsPanel"
                        ],
                        "Invocations": [],
                        "Type": "CanvasGroup",
                        "Statement": "InstructionsPanel",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 19,
                    "UseKind": "Literal",
                    "AssignedTo": "InstructionsPanel.alpha",
                    "Value": "0",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 20,
                    "UseKind": "Literal",
                    "AssignedTo": "InstructionsPanel.blocksRaycasts",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 18
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "QuitGame",
              "IsEmpty": false,
              "FullName": "MainMenuController.QuitGame()",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Debug.Log",
                  "FullName": "Debug.Log",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"Quit\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 25
                },
                {
                  "Name": "Application.Quit",
                  "FullName": "Application.Quit",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 26
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 23
            }
          ],
          "Fields": [
            {
              "Name": "InstructionsPanel",
              "Type": "CanvasGroup",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "MainMenuController.InstructionsPanel",
              "Line": 8
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 6
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "UnityEngine.SceneManagement",
          "Line": 4
        }
      ],
      "Line": 1
    },
    {
      "Name": "ObjectHold",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\ObjectHold.cs",
      "Language": "C#",
      "Loc": 60,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "ObjectHold",
          "FullName": "ObjectHold",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": false,
              "FullName": "ObjectHold.Start()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "Object",
                    "Type": "System.Collections.Generic.List<GameObject>",
                    "Assignment": "new List<GameObject>()",
                    "Kind": "Assignment",
                    "AssignmentLine": 15,
                    "VariableKind": "Field",
                    "FullName": "ObjectHold.Object",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "Object"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ObjectHold.Object"
                        ],
                        "Invocations": [],
                        "Type": "System.Collections.Generic.List<GameObject>",
                        "Statement": "Object",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "new List<GameObject>()",
                    "Type": "System.Collections.Generic.List<GameObject>",
                    "Kind": "Use",
                    "UseLine": 15,
                    "UseKind": "ObjectCreation",
                    "AssignedTo": "Object",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 14
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Update",
              "IsEmpty": false,
              "FullName": "ObjectHold.Update()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "Input.GetKeyDownKeyCode.P"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Input.GetKeyDown",
                        "FullName": "Input.GetKeyDown",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "KeyCode.P",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 22
                      }
                    ],
                    "Type": "?",
                    "Statement": "Input.GetKeyDown(KeyCode.P)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 25,
                  "StartLine": 22,
                  "Invocations": [
                    {
                      "Name": "Input.GetKeyDown",
                      "FullName": "Input.GetKeyDown",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "KeyCode.P",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 22
                    },
                    {
                      "Name": "StartPickUp",
                      "FullName": "ObjectHold.StartPickUp()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\ObjectHold.cs",
                      "DefinitionLine": 32,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 24
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                },
                {
                  "Condition": {
                    "Tokens": [
                      "Input.GetKeyUpKeyCode.O"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Input.GetKeyUp",
                        "FullName": "Input.GetKeyUp",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "KeyCode.O",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 26
                      }
                    ],
                    "Type": "?",
                    "Statement": "Input.GetKeyUp(KeyCode.O)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 29,
                  "StartLine": 26,
                  "Invocations": [
                    {
                      "Name": "Input.GetKeyUp",
                      "FullName": "Input.GetKeyUp",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "KeyCode.O",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 26
                    },
                    {
                      "Name": "Drop",
                      "FullName": "ObjectHold.Drop(GameObject)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\ObjectHold.cs",
                      "DefinitionLine": 52,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "Object[Object.Count - 1]",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 28
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 20
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "StartPickUp",
              "IsEmpty": false,
              "FullName": "ObjectHold.StartPickUp()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Camera.main.ScreenPointToRay",
                  "FullName": "Camera.main.ScreenPointToRay",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "Input.mousePosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 34
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "ray",
                    "Type": "var",
                    "FullName": null,
                    "Assignment": "Camera.main.ScreenPointToRay(Input.mousePosition)",
                    "Kind": "Definition",
                    "DefinitionLine": 33
                  }
                },
                {
                  "Variable": {
                    "Name": "hit",
                    "Type": "RaycastHit",
                    "FullName": null,
                    "Assignment": null,
                    "Kind": "Definition",
                    "DefinitionLine": 34
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "Physics.Raycastray,",
                      "out",
                      "hit"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Physics.Raycast",
                        "FullName": "Physics.Raycast",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "ray",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "hit",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 36
                      }
                    ],
                    "Type": "?",
                    "Statement": "Physics.Raycast(ray, out hit)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 43,
                  "StartLine": 36,
                  "Invocations": [
                    {
                      "Name": "Physics.Raycast",
                      "FullName": "Physics.Raycast",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "ray",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "hit",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 36
                    },
                    {
                      "Name": "hit.transform.GetComponent<Target>",
                      "FullName": "hit.transform.GetComponent<Target>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 38
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "target",
                        "Type": "Target",
                        "FullName": "Target",
                        "Assignment": "hit.transform.GetComponent<Target>()",
                        "Kind": "Definition",
                        "DefinitionLine": 37
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "target",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "target != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 42,
                      "StartLine": 39,
                      "Invocations": [
                        {
                          "Name": "PickUp",
                          "FullName": "PickUp",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "hit.transform.gameObject",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 41
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 32
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "PickUp",
              "IsEmpty": false,
              "FullName": "ObjectHold.PickUp(GameObject)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "pickUpObject",
                  "Type": "GameObject",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "Add",
                  "FullName": "System.Collections.Generic.List<GameObject>.Add(GameObject)",
                  "ReturnType": "Void",
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": "MetadataFile",
                  "Module": "CommonLanguageRuntimeLibrary",
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "pickUpObject",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 48
                },
                {
                  "Name": "pickUpObject.transform.SetParent",
                  "FullName": "pickUpObject.transform.SetParent",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "PlayerTransform",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 49
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 46
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Drop",
              "IsEmpty": false,
              "FullName": "ObjectHold.Drop(GameObject)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "dropObject",
                  "Type": "GameObject",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "Object.ContainsdropObject"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ObjectHold.Object"
                    ],
                    "Invocations": [
                      {
                        "Name": "Contains",
                        "FullName": "System.Collections.Generic.List<GameObject>.Contains(GameObject)",
                        "ReturnType": "Boolean",
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": "MetadataFile",
                        "Module": "CommonLanguageRuntimeLibrary",
                        "ReferenceFound": true,
                        "Arguments": [
                          {
                            "Argument": "dropObject",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 54
                      }
                    ],
                    "Type": "bool",
                    "Statement": "Object.Contains(dropObject)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Method"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 58,
                  "StartLine": 54,
                  "Invocations": [
                    {
                      "Name": "Contains",
                      "FullName": "System.Collections.Generic.List<GameObject>.Contains(GameObject)",
                      "ReturnType": "Boolean",
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": "MetadataFile",
                      "Module": "CommonLanguageRuntimeLibrary",
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "dropObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 54
                    },
                    {
                      "Name": "Remove",
                      "FullName": "System.Collections.Generic.List<GameObject>.Remove(GameObject)",
                      "ReturnType": "Boolean",
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": "MetadataFile",
                      "Module": "CommonLanguageRuntimeLibrary",
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "dropObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 56
                    },
                    {
                      "Name": "dropObject.transform.SetParent",
                      "FullName": "dropObject.transform.SetParent",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "null",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 57
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 52
            }
          ],
          "Fields": [
            {
              "Name": "Object",
              "Type": "List<GameObject>",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ObjectHold.Object",
              "Line": 7
            },
            {
              "Name": "PlayerTransform",
              "Type": "Transform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ObjectHold.PlayerTransform",
              "Line": 8
            },
            {
              "Name": "range",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "3f",
              "Attributes": [],
              "FullName": "ObjectHold.range",
              "Line": 9
            },
            {
              "Name": "Go",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "100f",
              "Attributes": [],
              "FullName": "ObjectHold.Go",
              "Line": 10
            },
            {
              "Name": "Camera",
              "Type": "Camera",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ObjectHold.Camera",
              "Line": 11
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "RaycastGun",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\RaycastGun.cs",
      "Language": "C#",
      "Loc": 93,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "RaycastGun",
          "FullName": "RaycastGun",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Awake",
              "IsEmpty": false,
              "FullName": "RaycastGun.Awake()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "GetComponent<LineRenderer>",
                  "FullName": "GetComponent<LineRenderer>",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 26
                },
                {
                  "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "FullName": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 27
                },
                {
                  "Name": "GameObject.FindGameObjectWithTag",
                  "FullName": "GameObject.FindGameObjectWithTag",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"Audio\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 27
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "laserLine",
                    "Type": "LineRenderer",
                    "Assignment": "GetComponent<LineRenderer>()",
                    "Kind": "Assignment",
                    "AssignmentLine": 25,
                    "VariableKind": "Field",
                    "FullName": "RaycastGun.laserLine",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "laserLine"
                        ],
                        "Properties": [],
                        "Fields": [
                          "RaycastGun.laserLine"
                        ],
                        "Invocations": [],
                        "Type": "LineRenderer",
                        "Statement": "laserLine",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "audioManager",
                    "Type": "AudioManager",
                    "Assignment": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Kind": "Assignment",
                    "AssignmentLine": 26,
                    "VariableKind": "Field",
                    "FullName": "RaycastGun.audioManager",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "audioManager"
                        ],
                        "Properties": [],
                        "Fields": [
                          "RaycastGun.audioManager"
                        ],
                        "Invocations": [],
                        "Type": "AudioManager",
                        "Statement": "audioManager",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "GetComponent<LineRenderer>()",
                    "Type": "LineRenderer",
                    "Kind": "Use",
                    "UseLine": 25,
                    "UseKind": "Invalid",
                    "AssignedTo": "laserLine",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Type": "AudioManager",
                    "Kind": "Use",
                    "UseLine": 26,
                    "UseKind": "Invalid",
                    "AssignedTo": "audioManager",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 24
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Update",
              "IsEmpty": false,
              "FullName": "RaycastGun.Update()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "isPlayerOnObject"
                    ],
                    "Properties": [],
                    "Fields": [
                      "RaycastGun.isPlayerOnObject"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "isPlayerOnObject",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 64,
                  "StartLine": 32,
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "fireTimer",
                        "Type": "float",
                        "Assignment": "Time.deltaTime",
                        "Kind": "Assignment",
                        "AssignmentLine": 33,
                        "VariableKind": "Field",
                        "FullName": "RaycastGun.fireTimer",
                        "AssignmentKind": "AddAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "fireTimer"
                            ],
                            "Properties": [],
                            "Fields": [
                              "RaycastGun.fireTimer"
                            ],
                            "Invocations": [],
                            "Type": "float",
                            "Statement": "fireTimer",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Time.deltaTime",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 33,
                        "UseKind": "Invalid",
                        "AssignedTo": "fireTimer",
                        "Value": null,
                        "Operation": "AddAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "Input.GetKeyDownKeyCode.K",
                          "fireTimer",
                          "fireRate"
                        ],
                        "Properties": [],
                        "Fields": [
                          "RaycastGun.fireTimer",
                          "RaycastGun.fireRate"
                        ],
                        "Invocations": [
                          {
                            "Name": "Input.GetKeyDown",
                            "FullName": "Input.GetKeyDown",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "KeyCode.K",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 35
                          }
                        ],
                        "Type": "?",
                        "Statement": "Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 63,
                      "StartLine": 35,
                      "Invocations": [
                        {
                          "Name": "Input.GetKeyDown",
                          "FullName": "Input.GetKeyDown",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "KeyCode.K",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 35
                        },
                        {
                          "Name": "laserLine.SetPosition",
                          "FullName": "laserLine.SetPosition",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "0",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "laserOrigin.position",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 38
                        },
                        {
                          "Name": "playerCamera.ViewportToWorldPoint",
                          "FullName": "playerCamera.ViewportToWorldPoint",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "new Vector3(0.5f, 0.5f, 0)",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 39
                        },
                        {
                          "Name": "StartCoroutine",
                          "FullName": "StartCoroutine",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "ShootLaser()",
                              "IsInvocation": true,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 56
                        },
                        {
                          "Name": "ShootLaser",
                          "FullName": "RaycastGun.ShootLaser()",
                          "ReturnType": "IEnumerator",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\RaycastGun.cs",
                          "DefinitionLine": 67,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 56
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "rayOrigin",
                            "Type": "Vector3",
                            "FullName": null,
                            "Assignment": "playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0))",
                            "Kind": "Definition",
                            "DefinitionLine": 38
                          }
                        },
                        {
                          "Variable": {
                            "Name": "hit",
                            "Type": "RaycastHit",
                            "FullName": null,
                            "Assignment": null,
                            "Kind": "Definition",
                            "DefinitionLine": 39
                          }
                        },
                        {
                          "Variable": {
                            "Name": "fireTimer",
                            "Type": "float",
                            "Assignment": "0",
                            "Kind": "Assignment",
                            "AssignmentLine": 36,
                            "VariableKind": "Field",
                            "FullName": "RaycastGun.fireTimer",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "fireTimer"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "RaycastGun.fireTimer"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "fireTimer",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 36,
                            "UseKind": "Literal",
                            "AssignedTo": "fireTimer",
                            "Value": "0",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "Physics.RaycastrayOrigin,",
                              "playerCamera.transform.forward,",
                              "out",
                              "hit,",
                              "gunRange"
                            ],
                            "Properties": [],
                            "Fields": [
                              "RaycastGun.playerCamera",
                              "RaycastGun.gunRange"
                            ],
                            "Invocations": [
                              {
                                "Name": "Physics.Raycast",
                                "FullName": "Physics.Raycast",
                                "ReturnType": null,
                                "FileName": null,
                                "DefinitionLine": 1,
                                "Kind": null,
                                "Module": null,
                                "ReferenceFound": false,
                                "Arguments": [
                                  {
                                    "Argument": "rayOrigin",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  },
                                  {
                                    "Argument": "playerCamera.transform.forward",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  },
                                  {
                                    "Argument": "hit",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  },
                                  {
                                    "Argument": "gunRange",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 41
                              }
                            ],
                            "Type": "?",
                            "Statement": "Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange)",
                            "ExpressionType": "InvocationExpression",
                            "Kind": "Literal"
                          },
                          "Else": {
                            "ElseStatement": "{\r\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\r\n                }",
                            "EndLine": 55,
                            "StartLine": 52,
                            "Invocations": [
                              {
                                "Name": "laserLine.SetPosition",
                                "FullName": "laserLine.SetPosition",
                                "ReturnType": null,
                                "FileName": null,
                                "DefinitionLine": 1,
                                "Kind": null,
                                "Module": null,
                                "ReferenceFound": false,
                                "Arguments": [
                                  {
                                    "Argument": "1",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  },
                                  {
                                    "Argument": "rayOrigin + (playerCamera.transform.forward * gunRange)",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 54
                              }
                            ],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          },
                          "DanglingElse": false,
                          "Depth": 3,
                          "EndLine": 55,
                          "StartLine": 41,
                          "Invocations": [
                            {
                              "Name": "Physics.Raycast",
                              "FullName": "Physics.Raycast",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "rayOrigin",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "playerCamera.transform.forward",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "hit",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "gunRange",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 41
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "hit.collider.gameObject",
                                  "Object"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "RaycastGun.Object"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "hit.collider.gameObject == Object",
                                "ExpressionType": "EqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 4,
                              "EndLine": 50,
                              "StartLine": 43,
                              "Invocations": [
                                {
                                  "Name": "PlaySFX",
                                  "FullName": "AudioManager.PlaySFX(AudioClip)",
                                  "ReturnType": "Void",
                                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                                  "DefinitionLine": 15,
                                  "Kind": "SourceFile",
                                  "Module": null,
                                  "ReferenceFound": true,
                                  "Arguments": [
                                    {
                                      "Argument": "audioManager.swordSound",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 45
                                },
                                {
                                  "Name": "laserLine.SetPosition",
                                  "FullName": "laserLine.SetPosition",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [
                                    {
                                      "Argument": "1",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    },
                                    {
                                      "Argument": "hit.point",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 46
                                },
                                {
                                  "Name": "PlaySFX",
                                  "FullName": "AudioManager.PlaySFX(AudioClip)",
                                  "ReturnType": "Void",
                                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                                  "DefinitionLine": 15,
                                  "Kind": "SourceFile",
                                  "Module": null,
                                  "ReferenceFound": true,
                                  "Arguments": [
                                    {
                                      "Argument": "audioManager.disappearSound",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 47
                                },
                                {
                                  "Name": "Destroy",
                                  "FullName": "Destroy",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [
                                    {
                                      "Argument": "hit.transform.gameObject",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 48
                                }
                              ],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "Object",
                                    "Type": "GameObject",
                                    "Assignment": "null",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 48,
                                    "VariableKind": "Field",
                                    "FullName": "RaycastGun.Object",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "Object"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "RaycastGun.Object"
                                        ],
                                        "Invocations": [],
                                        "Type": "GameObject",
                                        "Statement": "Object",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": null,
                                    "Type": "GameObject",
                                    "Kind": "Use",
                                    "UseLine": 48,
                                    "UseKind": "Literal",
                                    "AssignedTo": "Object",
                                    "Value": "null",
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "Condition": {
                            "Tokens": [
                              "Object",
                              "null"
                            ],
                            "Properties": [],
                            "Fields": [
                              "RaycastGun.Object"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "Object == null",
                            "ExpressionType": "EqualsExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 3,
                          "EndLine": 62,
                          "StartLine": 59,
                          "Invocations": [
                            {
                              "Name": "GameOver",
                              "FullName": "RaycastGun.GameOver()",
                              "ReturnType": "Void",
                              "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\RaycastGun.cs",
                              "DefinitionLine": 90,
                              "Kind": "SourceFile",
                              "Module": null,
                              "ReferenceFound": true,
                              "Arguments": [],
                              "Line": 61
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 30
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ShootLaser",
              "IsEmpty": false,
              "FullName": "RaycastGun.ShootLaser()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "IEnumerator",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "laserLine.enabled",
                    "Type": "?",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 68,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "laserLine"
                        ],
                        "Properties": [],
                        "Fields": [
                          "RaycastGun.laserLine"
                        ],
                        "Invocations": [],
                        "Type": "LineRenderer",
                        "Statement": "laserLine",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "laserLine.enabled",
                    "Type": "?",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 70,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "laserLine"
                        ],
                        "Properties": [],
                        "Fields": [
                          "RaycastGun.laserLine"
                        ],
                        "Invocations": [],
                        "Type": "LineRenderer",
                        "Statement": "laserLine",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 68,
                    "UseKind": "Literal",
                    "AssignedTo": "laserLine.enabled",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 70,
                    "UseKind": "Literal",
                    "AssignedTo": "laserLine.enabled",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 67
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnTriggerEnter",
              "IsEmpty": false,
              "FullName": "RaycastGun.OnTriggerEnter(Collider)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "other",
                  "Type": "Collider",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "other.gameObject",
                      "player"
                    ],
                    "Properties": [],
                    "Fields": [
                      "RaycastGun.player"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "other.gameObject == player",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 79,
                  "StartLine": 76,
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "isPlayerOnObject",
                        "Type": "bool",
                        "Assignment": "true",
                        "Kind": "Assignment",
                        "AssignmentLine": 77,
                        "VariableKind": "Field",
                        "FullName": "RaycastGun.isPlayerOnObject",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "isPlayerOnObject"
                            ],
                            "Properties": [],
                            "Fields": [
                              "RaycastGun.isPlayerOnObject"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "isPlayerOnObject",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 77,
                        "UseKind": "Literal",
                        "AssignedTo": "isPlayerOnObject",
                        "Value": "true",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 74
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnTriggerExit",
              "IsEmpty": false,
              "FullName": "RaycastGun.OnTriggerExit(Collider)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "other",
                  "Type": "Collider",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "other.gameObject",
                      "player"
                    ],
                    "Properties": [],
                    "Fields": [
                      "RaycastGun.player"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "other.gameObject == player",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 87,
                  "StartLine": 84,
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "isPlayerOnObject",
                        "Type": "bool",
                        "Assignment": "false",
                        "Kind": "Assignment",
                        "AssignmentLine": 85,
                        "VariableKind": "Field",
                        "FullName": "RaycastGun.isPlayerOnObject",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "isPlayerOnObject"
                            ],
                            "Properties": [],
                            "Fields": [
                              "RaycastGun.isPlayerOnObject"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "isPlayerOnObject",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 85,
                        "UseKind": "Literal",
                        "AssignedTo": "isPlayerOnObject",
                        "Value": "false",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 82
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "GameOver",
              "IsEmpty": false,
              "FullName": "RaycastGun.GameOver()",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "SceneManager.LoadScene",
                  "FullName": "SceneManager.LoadScene",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "SceneManager.GetActiveScene().buildIndex + 1",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 92
                },
                {
                  "Name": "SceneManager.GetActiveScene",
                  "FullName": "SceneManager.GetActiveScene",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 92
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 90
            }
          ],
          "Fields": [
            {
              "Name": "playerCamera",
              "Type": "Camera",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.playerCamera",
              "Line": 9
            },
            {
              "Name": "laserOrigin",
              "Type": "Transform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.laserOrigin",
              "Line": 10
            },
            {
              "Name": "Object",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.Object",
              "Line": 11
            },
            {
              "Name": "isPlayerOnObject",
              "Type": "bool",
              "Modifiers": [
                "private"
              ],
              "Assignment": "false",
              "Attributes": [],
              "FullName": "RaycastGun.isPlayerOnObject",
              "Line": 12
            },
            {
              "Name": "player",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.player",
              "Line": 13
            },
            {
              "Name": "gunRange",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "50f",
              "Attributes": [],
              "FullName": "RaycastGun.gunRange",
              "Line": 14
            },
            {
              "Name": "fireRate",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "0.2f",
              "Attributes": [],
              "FullName": "RaycastGun.fireRate",
              "Line": 15
            },
            {
              "Name": "laserDuration",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "0.05f",
              "Attributes": [],
              "FullName": "RaycastGun.laserDuration",
              "Line": 16
            },
            {
              "Name": "laserLine",
              "Type": "LineRenderer",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.laserLine",
              "Line": 18
            },
            {
              "Name": "fireTimer",
              "Type": "float",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.fireTimer",
              "Line": 19
            },
            {
              "Name": "audioManager",
              "Type": "AudioManager",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.audioManager",
              "Line": 21
            },
            {
              "Name": "destroyObject",
              "Type": "List<GameObject>",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "RaycastGun.destroyObject",
              "Line": 22
            }
          ],
          "Constructors": [],
          "Attributes": [
            "RequireComponent"
          ],
          "Line": 6
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "UnityEngine.SceneManagement",
          "Line": 4
        }
      ],
      "Line": 1
    },
    {
      "Name": "Target",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\Target.cs",
      "Language": "C#",
      "Loc": 33,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "Target",
          "FullName": "Target",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": false,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": true,
              "FullName": "Target.Start()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 9
            },
            {
              "HasBody": false,
              "HasExpressionBody": false,
              "Name": "Update",
              "IsEmpty": true,
              "FullName": "Target.Update()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 15
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "TakeDamage",
              "IsEmpty": false,
              "FullName": "Target.TakeDamage(float)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "amount",
                  "Type": "float",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "health",
                    "Type": "float",
                    "Assignment": "amount",
                    "Kind": "Assignment",
                    "AssignmentLine": 21,
                    "VariableKind": "Field",
                    "FullName": "Target.health",
                    "AssignmentKind": "SubtractAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "health"
                        ],
                        "Properties": [],
                        "Fields": [
                          "Target.health"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "health",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "amount",
                    "Type": "float",
                    "Kind": "Use",
                    "UseLine": 21,
                    "UseKind": "ParameterReference",
                    "AssignedTo": "health",
                    "Value": null,
                    "Operation": "SubtractAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "health",
                      "0f"
                    ],
                    "Properties": [],
                    "Fields": [
                      "Target.health"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "health <= 0f",
                    "ExpressionType": "LessThanOrEqualExpression",
                    "Kind": "Method"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 26,
                  "StartLine": 23,
                  "Invocations": [
                    {
                      "Name": "Select",
                      "FullName": "Target.Select()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\Target.cs",
                      "DefinitionLine": 29,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 25
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 20
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Select",
              "IsEmpty": false,
              "FullName": "Target.Select()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Destroy",
                  "FullName": "Destroy",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "gameObject",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 31
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 29
            }
          ],
          "Fields": [
            {
              "Name": "health",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "50f",
              "Attributes": [],
              "FullName": "Target.health",
              "Line": 7
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "TextManager",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\TextManager.cs",
      "Language": "C#",
      "Loc": 22,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "TextManager",
          "FullName": "TextManager",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnMouseEnter",
              "IsEmpty": false,
              "FullName": "TextManager.OnMouseEnter()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Camera.main.WorldToScreenPoint",
                  "FullName": "Camera.main.WorldToScreenPoint",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "myGameObject.transform.position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 15
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "myText.text",
                    "Type": "?",
                    "Assignment": "customText",
                    "Kind": "Assignment",
                    "AssignmentLine": 13,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "myText"
                        ],
                        "Properties": [],
                        "Fields": [
                          "TextManager.myText"
                        ],
                        "Invocations": [],
                        "Type": "TextMeshProUGUI",
                        "Statement": "myText",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "myText.transform.position",
                    "Type": "?",
                    "Assignment": "Camera.main.WorldToScreenPoint(myGameObject.transform.position)",
                    "Kind": "Assignment",
                    "AssignmentLine": 14,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "myText"
                        ],
                        "Properties": [],
                        "Fields": [
                          "TextManager.myText"
                        ],
                        "Invocations": [],
                        "Type": "TextMeshProUGUI",
                        "Statement": "myText",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "customText",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 13,
                    "UseKind": "FieldReference",
                    "AssignedTo": "myText.text",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "Camera.main.WorldToScreenPoint(myGameObject.transform.position)",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 14,
                    "UseKind": "Invalid",
                    "AssignedTo": "myText.transform.position",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 12
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnMouseExit",
              "IsEmpty": false,
              "FullName": "TextManager.OnMouseExit()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "myText.text",
                    "Type": "?",
                    "Assignment": "\"\"",
                    "Kind": "Assignment",
                    "AssignmentLine": 19,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "myText"
                        ],
                        "Properties": [],
                        "Fields": [
                          "TextManager.myText"
                        ],
                        "Invocations": [],
                        "Type": "TextMeshProUGUI",
                        "Statement": "myText",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 19,
                    "UseKind": "Literal",
                    "AssignedTo": "myText.text",
                    "Value": "\"\"",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 18
            }
          ],
          "Fields": [
            {
              "Name": "myGameObject",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "TextManager.myGameObject",
              "Line": 8
            },
            {
              "Name": "customText",
              "Type": "string",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "TextManager.customText",
              "Line": 9
            },
            {
              "Name": "myText",
              "Type": "TextMeshProUGUI",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "TextManager.myText",
              "Line": 10
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 6
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "TMPro",
          "Line": 4
        }
      ],
      "Line": 1
    },
    {
      "Name": "ThrowingTutorial",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\ThrowingTutorial.cs",
      "Language": "C#",
      "Loc": 97,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "ThrowingTutorial",
          "FullName": "ThrowingTutorial",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Awake",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.Awake()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "FullName": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 33
                },
                {
                  "Name": "GameObject.FindGameObjectWithTag",
                  "FullName": "GameObject.FindGameObjectWithTag",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"Audio\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 33
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "audioManager",
                    "Type": "AudioManager",
                    "Assignment": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Kind": "Assignment",
                    "AssignmentLine": 32,
                    "VariableKind": "Field",
                    "FullName": "ThrowingTutorial.audioManager",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "audioManager"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ThrowingTutorial.audioManager"
                        ],
                        "Invocations": [],
                        "Type": "AudioManager",
                        "Statement": "audioManager",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>()",
                    "Type": "AudioManager",
                    "Kind": "Use",
                    "UseLine": 32,
                    "UseKind": "Invalid",
                    "AssignedTo": "audioManager",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 31
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.Start()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "readyToThrow",
                    "Type": "bool",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 37,
                    "VariableKind": "Field",
                    "FullName": "ThrowingTutorial.readyToThrow",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "readyToThrow"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ThrowingTutorial.readyToThrow"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "readyToThrow",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "bool",
                    "Kind": "Use",
                    "UseLine": 37,
                    "UseKind": "Literal",
                    "AssignedTo": "readyToThrow",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 36
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Update",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.Update()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "inCollider",
                      "Input.GetKeyDownthrowKey",
                      "readyToThrow",
                      "totalThrows",
                      "0"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ThrowingTutorial.inCollider",
                      "ThrowingTutorial.throwKey",
                      "ThrowingTutorial.readyToThrow",
                      "ThrowingTutorial.totalThrows"
                    ],
                    "Invocations": [
                      {
                        "Name": "Input.GetKeyDown",
                        "FullName": "Input.GetKeyDown",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "throwKey",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 43
                      }
                    ],
                    "Type": "?",
                    "Statement": "inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0",
                    "ExpressionType": "LogicalAndExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 46,
                  "StartLine": 43,
                  "Invocations": [
                    {
                      "Name": "Input.GetKeyDown",
                      "FullName": "Input.GetKeyDown",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "throwKey",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 43
                    },
                    {
                      "Name": "Throw",
                      "FullName": "ThrowingTutorial.Throw()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\ThrowingTutorial.cs",
                      "DefinitionLine": 49,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 45
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 41
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Throw",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.Throw()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Invoke",
                  "FullName": "Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "nameof(ResetThrow)",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "throwCooldown",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                },
                {
                  "Name": "nameof",
                  "FullName": "nameof",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "ResetThrow",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "readyToThrow",
                    "Type": "bool",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 50,
                    "VariableKind": "Field",
                    "FullName": "ThrowingTutorial.readyToThrow",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "readyToThrow"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ThrowingTutorial.readyToThrow"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "readyToThrow",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "bool",
                    "Kind": "Use",
                    "UseLine": 50,
                    "UseKind": "Literal",
                    "AssignedTo": "readyToThrow",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "throwCounter",
                      "totalThrows"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ThrowingTutorial.throwCounter",
                      "ThrowingTutorial.totalThrows"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "throwCounter < totalThrows",
                    "ExpressionType": "LessThanExpression",
                    "Kind": "Method"
                  },
                  "Else": {
                    "ElseStatement": "if (throwCounter == totalThrows)\r\n        {\r\n            audioManager.PlaySFX(audioManager.disappearSound);\r\n            armorObject.SetActive(false); // Make the armor disappear\r\n            audioManager.PlaySFX(audioManager.appearSound);\r\n            swordObject.SetActive(true); // Make the sword appear\r\n        }",
                    "EndLine": 68,
                    "StartLine": 62,
                    "Invocations": [],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [
                      {
                        "Condition": {
                          "Tokens": [
                            "throwCounter",
                            "totalThrows"
                          ],
                          "Properties": [],
                          "Fields": [
                            "ThrowingTutorial.throwCounter",
                            "ThrowingTutorial.totalThrows"
                          ],
                          "Invocations": [],
                          "Type": "bool",
                          "Statement": "throwCounter == totalThrows",
                          "ExpressionType": "EqualsExpression",
                          "Kind": "Method"
                        },
                        "Else": null,
                        "DanglingElse": true,
                        "Depth": 2,
                        "EndLine": 68,
                        "StartLine": 62,
                        "Invocations": [
                          {
                            "Name": "PlaySFX",
                            "FullName": "AudioManager.PlaySFX(AudioClip)",
                            "ReturnType": "Void",
                            "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                            "DefinitionLine": 15,
                            "Kind": "SourceFile",
                            "Module": null,
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "audioManager.disappearSound",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 64
                          },
                          {
                            "Name": "armorObject.SetActive",
                            "FullName": "armorObject.SetActive",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "false",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 65
                          },
                          {
                            "Name": "PlaySFX",
                            "FullName": "AudioManager.PlaySFX(AudioClip)",
                            "ReturnType": "Void",
                            "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                            "DefinitionLine": 15,
                            "Kind": "SourceFile",
                            "Module": null,
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "audioManager.appearSound",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 66
                          },
                          {
                            "Name": "swordObject.SetActive",
                            "FullName": "swordObject.SetActive",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "true",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 67
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      }
                    ],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  },
                  "DanglingElse": false,
                  "Depth": 1,
                  "EndLine": 68,
                  "StartLine": 53,
                  "Invocations": [
                    {
                      "Name": "PlaySFX",
                      "FullName": "AudioManager.PlaySFX(AudioClip)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\AudioManager.cs",
                      "DefinitionLine": 15,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "audioManager.axeSound",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 55
                    },
                    {
                      "Name": "Instantiate",
                      "FullName": "Instantiate",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "objectToThrow",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "attackPoint.position",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "attackPoint.rotation",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 57
                    },
                    {
                      "Name": "thrownObject.GetComponent<Rigidbody>",
                      "FullName": "thrownObject.GetComponent<Rigidbody>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 58
                    },
                    {
                      "Name": "rb.AddForce",
                      "FullName": "rb.AddForce",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "cam.forward * throwForce",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "ForceMode.VelocityChange",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 59
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "thrownObject",
                        "Type": "GameObject",
                        "FullName": null,
                        "Assignment": "Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation)",
                        "Kind": "Definition",
                        "DefinitionLine": 56
                      }
                    },
                    {
                      "Variable": {
                        "Name": "rb",
                        "Type": "Rigidbody",
                        "FullName": null,
                        "Assignment": "thrownObject.GetComponent<Rigidbody>()",
                        "Kind": "Definition",
                        "DefinitionLine": 57
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 49
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ResetThrow",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.ResetThrow()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "readyToThrow",
                    "Type": "bool",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 77,
                    "VariableKind": "Field",
                    "FullName": "ThrowingTutorial.readyToThrow",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "readyToThrow"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ThrowingTutorial.readyToThrow"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "readyToThrow",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "bool",
                    "Kind": "Use",
                    "UseLine": 77,
                    "UseKind": "Literal",
                    "AssignedTo": "readyToThrow",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 76
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnTriggerEnter",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.OnTriggerEnter(Collider)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "other",
                  "Type": "Collider",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "other.gameObject",
                      "player"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ThrowingTutorial.player"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "other.gameObject == player",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 87,
                  "StartLine": 84,
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "inCollider",
                        "Type": "bool",
                        "Assignment": "true",
                        "Kind": "Assignment",
                        "AssignmentLine": 85,
                        "VariableKind": "Field",
                        "FullName": "ThrowingTutorial.inCollider",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "inCollider"
                            ],
                            "Properties": [],
                            "Fields": [
                              "ThrowingTutorial.inCollider"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "inCollider",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 85,
                        "UseKind": "Literal",
                        "AssignedTo": "inCollider",
                        "Value": "true",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 82
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnTriggerExit",
              "IsEmpty": false,
              "FullName": "ThrowingTutorial.OnTriggerExit(Collider)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "other",
                  "Type": "Collider",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "other.gameObject",
                      "player"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ThrowingTutorial.player"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "other.gameObject == player",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 96,
                  "StartLine": 93,
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "inCollider",
                        "Type": "bool",
                        "Assignment": "false",
                        "Kind": "Assignment",
                        "AssignmentLine": 94,
                        "VariableKind": "Field",
                        "FullName": "ThrowingTutorial.inCollider",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "inCollider"
                            ],
                            "Properties": [],
                            "Fields": [
                              "ThrowingTutorial.inCollider"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "inCollider",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 94,
                        "UseKind": "Literal",
                        "AssignedTo": "inCollider",
                        "Value": "false",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 91
            }
          ],
          "Fields": [
            {
              "Name": "cam",
              "Type": "Transform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"References\")"
              ],
              "FullName": "ThrowingTutorial.cam",
              "Line": 9
            },
            {
              "Name": "attackPoint",
              "Type": "Transform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.attackPoint",
              "Line": 10
            },
            {
              "Name": "objectToThrow",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.objectToThrow",
              "Line": 11
            },
            {
              "Name": "armorObject",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.armorObject",
              "Line": 12
            },
            {
              "Name": "swordObject",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.swordObject",
              "Line": 13
            },
            {
              "Name": "player",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.player",
              "Line": 14
            },
            {
              "Name": "totalThrows",
              "Type": "int",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Settings\")"
              ],
              "FullName": "ThrowingTutorial.totalThrows",
              "Line": 17
            },
            {
              "Name": "throwCooldown",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.throwCooldown",
              "Line": 18
            },
            {
              "Name": "throwKey",
              "Type": "KeyCode",
              "Modifiers": [
                "public"
              ],
              "Assignment": "KeyCode.K",
              "Attributes": [
                "Header(\"Throwing\")"
              ],
              "FullName": "ThrowingTutorial.throwKey",
              "Line": 21
            },
            {
              "Name": "throwForce",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.throwForce",
              "Line": 22
            },
            {
              "Name": "readyToThrow",
              "Type": "bool",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.readyToThrow",
              "Line": 24
            },
            {
              "Name": "throwCounter",
              "Type": "int",
              "Modifiers": [
                "private"
              ],
              "Assignment": "0",
              "Attributes": [],
              "FullName": "ThrowingTutorial.throwCounter",
              "Line": 26
            },
            {
              "Name": "inCollider",
              "Type": "bool",
              "Modifiers": [
                "private"
              ],
              "Assignment": "false",
              "Attributes": [],
              "FullName": "ThrowingTutorial.inCollider",
              "Line": 27
            },
            {
              "Name": "audioManager",
              "Type": "AudioManager",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ThrowingTutorial.audioManager",
              "Line": 29
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 6
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "TMPro",
          "Line": 4
        }
      ],
      "Line": 1
    },
    {
      "Name": "TriggerEnter",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\CodeScripts\\TriggerEnter.cs",
      "Language": "C#",
      "Loc": 14,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "TriggerEnter",
          "FullName": "TriggerEnter",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnTriggerEnter",
              "IsEmpty": false,
              "FullName": "TriggerEnter.OnTriggerEnter()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "objectGame.SetActive",
                  "FullName": "objectGame.SetActive",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "true",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 11
                },
                {
                  "Name": "enterEvent.Invoke",
                  "FullName": "enterEvent.Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 12
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 10
            }
          ],
          "Fields": [
            {
              "Name": "objectGame",
              "Type": "GameObject",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "TriggerEnter.objectGame",
              "Line": 8
            },
            {
              "Name": "enterEvent",
              "Type": "UnityEvent",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "TriggerEnter.enterEvent",
              "Line": 9
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 6
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "UnityEngine.Events",
          "Line": 4
        }
      ],
      "Line": 1
    },
    {
      "Name": "IncrementUIText",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\DemoSceneAssets\\Scripts\\IncrementUIText.cs",
      "Language": "C#",
      "Loc": 45,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 42,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "IncrementUIText",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "text",
                  "Type": "Text",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_Text"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text"
                        ],
                        "Invocations": [],
                        "Type": "Text",
                        "Statement": "m_Text",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 20
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_Text",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text"
                        ],
                        "Invocations": [],
                        "Type": "Text",
                        "Statement": "m_Text = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 21
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 18
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.Awake()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_Text",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_Text == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 32,
                      "StartLine": 31,
                      "Invocations": [
                        {
                          "Name": "Debug.LogWarning",
                          "FullName": "Debug.LogWarning",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "\"Missing required Text component reference. Use the Inspector window to assign which Text component to increment.\"",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "this",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 32
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 29
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "IncrementText",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.IncrementText()",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_Count",
                        "Type": "int",
                        "Assignment": "1",
                        "Kind": "Assignment",
                        "AssignmentLine": 39,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Count",
                        "AssignmentKind": "AddAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_Count"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Count"
                            ],
                            "Invocations": [],
                            "Type": "int",
                            "Statement": "m_Count",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "int",
                        "Kind": "Use",
                        "UseLine": 39,
                        "UseKind": "Literal",
                        "AssignedTo": "m_Count",
                        "Value": "1",
                        "Operation": "AddAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_Text",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_Text != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 42,
                      "StartLine": 41,
                      "Invocations": [
                        {
                          "Name": "ToString",
                          "FullName": "int.ToString()",
                          "ReturnType": "String",
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": "MetadataFile",
                          "Module": "CommonLanguageRuntimeLibrary",
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 42
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_Text.text",
                            "Type": "?",
                            "Assignment": "m_Count.ToString()",
                            "Kind": "Assignment",
                            "AssignmentLine": 41,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_Text"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text"
                                ],
                                "Invocations": [],
                                "Type": "Text",
                                "Statement": "m_Text",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "m_Count.ToString()",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 41,
                            "UseKind": "Invocation",
                            "AssignedTo": "m_Text.text",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 38
                }
              ],
              "Fields": [
                {
                  "Name": "m_Text",
                  "Type": "Text",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The Text component this behavior uses to display the incremented value.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Text",
                  "Line": 13
                },
                {
                  "Name": "m_Count",
                  "Type": "int",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.IncrementUIText.m_Count",
                  "Line": 24
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 9
            }
          ],
          "Usings": [],
          "Line": 3
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "UnityEngine.UI",
          "Line": 1
        }
      ],
      "Line": 1
    },
    {
      "Name": "StarterAssetsSampleProjectValidation",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Editor\\Scripts\\StarterAssetsSampleProjectValidation.cs",
      "Language": "C#",
      "Loc": 75,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEditor.XR.Interaction.Toolkit.Samples",
          "Loc": 69,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "StarterAssetsSampleProjectValidation",
              "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation",
              "FullInheritanceName": "object",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [],
              "Inheritance": "object",
              "Interfaces": [],
              "Properties": [],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "RegisterProjectValidationRules",
                  "IsEmpty": false,
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.RegisterProjectValidationRules()",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [
                    "InitializeOnLoadMethod"
                  ],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "EditorApplication.delayCall",
                        "Type": "?",
                        "Assignment": "AddRules",
                        "Kind": "Assignment",
                        "AssignmentLine": 28,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "AddAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "AddRules",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 28,
                        "UseKind": "None",
                        "AssignedTo": "EditorApplication.delayCall",
                        "Value": null,
                        "Operation": "AddAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 24
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "AddRules",
                  "IsEmpty": false,
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.AddRules()",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [
                    {
                      "Iterator": "buildTargetGroup",
                      "IteratorType": "var",
                      "Iterable": "s_BuildTargetGroups",
                      "IterableType": "BuildTargetGroup[]",
                      "Invocation": null,
                      "Property": null,
                      "ExpressionIsInvocation": false,
                      "ExpressionIsProperty": false,
                      "Depth": 1,
                      "EndLine": 59,
                      "StartLine": 56,
                      "Invocations": [
                        {
                          "Name": "BuildValidator.AddRules",
                          "FullName": "BuildValidator.AddRules",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "buildTargetGroup",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "s_BuildValidationRules",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 58
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "s_BuildValidationRules.Count",
                          "0"
                        ],
                        "Properties": [
                          "System.Collections.Generic.List<BuildValidationRule>.Count"
                        ],
                        "Fields": [
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.s_BuildValidationRules"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "s_BuildValidationRules.Count == 0",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 54,
                      "StartLine": 34,
                      "Invocations": [
                        {
                          "Name": "Add",
                          "FullName": "System.Collections.Generic.List<BuildValidationRule>.Add(BuildValidationRule)",
                          "ReturnType": "Void",
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": "MetadataFile",
                          "Module": "CommonLanguageRuntimeLibrary",
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "new BuildValidationRule\r\n                    {\r\n                        Category = k_Category,\r\n                        Message = $\"[{k_StarterAssetsSampleName}] Interaction Layer {k_TeleportLayerIndex} should be set to '{k_TeleportLayerName}' for teleportation locomotion.\",\r\n                        FixItMessage = $\"XR Interaction Toolkit samples reserve Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion. Set Interaction Layer {k_TeleportLayerIndex} to '{k_TeleportLayerName}' to prevent conflicts.\",\r\n                        HelpText = \"Please note Interaction Layers are unique to the XR Interaction Toolkit and can be found in Edit > Project Settings > XR Plug-in Management > XR Interaction Toolkit\",\r\n                        FixItAutomatic = InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || IsInteractionLayerTeleport(),\r\n                        Error = false,\r\n                        CheckPredicate = IsInteractionLayerTeleport,\r\n                        FixIt = () =>\r\n                        {\r\n                            if (InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || DisplayTeleportDialog())\r\n                                InteractionLayerSettings.Instance.SetLayerNameAt(k_TeleportLayerIndex, k_TeleportLayerName);\r\n                            else\r\n                                SettingsService.OpenProjectSettings(XRInteractionToolkitSettingsProvider.k_SettingsPath);\r\n                        },\r\n                    }",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 36
                        },
                        {
                          "Name": "InteractionLayerSettings.Instance.IsLayerEmpty",
                          "FullName": "InteractionLayerSettings.Instance.IsLayerEmpty",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "k_TeleportLayerIndex",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 43
                        },
                        {
                          "Name": "IsInteractionLayerTeleport",
                          "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.IsInteractionLayerTeleport()",
                          "ReturnType": "Boolean",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Editor\\Scripts\\StarterAssetsSampleProjectValidation.cs",
                          "DefinitionLine": 62,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 43
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "Category",
                            "Type": null,
                            "Assignment": "k_Category",
                            "Kind": "Assignment",
                            "AssignmentLine": 38,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Message",
                            "Type": null,
                            "Assignment": "$\"[{k_StarterAssetsSampleName}] Interaction Layer {k_TeleportLayerIndex} should be set to '{k_TeleportLayerName}' for teleportation locomotion.\"",
                            "Kind": "Assignment",
                            "AssignmentLine": 39,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "FixItMessage",
                            "Type": null,
                            "Assignment": "$\"XR Interaction Toolkit samples reserve Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion. Set Interaction Layer {k_TeleportLayerIndex} to '{k_TeleportLayerName}' to prevent conflicts.\"",
                            "Kind": "Assignment",
                            "AssignmentLine": 40,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "HelpText",
                            "Type": null,
                            "Assignment": "\"Please note Interaction Layers are unique to the XR Interaction Toolkit and can be found in Edit > Project Settings > XR Plug-in Management > XR Interaction Toolkit\"",
                            "Kind": "Assignment",
                            "AssignmentLine": 41,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "FixItAutomatic",
                            "Type": null,
                            "Assignment": "InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || IsInteractionLayerTeleport()",
                            "Kind": "Assignment",
                            "AssignmentLine": 42,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Error",
                            "Type": null,
                            "Assignment": "false",
                            "Kind": "Assignment",
                            "AssignmentLine": 43,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "CheckPredicate",
                            "Type": null,
                            "Assignment": "IsInteractionLayerTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 44,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "FixIt",
                            "Type": null,
                            "Assignment": "() =>\r\n                        {\r\n                            if (InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || DisplayTeleportDialog())\r\n                                InteractionLayerSettings.Instance.SetLayerNameAt(k_TeleportLayerIndex, k_TeleportLayerName);\r\n                            else\r\n                                SettingsService.OpenProjectSettings(XRInteractionToolkitSettingsProvider.k_SettingsPath);\r\n                        }",
                            "Kind": "Assignment",
                            "AssignmentLine": 45,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "k_Category",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 38,
                            "UseKind": "FieldReference",
                            "AssignedTo": "Category",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "$\"[{k_StarterAssetsSampleName}] Interaction Layer {k_TeleportLayerIndex} should be set to '{k_TeleportLayerName}' for teleportation locomotion.\"",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 39,
                            "UseKind": "InterpolatedString",
                            "AssignedTo": "Message",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "$\"XR Interaction Toolkit samples reserve Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion. Set Interaction Layer {k_TeleportLayerIndex} to '{k_TeleportLayerName}' to prevent conflicts.\"",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 40,
                            "UseKind": "InterpolatedString",
                            "AssignedTo": "FixItMessage",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 41,
                            "UseKind": "Literal",
                            "AssignedTo": "HelpText",
                            "Value": "\"Please note Interaction Layers are unique to the XR Interaction Toolkit and can be found in Edit > Project Settings > XR Plug-in Management > XR Interaction Toolkit\"",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || IsInteractionLayerTeleport()",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 42,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "FixItAutomatic",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex)",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 42,
                                "UseKind": "Invalid",
                                "AssignedTo": "FixItAutomatic",
                                "Value": null,
                                "Operation": "InvocationExpression",
                                "VariablesList": []
                              },
                              {
                                "Name": "IsInteractionLayerTeleport()",
                                "Type": "bool",
                                "Kind": "Use",
                                "UseLine": 42,
                                "UseKind": "Invocation",
                                "AssignedTo": "FixItAutomatic",
                                "Value": null,
                                "Operation": "InvocationExpression",
                                "VariablesList": []
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 43,
                            "UseKind": "Literal",
                            "AssignedTo": "Error",
                            "Value": "false",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "IsInteractionLayerTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 44,
                            "UseKind": "None",
                            "AssignedTo": "CheckPredicate",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "() =>\r\n                        {\r\n                            if (InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || DisplayTeleportDialog())\r\n                                InteractionLayerSettings.Instance.SetLayerNameAt(k_TeleportLayerIndex, k_TeleportLayerName);\r\n                            else\r\n                                SettingsService.OpenProjectSettings(XRInteractionToolkitSettingsProvider.k_SettingsPath);\r\n                        }",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 45,
                            "UseKind": "AnonymousFunction",
                            "AssignedTo": "FixIt",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "InteractionLayerSettings.Instance.IsLayerEmptyk_TeleportLayerIndex",
                              "DisplayTeleportDialog"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerIndex"
                            ],
                            "Invocations": [
                              {
                                "Name": "InteractionLayerSettings.Instance.IsLayerEmpty",
                                "FullName": "InteractionLayerSettings.Instance.IsLayerEmpty",
                                "ReturnType": null,
                                "FileName": null,
                                "DefinitionLine": 1,
                                "Kind": null,
                                "Module": null,
                                "ReferenceFound": false,
                                "Arguments": [
                                  {
                                    "Argument": "k_TeleportLayerIndex",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 48
                              },
                              {
                                "Name": "DisplayTeleportDialog",
                                "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.DisplayTeleportDialog()",
                                "ReturnType": "Boolean",
                                "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Editor\\Scripts\\StarterAssetsSampleProjectValidation.cs",
                                "DefinitionLine": 67,
                                "Kind": "SourceFile",
                                "Module": null,
                                "ReferenceFound": true,
                                "Arguments": [],
                                "Line": 48
                              }
                            ],
                            "Type": "?",
                            "Statement": "InteractionLayerSettings.Instance.IsLayerEmpty(k_TeleportLayerIndex) || DisplayTeleportDialog()",
                            "ExpressionType": "LogicalOrExpression",
                            "Kind": "Literal"
                          },
                          "Else": {
                            "ElseStatement": "SettingsService.OpenProjectSettings(XRInteractionToolkitSettingsProvider.k_SettingsPath);",
                            "EndLine": 51,
                            "StartLine": 50,
                            "Invocations": [
                              {
                                "Name": "SettingsService.OpenProjectSettings",
                                "FullName": "SettingsService.OpenProjectSettings",
                                "ReturnType": null,
                                "FileName": null,
                                "DefinitionLine": 1,
                                "Kind": null,
                                "Module": null,
                                "ReferenceFound": false,
                                "Arguments": [
                                  {
                                    "Argument": "XRInteractionToolkitSettingsProvider.k_SettingsPath",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 51
                              }
                            ],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          },
                          "DanglingElse": false,
                          "Depth": 2,
                          "EndLine": 51,
                          "StartLine": 48,
                          "Invocations": [
                            {
                              "Name": "InteractionLayerSettings.Instance.IsLayerEmpty",
                              "FullName": "InteractionLayerSettings.Instance.IsLayerEmpty",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "k_TeleportLayerIndex",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 48
                            },
                            {
                              "Name": "DisplayTeleportDialog",
                              "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.DisplayTeleportDialog()",
                              "ReturnType": "Boolean",
                              "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Editor\\Scripts\\StarterAssetsSampleProjectValidation.cs",
                              "DefinitionLine": 67,
                              "Kind": "SourceFile",
                              "Module": null,
                              "ReferenceFound": true,
                              "Arguments": [],
                              "Line": 48
                            },
                            {
                              "Name": "InteractionLayerSettings.Instance.SetLayerNameAt",
                              "FullName": "InteractionLayerSettings.Instance.SetLayerNameAt",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "k_TeleportLayerIndex",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "k_TeleportLayerName",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 49
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 32
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "IsInteractionLayerTeleport",
                  "IsEmpty": false,
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.IsInteractionLayerTeleport()",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "bool",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "string.Equals",
                      "FullName": "string.Equals",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex)",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "k_TeleportLayerName",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "StringComparison.OrdinalIgnoreCase",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 64
                    },
                    {
                      "Name": "InteractionLayerSettings.Instance.GetLayerNameAt",
                      "FullName": "InteractionLayerSettings.Instance.GetLayerNameAt",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "k_TeleportLayerIndex",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 64
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerIndex",
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerName",
                          "System.StringComparison.OrdinalIgnoreCase"
                        ],
                        "Invocations": [
                          {
                            "Name": "string.Equals",
                            "FullName": "string.Equals",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex)",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "k_TeleportLayerName",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "StringComparison.OrdinalIgnoreCase",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 64
                          },
                          {
                            "Name": "InteractionLayerSettings.Instance.GetLayerNameAt",
                            "FullName": "InteractionLayerSettings.Instance.GetLayerNameAt",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "k_TeleportLayerIndex",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 64
                          }
                        ],
                        "Type": "bool",
                        "Statement": "string.Equals(InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex), k_TeleportLayerName, StringComparison.OrdinalIgnoreCase)",
                        "ExpressionType": "InvocationExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "bool",
                      "Line": 64
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 62
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "DisplayTeleportDialog",
                  "IsEmpty": false,
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.DisplayTeleportDialog()",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "bool",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "EditorUtility.DisplayDialog",
                      "FullName": "EditorUtility.DisplayDialog",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "\"Fixing Teleport Interaction Layer\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "$\"Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion is currently set to '{InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex)}' instead of '{k_TeleportLayerName}'\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "\"Automatically Replace\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "\"Cancel\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 69
                    },
                    {
                      "Name": "InteractionLayerSettings.Instance.GetLayerNameAt",
                      "FullName": "InteractionLayerSettings.Instance.GetLayerNameAt",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "k_TeleportLayerIndex",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 71
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerIndex",
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerIndex",
                          "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerName"
                        ],
                        "Invocations": [
                          {
                            "Name": "EditorUtility.DisplayDialog",
                            "FullName": "EditorUtility.DisplayDialog",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "\"Fixing Teleport Interaction Layer\"",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "$\"Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion is currently set to '{InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex)}' instead of '{k_TeleportLayerName}'\"",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "\"Automatically Replace\"",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "\"Cancel\"",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 69
                          },
                          {
                            "Name": "InteractionLayerSettings.Instance.GetLayerNameAt",
                            "FullName": "InteractionLayerSettings.Instance.GetLayerNameAt",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "k_TeleportLayerIndex",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 71
                          }
                        ],
                        "Type": "?",
                        "Statement": "EditorUtility.DisplayDialog(\r\n                \"Fixing Teleport Interaction Layer\",\r\n                $\"Interaction Layer {k_TeleportLayerIndex} for teleportation locomotion is currently set to '{InteractionLayerSettings.Instance.GetLayerNameAt(k_TeleportLayerIndex)}' instead of '{k_TeleportLayerName}'\",\r\n                \"Automatically Replace\",\r\n                \"Cancel\")",
                        "ExpressionType": "InvocationExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "?",
                      "Line": 69
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 67
                }
              ],
              "Fields": [
                {
                  "Name": "k_Category",
                  "Type": "string",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "\"XR Interaction Toolkit\"",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_Category",
                  "Line": 14
                },
                {
                  "Name": "k_StarterAssetsSampleName",
                  "Type": "string",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "\"Starter Assets\"",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_StarterAssetsSampleName",
                  "Line": 15
                },
                {
                  "Name": "k_TeleportLayerName",
                  "Type": "string",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "\"Teleport\"",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerName",
                  "Line": 16
                },
                {
                  "Name": "k_TeleportLayerIndex",
                  "Type": "int",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "31",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.k_TeleportLayerIndex",
                  "Line": 17
                },
                {
                  "Name": "s_BuildTargetGroups",
                  "Type": "BuildTargetGroup[]",
                  "Modifiers": [
                    "static",
                    "readonly"
                  ],
                  "Assignment": "((BuildTargetGroup[])Enum.GetValues(typeof(BuildTargetGroup))).Distinct().ToArray()",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.s_BuildTargetGroups",
                  "Line": 19
                },
                {
                  "Name": "s_BuildValidationRules",
                  "Type": "List<BuildValidationRule>",
                  "Modifiers": [
                    "static",
                    "readonly"
                  ],
                  "Assignment": "new List<BuildValidationRule>()",
                  "Attributes": [],
                  "FullName": "UnityEditor.XR.Interaction.Toolkit.Samples.StarterAssetsSampleProjectValidation.s_BuildValidationRules",
                  "Line": 22
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 12
            }
          ],
          "Usings": [],
          "Line": 7
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "System",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "System.Linq",
          "Line": 3
        },
        {
          "Name": "Unity.XR.CoreUtils.Editor",
          "Line": 4
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit",
          "Line": 5
        }
      ],
      "Line": 1
    },
    {
      "Name": "ActionBasedControllerManager",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
      "Language": "C#",
      "Loc": 482,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 475,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "ActionBasedControllerManager",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "smoothMotionEnabled",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SmoothMotionEnabled"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothMotionEnabled"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SmoothMotionEnabled",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 98
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": true,
                      "HasExpressionBody": false,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [
                        {
                          "Name": "UpdateLocomotionActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 427,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 102
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_SmoothMotionEnabled",
                            "Type": "bool",
                            "Assignment": "value",
                            "Kind": "Assignment",
                            "AssignmentLine": 100,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothMotionEnabled",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_SmoothMotionEnabled"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothMotionEnabled"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_SmoothMotionEnabled",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "value",
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 100,
                            "UseKind": "ParameterReference",
                            "AssignedTo": "m_SmoothMotionEnabled",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": null,
                      "Line": 99
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 96
                },
                {
                  "Name": "smoothTurnEnabled",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SmoothTurnEnabled"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothTurnEnabled"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SmoothTurnEnabled",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 108
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": true,
                      "HasExpressionBody": false,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [
                        {
                          "Name": "UpdateLocomotionActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 427,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 112
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_SmoothTurnEnabled",
                            "Type": "bool",
                            "Assignment": "value",
                            "Kind": "Assignment",
                            "AssignmentLine": 110,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothTurnEnabled",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_SmoothTurnEnabled"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothTurnEnabled"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_SmoothTurnEnabled",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "value",
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 110,
                            "UseKind": "ParameterReference",
                            "AssignedTo": "m_SmoothTurnEnabled",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": null,
                      "Line": 109
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 106
                },
                {
                  "Name": "uiScrollingEnabled",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_UIScrollingEnabled"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_UIScrollingEnabled"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_UIScrollingEnabled",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 118
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": true,
                      "HasExpressionBody": false,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [
                        {
                          "Name": "UpdateUIActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 448,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 122
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_UIScrollingEnabled",
                            "Type": "bool",
                            "Assignment": "value",
                            "Kind": "Assignment",
                            "AssignmentLine": 120,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_UIScrollingEnabled",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_UIScrollingEnabled"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_UIScrollingEnabled"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_UIScrollingEnabled",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "value",
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 120,
                            "UseKind": "ParameterReference",
                            "AssignedTo": "m_UIScrollingEnabled",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": null,
                      "Line": 119
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 116
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "SetupInteractorEvents",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetupInteractorEvents()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeActivate",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 154
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeCancel",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 163
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Move",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 169
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Turn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 176
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_SnapTurn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 183
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "teleportModeActivateAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_TeleportModeActivate)",
                        "Kind": "Definition",
                        "DefinitionLine": 153
                      }
                    },
                    {
                      "Variable": {
                        "Name": "teleportModeCancelAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_TeleportModeCancel)",
                        "Kind": "Definition",
                        "DefinitionLine": 162
                      }
                    },
                    {
                      "Variable": {
                        "Name": "moveAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_Move)",
                        "Kind": "Definition",
                        "DefinitionLine": 168
                      }
                    },
                    {
                      "Variable": {
                        "Name": "turnAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_Turn)",
                        "Kind": "Definition",
                        "DefinitionLine": 175
                      }
                    },
                    {
                      "Variable": {
                        "Name": "snapTurnAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_SnapTurn)",
                        "Kind": "Definition",
                        "DefinitionLine": 182
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_RayInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_RayInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 152,
                      "StartLine": 146,
                      "Invocations": [
                        {
                          "Name": "m_RayInteractor.selectEntered.AddListener",
                          "FullName": "m_RayInteractor.selectEntered.AddListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnRaySelectEntered",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 148
                        },
                        {
                          "Name": "m_RayInteractor.selectExited.AddListener",
                          "FullName": "m_RayInteractor.selectExited.AddListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnRaySelectExited",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 149
                        },
                        {
                          "Name": "m_RayInteractor.uiHoverEntered.AddListener",
                          "FullName": "m_RayInteractor.uiHoverEntered.AddListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnUIHoverEntered",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 150
                        },
                        {
                          "Name": "m_RayInteractor.uiHoverExited.AddListener",
                          "FullName": "m_RayInteractor.uiHoverExited.AddListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnUIHoverExited",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 151
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "teleportModeActivateAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "teleportModeActivateAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 161,
                      "StartLine": 155,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.performed",
                            "Type": "?",
                            "Assignment": "OnStartTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 156,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.performed",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 157,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.canceled",
                            "Type": "?",
                            "Assignment": "OnCancelTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 158,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 159,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 156,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.performed",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 157,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.performed",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnCancelTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 158,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.canceled",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 159,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.canceled",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "teleportModeCancelAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "teleportModeCancelAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 167,
                      "StartLine": 164,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "teleportModeCancelAction.performed",
                            "Type": "?",
                            "Assignment": "OnCancelTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 165,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnCancelTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 165,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeCancelAction.performed",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "moveAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "moveAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 174,
                      "StartLine": 170,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "moveAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 171,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "moveAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 172,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 171,
                            "UseKind": "None",
                            "AssignedTo": "moveAction.started",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 172,
                            "UseKind": "None",
                            "AssignedTo": "moveAction.canceled",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "turnAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "turnAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 181,
                      "StartLine": 177,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "turnAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 178,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "turnAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 179,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 178,
                            "UseKind": "None",
                            "AssignedTo": "turnAction.started",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 179,
                            "UseKind": "None",
                            "AssignedTo": "turnAction.canceled",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "snapTurnAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "snapTurnAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 188,
                      "StartLine": 184,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "snapTurnAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 185,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "snapTurnAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 186,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 185,
                            "UseKind": "None",
                            "AssignedTo": "snapTurnAction.started",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 186,
                            "UseKind": "None",
                            "AssignedTo": "snapTurnAction.canceled",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 144
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "TeardownInteractorEvents",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.TeardownInteractorEvents()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeActivate",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 199
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeCancel",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 208
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Move",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 214
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Turn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 221
                    },
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_SnapTurn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 228
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "teleportModeActivateAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_TeleportModeActivate)",
                        "Kind": "Definition",
                        "DefinitionLine": 198
                      }
                    },
                    {
                      "Variable": {
                        "Name": "teleportModeCancelAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_TeleportModeCancel)",
                        "Kind": "Definition",
                        "DefinitionLine": 207
                      }
                    },
                    {
                      "Variable": {
                        "Name": "moveAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_Move)",
                        "Kind": "Definition",
                        "DefinitionLine": 213
                      }
                    },
                    {
                      "Variable": {
                        "Name": "turnAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_Turn)",
                        "Kind": "Definition",
                        "DefinitionLine": 220
                      }
                    },
                    {
                      "Variable": {
                        "Name": "snapTurnAction",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(m_SnapTurn)",
                        "Kind": "Definition",
                        "DefinitionLine": 227
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_RayInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_RayInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 197,
                      "StartLine": 193,
                      "Invocations": [
                        {
                          "Name": "m_RayInteractor.selectEntered.RemoveListener",
                          "FullName": "m_RayInteractor.selectEntered.RemoveListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnRaySelectEntered",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 195
                        },
                        {
                          "Name": "m_RayInteractor.selectExited.RemoveListener",
                          "FullName": "m_RayInteractor.selectExited.RemoveListener",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnRaySelectExited",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 196
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "teleportModeActivateAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "teleportModeActivateAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 206,
                      "StartLine": 200,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.performed",
                            "Type": "?",
                            "Assignment": "OnStartTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 201,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.performed",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 202,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.canceled",
                            "Type": "?",
                            "Assignment": "OnCancelTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 203,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "teleportModeActivateAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 204,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 201,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.performed",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 202,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.performed",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnCancelTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 203,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.canceled",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 204,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeActivateAction.canceled",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "teleportModeCancelAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "teleportModeCancelAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 212,
                      "StartLine": 209,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "teleportModeCancelAction.performed",
                            "Type": "?",
                            "Assignment": "OnCancelTeleport",
                            "Kind": "Assignment",
                            "AssignmentLine": 210,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnCancelTeleport",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 210,
                            "UseKind": "None",
                            "AssignedTo": "teleportModeCancelAction.performed",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "moveAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "moveAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 219,
                      "StartLine": 215,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "moveAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 216,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "moveAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 217,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 216,
                            "UseKind": "None",
                            "AssignedTo": "moveAction.started",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 217,
                            "UseKind": "None",
                            "AssignedTo": "moveAction.canceled",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "turnAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "turnAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 226,
                      "StartLine": 222,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "turnAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 223,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "turnAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 224,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 223,
                            "UseKind": "None",
                            "AssignedTo": "turnAction.started",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 224,
                            "UseKind": "None",
                            "AssignedTo": "turnAction.canceled",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "snapTurnAction",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "snapTurnAction != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 233,
                      "StartLine": 229,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "snapTurnAction.started",
                            "Type": "?",
                            "Assignment": "OnStartLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 230,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "snapTurnAction.canceled",
                            "Type": "?",
                            "Assignment": "OnStopLocomotion",
                            "Kind": "Assignment",
                            "AssignmentLine": 231,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStartLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 230,
                            "UseKind": "None",
                            "AssignedTo": "snapTurnAction.started",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "OnStopLocomotion",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 231,
                            "UseKind": "None",
                            "AssignedTo": "snapTurnAction.canceled",
                            "Value": null,
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 191
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnStartTeleport",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnStartTeleport(InputAction.CallbackContext)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "context",
                      "Type": "InputAction.CallbackContext",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": ".Invoke",
                      "FullName": ".Invoke",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportInteractor",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 246
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_PostponedDeactivateTeleport",
                        "Type": "bool",
                        "Assignment": "false",
                        "Kind": "Assignment",
                        "AssignmentLine": 237,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_PostponedDeactivateTeleport"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_PostponedDeactivateTeleport",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 237,
                        "UseKind": "Literal",
                        "AssignedTo": "m_PostponedDeactivateTeleport",
                        "Value": "false",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_TeleportInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_TeleportInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 241,
                      "StartLine": 240,
                      "Invocations": [
                        {
                          "Name": "m_TeleportInteractor.gameObject.SetActive",
                          "FullName": "m_TeleportInteractor.gameObject.SetActive",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "true",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 241
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_RayInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_RayInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 244,
                      "StartLine": 243,
                      "Invocations": [
                        {
                          "Name": "m_RayInteractor.gameObject.SetActive",
                          "FullName": "m_RayInteractor.gameObject.SetActive",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "false",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 244
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 236
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnCancelTeleport",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnCancelTeleport(InputAction.CallbackContext)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "context",
                      "Type": "InputAction.CallbackContext",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": ".Invoke",
                      "FullName": ".Invoke",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_RayInteractor",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 260
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_PostponedDeactivateTeleport",
                        "Type": "bool",
                        "Assignment": "true",
                        "Kind": "Assignment",
                        "AssignmentLine": 254,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_PostponedDeactivateTeleport"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_PostponedDeactivateTeleport",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 254,
                        "UseKind": "Literal",
                        "AssignedTo": "m_PostponedDeactivateTeleport",
                        "Value": "true",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_RayInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_RayInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 258,
                      "StartLine": 257,
                      "Invocations": [
                        {
                          "Name": "m_RayInteractor.gameObject.SetActive",
                          "FullName": "m_RayInteractor.gameObject.SetActive",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "true",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 258
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 249
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnStartLocomotion",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnStartLocomotion(InputAction.CallbackContext)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "context",
                      "Type": "InputAction.CallbackContext",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "m_LocomotionUsers.Add",
                      "FullName": "m_LocomotionUsers.Add",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "context.action",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 266
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 264
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnStopLocomotion",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnStopLocomotion(InputAction.CallbackContext)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "context",
                      "Type": "InputAction.CallbackContext",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "m_LocomotionUsers.Remove",
                      "FullName": "m_LocomotionUsers.Remove",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "context.action",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 271
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_LocomotionUsers.Count",
                          "0",
                          "m_HoveringScrollableUI"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_LocomotionUsers",
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_LocomotionUsers.Count == 0 && m_HoveringScrollableUI",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 277,
                      "StartLine": 273,
                      "Invocations": [
                        {
                          "Name": "DisableLocomotionActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableLocomotionActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 439,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 275
                        },
                        {
                          "Name": "UpdateUIActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 448,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 276
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 269
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnRaySelectEntered",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnRaySelectEntered(SelectEnterEventArgs)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "args",
                      "Type": "SelectEnterEventArgs",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "DisableLocomotionActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableLocomotionActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 439,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 283
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 280
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnRaySelectExited",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnRaySelectExited(SelectExitEventArgs)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "args",
                      "Type": "SelectExitEventArgs",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "UpdateLocomotionActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 427,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 289
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 286
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnUIHoverEntered",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnUIHoverEntered(UIHoverEventArgs)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "args",
                      "Type": "UIHoverEventArgs",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "UpdateUIActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 448,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 295
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_HoveringScrollableUI",
                        "Type": "bool",
                        "Assignment": "m_UIScrollingEnabled && args.deviceModel.isScrollable",
                        "Kind": "Assignment",
                        "AssignmentLine": 293,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_HoveringScrollableUI"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_HoveringScrollableUI",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_UIScrollingEnabled && args.deviceModel.isScrollable",
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 293,
                        "UseKind": "BinaryOperator",
                        "AssignedTo": "m_HoveringScrollableUI",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": [
                          {
                            "Name": "m_UIScrollingEnabled",
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 293,
                            "UseKind": "FieldReference",
                            "AssignedTo": "m_HoveringScrollableUI",
                            "Value": null,
                            "Operation": "IdentifierName",
                            "VariablesList": []
                          },
                          {
                            "Name": "args.deviceModel.isScrollable",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 293,
                            "UseKind": "Invalid",
                            "AssignedTo": "m_HoveringScrollableUI",
                            "Value": null,
                            "Operation": "SimpleMemberAccessExpression",
                            "VariablesList": []
                          }
                        ]
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_HoveringScrollableUI",
                          "m_LocomotionUsers.Count",
                          "0"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI",
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_LocomotionUsers"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_HoveringScrollableUI && m_LocomotionUsers.Count == 0",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 302,
                      "StartLine": 298,
                      "Invocations": [
                        {
                          "Name": "DisableLocomotionActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableLocomotionActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 439,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 301
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 292
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnUIHoverExited",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnUIHoverExited(UIHoverEventArgs)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "args",
                      "Type": "UIHoverEventArgs",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "UpdateUIActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 448,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 308
                    },
                    {
                      "Name": "UpdateLocomotionActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 427,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 311
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_HoveringScrollableUI",
                        "Type": "bool",
                        "Assignment": "false",
                        "Kind": "Assignment",
                        "AssignmentLine": 306,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_HoveringScrollableUI"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_HoveringScrollableUI",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 306,
                        "UseKind": "Literal",
                        "AssignedTo": "m_HoveringScrollableUI",
                        "Value": "false",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 305
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.Awake()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "OnAfterInteractionEvents",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnAfterInteractionEvents()",
                      "ReturnType": "IEnumerator",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 409,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 316
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_AfterInteractionEventsRoutine",
                        "Type": "System.Collections.IEnumerator",
                        "Assignment": "OnAfterInteractionEvents()",
                        "Kind": "Assignment",
                        "AssignmentLine": 315,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_AfterInteractionEventsRoutine",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_AfterInteractionEventsRoutine"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_AfterInteractionEventsRoutine"
                            ],
                            "Invocations": [],
                            "Type": "System.Collections.IEnumerator",
                            "Statement": "m_AfterInteractionEventsRoutine",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "OnAfterInteractionEvents()",
                        "Type": "System.Collections.IEnumerator",
                        "Kind": "Use",
                        "UseLine": 315,
                        "UseKind": "Invocation",
                        "AssignedTo": "m_AfterInteractionEventsRoutine",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 314
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnEnable",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnEnable()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "SetupInteractorEvents",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetupInteractorEvents()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 144,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 329
                    },
                    {
                      "Name": "StartCoroutine",
                      "FullName": "StartCoroutine",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_AfterInteractionEventsRoutine",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 334
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_TeleportInteractor",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportInteractor"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_TeleportInteractor != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 322,
                      "StartLine": 321,
                      "Invocations": [
                        {
                          "Name": "m_TeleportInteractor.gameObject.SetActive",
                          "FullName": "m_TeleportInteractor.gameObject.SetActive",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "false",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 322
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_StartCalled"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_StartCalled"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_StartCalled",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 327,
                      "StartLine": 326,
                      "Invocations": [
                        {
                          "Name": "UpdateLocomotionActions",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 427,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 327
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 319
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDisable",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnDisable()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "TeardownInteractorEvents",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.TeardownInteractorEvents()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 191,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 339
                    },
                    {
                      "Name": "StopCoroutine",
                      "FullName": "StopCoroutine",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_AfterInteractionEventsRoutine",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 341
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 337
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Start",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.Start()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "UpdateLocomotionActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 427,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 350
                    },
                    {
                      "Name": "UpdateUIActions",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 448,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 351
                    },
                    {
                      "Name": "m_ManipulationInteractionGroup.GetGroupMembers",
                      "FullName": "m_ManipulationInteractionGroup.GetGroupMembers",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "s_GroupMembers",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 363
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "directInteractorIndex",
                        "Type": "var",
                        "FullName": "int",
                        "Assignment": "k_InteractorNotInGroup",
                        "Kind": "Definition",
                        "DefinitionLine": 360
                      }
                    },
                    {
                      "Variable": {
                        "Name": "rayInteractorIndex",
                        "Type": "var",
                        "FullName": "int",
                        "Assignment": "k_InteractorNotInGroup",
                        "Kind": "Definition",
                        "DefinitionLine": 361
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_StartCalled",
                        "Type": "bool",
                        "Assignment": "true",
                        "Kind": "Assignment",
                        "AssignmentLine": 345,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_StartCalled",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_StartCalled"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_StartCalled"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_StartCalled",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 345,
                        "UseKind": "Literal",
                        "AssignedTo": "m_StartCalled",
                        "Value": "true",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "i",
                          "s_GroupMembers.Count"
                        ],
                        "Properties": [
                          "System.Collections.Generic.List<IXRGroupMember>.Count"
                        ],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.s_GroupMembers"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "i < s_GroupMembers.Count",
                        "ExpressionType": "LessThanExpression",
                        "Kind": "Method"
                      },
                      "Declarations": [
                        "i"
                      ],
                      "Initializers": [],
                      "Incrementors": [
                        "++i"
                      ],
                      "Depth": 1,
                      "EndLine": 371,
                      "StartLine": 364,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "i",
                            "Type": "var",
                            "FullName": "int",
                            "Assignment": "0",
                            "Kind": "Definition",
                            "DefinitionLine": 363
                          }
                        },
                        {
                          "Variable": {
                            "Name": "groupMember",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "s_GroupMembers[i]",
                            "Kind": "Definition",
                            "DefinitionLine": 365
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "ReferenceEqualsgroupMember,",
                              "m_DirectInteractor"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_DirectInteractor"
                            ],
                            "Invocations": [
                              {
                                "Name": "ReferenceEquals",
                                "FullName": "ReferenceEquals",
                                "ReturnType": null,
                                "FileName": null,
                                "DefinitionLine": 1,
                                "Kind": null,
                                "Module": null,
                                "ReferenceFound": false,
                                "Arguments": [
                                  {
                                    "Argument": "groupMember",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  },
                                  {
                                    "Argument": "m_DirectInteractor",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 367
                              }
                            ],
                            "Type": "bool",
                            "Statement": "ReferenceEquals(groupMember, m_DirectInteractor)",
                            "ExpressionType": "InvocationExpression",
                            "Kind": "Literal"
                          },
                          "Else": {
                            "ElseStatement": "if (ReferenceEquals(groupMember, m_RayInteractor))\r\n                    rayInteractorIndex = i;",
                            "EndLine": 370,
                            "StartLine": 369,
                            "Invocations": [],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [
                              {
                                "Condition": {
                                  "Tokens": [
                                    "ReferenceEqualsgroupMember,",
                                    "m_RayInteractor"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                                  ],
                                  "Invocations": [
                                    {
                                      "Name": "ReferenceEquals",
                                      "FullName": "ReferenceEquals",
                                      "ReturnType": null,
                                      "FileName": null,
                                      "DefinitionLine": 1,
                                      "Kind": null,
                                      "Module": null,
                                      "ReferenceFound": false,
                                      "Arguments": [
                                        {
                                          "Argument": "groupMember",
                                          "IsInvocation": false,
                                          "IsLiteral": false
                                        },
                                        {
                                          "Argument": "m_RayInteractor",
                                          "IsInvocation": false,
                                          "IsLiteral": false
                                        }
                                      ],
                                      "Line": 369
                                    }
                                  ],
                                  "Type": "bool",
                                  "Statement": "ReferenceEquals(groupMember, m_RayInteractor)",
                                  "ExpressionType": "InvocationExpression",
                                  "Kind": "Literal"
                                },
                                "Else": null,
                                "DanglingElse": true,
                                "Depth": 3,
                                "EndLine": 370,
                                "StartLine": 369,
                                "Invocations": [
                                  {
                                    "Name": "ReferenceEquals",
                                    "FullName": "ReferenceEquals",
                                    "ReturnType": null,
                                    "FileName": null,
                                    "DefinitionLine": 1,
                                    "Kind": null,
                                    "Module": null,
                                    "ReferenceFound": false,
                                    "Arguments": [
                                      {
                                        "Argument": "groupMember",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      },
                                      {
                                        "Argument": "m_RayInteractor",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      }
                                    ],
                                    "Line": 369
                                  }
                                ],
                                "Variables": [
                                  {
                                    "Variable": {
                                      "Name": "rayInteractorIndex",
                                      "Type": "int",
                                      "Assignment": "i",
                                      "Kind": "Assignment",
                                      "AssignmentLine": 369,
                                      "VariableKind": "Local",
                                      "FullName": "rayInteractorIndex",
                                      "AssignmentKind": "SimpleAssignmentExpression",
                                      "Cascades": []
                                    }
                                  },
                                  {
                                    "Variable": {
                                      "Name": "i",
                                      "Type": "int",
                                      "Kind": "Use",
                                      "UseLine": 369,
                                      "UseKind": "LocalReference",
                                      "AssignedTo": "rayInteractorIndex",
                                      "Value": null,
                                      "Operation": "SimpleAssignmentExpression",
                                      "VariablesList": []
                                    }
                                  }
                                ],
                                "WhileBlocks": [],
                                "ForBlocks": [],
                                "IfBlocks": [],
                                "SwitchBlocks": [],
                                "ForEachBlocks": [],
                                "ElseBlocks": [],
                                "TryBlocks": [],
                                "Returns": []
                              }
                            ],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          },
                          "DanglingElse": false,
                          "Depth": 2,
                          "EndLine": 370,
                          "StartLine": 367,
                          "Invocations": [
                            {
                              "Name": "ReferenceEquals",
                              "FullName": "ReferenceEquals",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "groupMember",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "m_DirectInteractor",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 367
                            }
                          ],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "directInteractorIndex",
                                "Type": "int",
                                "Assignment": "i",
                                "Kind": "Assignment",
                                "AssignmentLine": 367,
                                "VariableKind": "Local",
                                "FullName": "directInteractorIndex",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": []
                              }
                            },
                            {
                              "Variable": {
                                "Name": "i",
                                "Type": "int",
                                "Kind": "Use",
                                "UseLine": 367,
                                "UseKind": "LocalReference",
                                "AssignedTo": "directInteractorIndex",
                                "Value": null,
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_ManipulationInteractionGroup",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_ManipulationInteractionGroup"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ManipulationInteractionGroup == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 357,
                      "StartLine": 353,
                      "Invocations": [
                        {
                          "Name": "Debug.LogError",
                          "FullName": "Debug.LogError",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "\"Missing required Manipulation Interaction Group reference. Use the Inspector window to assign the XR Interaction Group component reference.\"",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "this",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 355
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 356
                        }
                      ]
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "directInteractorIndex",
                          "k_InteractorNotInGroup"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.k_InteractorNotInGroup"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "directInteractorIndex == k_InteractorNotInGroup",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Method"
                      },
                      "Else": {
                        "ElseStatement": "{\r\n                if (rayInteractorIndex == k_InteractorNotInGroup)\r\n                {\r\n                    // Must add Ray interactor to group\r\n                    if (m_RayInteractor != null)\r\n                        m_ManipulationInteractionGroup.AddGroupMember(m_RayInteractor);\r\n                }\r\n                else\r\n                {\r\n                    // Must make sure Direct interactor is ordered before the Ray interactor\r\n                    if (rayInteractorIndex < directInteractorIndex)\r\n                    {\r\n                        m_ManipulationInteractionGroup.MoveGroupMemberTo(m_DirectInteractor, rayInteractorIndex);\r\n                    }\r\n                }\r\n            }",
                        "EndLine": 406,
                        "StartLine": 390,
                        "Invocations": [],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [
                          {
                            "Condition": {
                              "Tokens": [
                                "rayInteractorIndex",
                                "k_InteractorNotInGroup"
                              ],
                              "Properties": [],
                              "Fields": [
                                "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.k_InteractorNotInGroup"
                              ],
                              "Invocations": [],
                              "Type": "bool",
                              "Statement": "rayInteractorIndex == k_InteractorNotInGroup",
                              "ExpressionType": "EqualsExpression",
                              "Kind": "Method"
                            },
                            "Else": {
                              "ElseStatement": "{\r\n                    // Must make sure Direct interactor is ordered before the Ray interactor\r\n                    if (rayInteractorIndex < directInteractorIndex)\r\n                    {\r\n                        m_ManipulationInteractionGroup.MoveGroupMemberTo(m_DirectInteractor, rayInteractorIndex);\r\n                    }\r\n                }",
                              "EndLine": 405,
                              "StartLine": 398,
                              "Invocations": [],
                              "Variables": [],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [
                                {
                                  "Condition": {
                                    "Tokens": [
                                      "rayInteractorIndex",
                                      "directInteractorIndex"
                                    ],
                                    "Properties": [],
                                    "Fields": [],
                                    "Invocations": [],
                                    "Type": "bool",
                                    "Statement": "rayInteractorIndex < directInteractorIndex",
                                    "ExpressionType": "LessThanExpression",
                                    "Kind": "Method"
                                  },
                                  "Else": null,
                                  "DanglingElse": true,
                                  "Depth": 3,
                                  "EndLine": 404,
                                  "StartLine": 401,
                                  "Invocations": [
                                    {
                                      "Name": "m_ManipulationInteractionGroup.MoveGroupMemberTo",
                                      "FullName": "m_ManipulationInteractionGroup.MoveGroupMemberTo",
                                      "ReturnType": null,
                                      "FileName": null,
                                      "DefinitionLine": 1,
                                      "Kind": null,
                                      "Module": null,
                                      "ReferenceFound": false,
                                      "Arguments": [
                                        {
                                          "Argument": "m_DirectInteractor",
                                          "IsInvocation": false,
                                          "IsLiteral": false
                                        },
                                        {
                                          "Argument": "rayInteractorIndex",
                                          "IsInvocation": false,
                                          "IsLiteral": false
                                        }
                                      ],
                                      "Line": 403
                                    }
                                  ],
                                  "Variables": [],
                                  "WhileBlocks": [],
                                  "ForBlocks": [],
                                  "IfBlocks": [],
                                  "SwitchBlocks": [],
                                  "ForEachBlocks": [],
                                  "ElseBlocks": [],
                                  "TryBlocks": [],
                                  "Returns": []
                                }
                              ],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            },
                            "DanglingElse": false,
                            "Depth": 2,
                            "EndLine": 405,
                            "StartLine": 392,
                            "Invocations": [],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [
                              {
                                "Condition": {
                                  "Tokens": [
                                    "m_RayInteractor",
                                    "null"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                                  ],
                                  "Invocations": [],
                                  "Type": "bool",
                                  "Statement": "m_RayInteractor != null",
                                  "ExpressionType": "NotEqualsExpression",
                                  "Kind": "Literal"
                                },
                                "Else": null,
                                "DanglingElse": true,
                                "Depth": 3,
                                "EndLine": 396,
                                "StartLine": 395,
                                "Invocations": [
                                  {
                                    "Name": "m_ManipulationInteractionGroup.AddGroupMember",
                                    "FullName": "m_ManipulationInteractionGroup.AddGroupMember",
                                    "ReturnType": null,
                                    "FileName": null,
                                    "DefinitionLine": 1,
                                    "Kind": null,
                                    "Module": null,
                                    "ReferenceFound": false,
                                    "Arguments": [
                                      {
                                        "Argument": "m_RayInteractor",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      }
                                    ],
                                    "Line": 396
                                  }
                                ],
                                "Variables": [],
                                "WhileBlocks": [],
                                "ForBlocks": [],
                                "IfBlocks": [],
                                "SwitchBlocks": [],
                                "ForEachBlocks": [],
                                "ElseBlocks": [],
                                "TryBlocks": [],
                                "Returns": []
                              }
                            ],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          }
                        ],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 406,
                      "StartLine": 373,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "rayInteractorIndex",
                              "k_InteractorNotInGroup"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.k_InteractorNotInGroup"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "rayInteractorIndex == k_InteractorNotInGroup",
                            "ExpressionType": "EqualsExpression",
                            "Kind": "Method"
                          },
                          "Else": {
                            "ElseStatement": "if (m_DirectInteractor != null)\r\n                {\r\n                    m_ManipulationInteractionGroup.MoveGroupMemberTo(m_DirectInteractor, rayInteractorIndex);\r\n                }",
                            "EndLine": 388,
                            "StartLine": 385,
                            "Invocations": [],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [
                              {
                                "Condition": {
                                  "Tokens": [
                                    "m_DirectInteractor",
                                    "null"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_DirectInteractor"
                                  ],
                                  "Invocations": [],
                                  "Type": "bool",
                                  "Statement": "m_DirectInteractor != null",
                                  "ExpressionType": "NotEqualsExpression",
                                  "Kind": "Literal"
                                },
                                "Else": null,
                                "DanglingElse": true,
                                "Depth": 3,
                                "EndLine": 388,
                                "StartLine": 385,
                                "Invocations": [
                                  {
                                    "Name": "m_ManipulationInteractionGroup.MoveGroupMemberTo",
                                    "FullName": "m_ManipulationInteractionGroup.MoveGroupMemberTo",
                                    "ReturnType": null,
                                    "FileName": null,
                                    "DefinitionLine": 1,
                                    "Kind": null,
                                    "Module": null,
                                    "ReferenceFound": false,
                                    "Arguments": [
                                      {
                                        "Argument": "m_DirectInteractor",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      },
                                      {
                                        "Argument": "rayInteractorIndex",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      }
                                    ],
                                    "Line": 387
                                  }
                                ],
                                "Variables": [],
                                "WhileBlocks": [],
                                "ForBlocks": [],
                                "IfBlocks": [],
                                "SwitchBlocks": [],
                                "ForEachBlocks": [],
                                "ElseBlocks": [],
                                "TryBlocks": [],
                                "Returns": []
                              }
                            ],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          },
                          "DanglingElse": false,
                          "Depth": 2,
                          "EndLine": 388,
                          "StartLine": 376,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_DirectInteractor",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_DirectInteractor"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_DirectInteractor != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 3,
                              "EndLine": 380,
                              "StartLine": 379,
                              "Invocations": [
                                {
                                  "Name": "m_ManipulationInteractionGroup.AddGroupMember",
                                  "FullName": "m_ManipulationInteractionGroup.AddGroupMember",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [
                                    {
                                      "Argument": "m_DirectInteractor",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 380
                                }
                              ],
                              "Variables": [],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            },
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_RayInteractor",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_RayInteractor != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 3,
                              "EndLine": 383,
                              "StartLine": 382,
                              "Invocations": [
                                {
                                  "Name": "m_ManipulationInteractionGroup.AddGroupMember",
                                  "FullName": "m_ManipulationInteractionGroup.AddGroupMember",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [
                                    {
                                      "Argument": "m_RayInteractor",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 383
                                }
                              ],
                              "Variables": [],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 344
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnAfterInteractionEvents",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.OnAfterInteractionEvents()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "IEnumerator",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "true"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "true",
                        "ExpressionType": "TrueLiteralExpression",
                        "Kind": "Literal"
                      },
                      "Depth": 1,
                      "EndLine": 424,
                      "StartLine": 411,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "m_PostponedDeactivateTeleport"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_PostponedDeactivateTeleport",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 423,
                          "StartLine": 417,
                          "Invocations": [],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "m_PostponedDeactivateTeleport",
                                "Type": "bool",
                                "Assignment": "false",
                                "Kind": "Assignment",
                                "AssignmentLine": 421,
                                "VariableKind": "Field",
                                "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": [
                                  {
                                    "Tokens": [
                                      "m_PostponedDeactivateTeleport"
                                    ],
                                    "Properties": [],
                                    "Fields": [
                                      "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport"
                                    ],
                                    "Invocations": [],
                                    "Type": "bool",
                                    "Statement": "m_PostponedDeactivateTeleport",
                                    "ExpressionType": "IdentifierName",
                                    "Kind": "Field"
                                  }
                                ]
                              }
                            },
                            {
                              "Variable": {
                                "Name": null,
                                "Type": "bool",
                                "Kind": "Use",
                                "UseLine": 421,
                                "UseKind": "Literal",
                                "AssignedTo": "m_PostponedDeactivateTeleport",
                                "Value": "false",
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_TeleportInteractor",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportInteractor"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_TeleportInteractor != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 3,
                              "EndLine": 420,
                              "StartLine": 419,
                              "Invocations": [
                                {
                                  "Name": "m_TeleportInteractor.gameObject.SetActive",
                                  "FullName": "m_TeleportInteractor.gameObject.SetActive",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [
                                    {
                                      "Argument": "false",
                                      "IsInvocation": false,
                                      "IsLiteral": false
                                    }
                                  ],
                                  "Line": 420
                                }
                              ],
                              "Variables": [],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 409
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "UpdateLocomotionActions",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateLocomotionActions()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Move",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_SmoothMotionEnabled",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 430
                    },
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeActivate",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "!m_SmoothMotionEnabled",
                          "IsInvocation": true,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 431
                    },
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeCancel",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "!m_SmoothMotionEnabled",
                          "IsInvocation": true,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 432
                    },
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Turn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "!m_SmoothMotionEnabled && m_SmoothTurnEnabled",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 435
                    },
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_SnapTurn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "!m_SmoothMotionEnabled && !m_SmoothTurnEnabled",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 436
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 427
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "DisableLocomotionActions",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableLocomotionActions()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "DisableAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 468,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Move",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 441
                    },
                    {
                      "Name": "DisableAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 468,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeActivate",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 442
                    },
                    {
                      "Name": "DisableAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 468,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_TeleportModeCancel",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 443
                    },
                    {
                      "Name": "DisableAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 468,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_Turn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 444
                    },
                    {
                      "Name": "DisableAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 468,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_SnapTurn",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 445
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 439
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "UpdateUIActions",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.UpdateUIActions()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "SetEnabled",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 453,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "m_UIScroll",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_UIScrollingEnabled && m_HoveringScrollableUI && m_LocomotionUsers.Count == 0",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 450
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 448
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "SetEnabled",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.SetEnabled(InputActionReference, bool)",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "actionReference",
                      "Type": "InputActionReference",
                      "Assignment": null,
                      "Attributes": []
                    },
                    {
                      "Name": "enabled",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "enabled"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "enabled",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Parameter"
                      },
                      "Else": {
                        "ElseStatement": "DisableAction(actionReference);",
                        "EndLine": 458,
                        "StartLine": 457,
                        "Invocations": [
                          {
                            "Name": "DisableAction",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                            "ReturnType": "Void",
                            "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                            "DefinitionLine": 468,
                            "Kind": "SourceFile",
                            "Module": null,
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "actionReference",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 458
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 458,
                      "StartLine": 455,
                      "Invocations": [
                        {
                          "Name": "EnableAction",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.EnableAction(InputActionReference)",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                          "DefinitionLine": 461,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "actionReference",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 456
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 453
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "EnableAction",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.EnableAction(InputActionReference)",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "actionReference",
                      "Type": "InputActionReference",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "actionReference",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 463
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "action",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(actionReference)",
                        "Kind": "Definition",
                        "DefinitionLine": 462
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "action",
                          "null",
                          "action.enabled"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "?",
                        "Statement": "action != null && !action.enabled",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 465,
                      "StartLine": 464,
                      "Invocations": [
                        {
                          "Name": "action.Enable",
                          "FullName": "action.Enable",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [],
                          "Line": 465
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 461
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "DisableAction",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.DisableAction(InputActionReference)",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "actionReference",
                      "Type": "InputActionReference",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "GetInputAction",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                      "ReturnType": "InputAction",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ActionBasedControllerManager.cs",
                      "DefinitionLine": 475,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "actionReference",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 470
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "action",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "GetInputAction(actionReference)",
                        "Kind": "Definition",
                        "DefinitionLine": 469
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "action",
                          "null",
                          "action.enabled"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "?",
                        "Statement": "action != null && action.enabled",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 472,
                      "StartLine": 471,
                      "Invocations": [
                        {
                          "Name": "action.Disable",
                          "FullName": "action.Disable",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [],
                          "Line": 472
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 468
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "GetInputAction",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.GetInputAction(InputActionReference)",
                  "Modifiers": [
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "InputAction",
                  "Parameters": [
                    {
                      "Name": "actionReference",
                      "Type": "InputActionReference",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "?",
                        "Statement": "actionReference != null ? actionReference.action : null",
                        "ExpressionType": "ConditionalExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "?",
                      "Line": 478
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 475
                }
              ],
              "Fields": [
                {
                  "Name": "k_UpdateOrder",
                  "Type": "int",
                  "Modifiers": [
                    "public",
                    "const"
                  ],
                  "Assignment": "XRInteractionUpdateOrder.k_Controllers - 1",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.k_UpdateOrder",
                  "Line": 24
                },
                {
                  "Name": "m_ManipulationInteractionGroup",
                  "Type": "XRInteractionGroup",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"Interactors\")",
                    "SerializeField",
                    "Tooltip(\"The GameObject containing the interaction group used for direct and distant manipulation.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_ManipulationInteractionGroup",
                  "Line": 31
                },
                {
                  "Name": "m_DirectInteractor",
                  "Type": "XRDirectInteractor",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The GameObject containing the interactor used for direct manipulation.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_DirectInteractor",
                  "Line": 35
                },
                {
                  "Name": "m_RayInteractor",
                  "Type": "XRRayInteractor",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The GameObject containing the interactor used for distant/ray manipulation.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractor",
                  "Line": 39
                },
                {
                  "Name": "m_TeleportInteractor",
                  "Type": "XRRayInteractor",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The GameObject containing the interactor used for teleportation.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportInteractor",
                  "Line": 43
                },
                {
                  "Name": "m_TeleportModeActivate",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"Controller Actions\")",
                    "SerializeField",
                    "Tooltip(\"The reference to the action to start the teleport aiming mode for this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportModeActivate",
                  "Line": 50
                },
                {
                  "Name": "m_TeleportModeCancel",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The reference to the action to cancel the teleport aiming mode for this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_TeleportModeCancel",
                  "Line": 54
                },
                {
                  "Name": "m_Turn",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The reference to the action of continuous turning the XR Origin with this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_Turn",
                  "Line": 58
                },
                {
                  "Name": "m_SnapTurn",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The reference to the action of snap turning the XR Origin with this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SnapTurn",
                  "Line": 62
                },
                {
                  "Name": "m_Move",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The reference to the action of moving the XR Origin with this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_Move",
                  "Line": 66
                },
                {
                  "Name": "m_UIScroll",
                  "Type": "InputActionReference",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The reference to the action of scrolling UI with this controller.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_UIScroll",
                  "Line": 70
                },
                {
                  "Name": "m_SmoothMotionEnabled",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"Locomotion Settings\")",
                    "SerializeField",
                    "Tooltip(\"If true, continuous movement will be enabled. If false, teleport will enabled.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothMotionEnabled",
                  "Line": 77
                },
                {
                  "Name": "m_SmoothTurnEnabled",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"If true, continuous turn will be enabled. If false, snap turn will be enabled. Note: If smooth motion is enabled and enable strafe is enabled on the continuous move provider, turn will be overriden in favor of strafe.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_SmoothTurnEnabled",
                  "Line": 81
                },
                {
                  "Name": "m_UIScrollingEnabled",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"UI Settings\")",
                    "SerializeField",
                    "Tooltip(\"If true, UI scrolling will be enabled.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_UIScrollingEnabled",
                  "Line": 88
                },
                {
                  "Name": "m_RayInteractorChanged",
                  "Type": "UnityEvent<IXRRayProvider>",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"Mediation Events\")",
                    "SerializeField",
                    "Tooltip(\"Event fired when the active ray interactor changes between interaction and teleport.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_RayInteractorChanged",
                  "Line": 94
                },
                {
                  "Name": "m_StartCalled",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_StartCalled",
                  "Line": 126
                },
                {
                  "Name": "m_PostponedDeactivateTeleport",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_PostponedDeactivateTeleport",
                  "Line": 127
                },
                {
                  "Name": "m_HoveringScrollableUI",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_HoveringScrollableUI",
                  "Line": 128
                },
                {
                  "Name": "k_InteractorNotInGroup",
                  "Type": "int",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "-1",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.k_InteractorNotInGroup",
                  "Line": 130
                },
                {
                  "Name": "m_AfterInteractionEventsRoutine",
                  "Type": "IEnumerator",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_AfterInteractionEventsRoutine",
                  "Line": 132
                },
                {
                  "Name": "m_LocomotionUsers",
                  "Type": "HashSet<InputAction>",
                  "Modifiers": [],
                  "Assignment": "new HashSet<InputAction>()",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.m_LocomotionUsers",
                  "Line": 133
                },
                {
                  "Name": "s_GroupMembers",
                  "Type": "List<IXRGroupMember>",
                  "Modifiers": [
                    "static",
                    "readonly"
                  ],
                  "Assignment": "new List<IXRGroupMember>()",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ActionBasedControllerManager.s_GroupMembers",
                  "Line": 138
                }
              ],
              "Constructors": [],
              "Attributes": [
                "AddComponentMenu",
                "DefaultExecutionOrder"
              ],
              "Line": 12
            }
          ],
          "Usings": [],
          "Line": 7
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine.Events",
          "Line": 3
        },
        {
          "Name": "UnityEngine.InputSystem",
          "Line": 4
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit.UI",
          "Line": 5
        }
      ],
      "Line": 1
    },
    {
      "Name": "DestroySelf",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\DestroySelf.cs",
      "Language": "C#",
      "Loc": 28,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 28,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "DestroySelf",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DestroySelf",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "lifetime",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_Lifetime"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DestroySelf.m_Lifetime"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_Lifetime",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 17
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_Lifetime",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DestroySelf.m_Lifetime"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_Lifetime = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 18
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 15
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Start",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DestroySelf.Start()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "Destroy",
                      "FullName": "Destroy",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "gameObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_Lifetime",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 26
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 24
                }
              ],
              "Fields": [
                {
                  "Name": "m_Lifetime",
                  "Type": "float",
                  "Modifiers": [],
                  "Assignment": "0.25f",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The amount of time, in seconds, to wait after Start before destroying the GameObject.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DestroySelf.m_Lifetime",
                  "Line": 10
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 6
            }
          ],
          "Usings": [],
          "Line": 1
        }
      ],
      "Classes": [],
      "Usings": [],
      "Line": 1
    },
    {
      "Name": "DynamicMoveProvider",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\DynamicMoveProvider.cs",
      "Language": "C#",
      "Loc": 189,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 185,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "DynamicMoveProvider",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider",
              "FullInheritanceName": "ActionBasedContinuousMoveProvider",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "ActionBasedContinuousMoveProvider",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "headTransform",
                  "Type": "Transform",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_HeadTransform"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_HeadTransform",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 41
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_HeadTransform",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_HeadTransform = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 42
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 39
                },
                {
                  "Name": "leftControllerTransform",
                  "Type": "Transform",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_LeftControllerTransform"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftControllerTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_LeftControllerTransform",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 54
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_LeftControllerTransform",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftControllerTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_LeftControllerTransform = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 55
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 52
                },
                {
                  "Name": "rightControllerTransform",
                  "Type": "Transform",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_RightControllerTransform"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightControllerTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_RightControllerTransform",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 64
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_RightControllerTransform",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightControllerTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_RightControllerTransform = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 65
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 62
                },
                {
                  "Name": "leftHandMovementDirection",
                  "Type": "MovementDirection",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_LeftHandMovementDirection"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_LeftHandMovementDirection",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 78
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_LeftHandMovementDirection",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_LeftHandMovementDirection = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 79
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 76
                },
                {
                  "Name": "rightHandMovementDirection",
                  "Type": "MovementDirection",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_RightHandMovementDirection"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_RightHandMovementDirection",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 92
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_RightHandMovementDirection",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_RightHandMovementDirection = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 93
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 90
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.Awake()",
                  "Modifiers": [
                    "protected",
                    "override"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "base.Awake",
                      "FullName": "base.Awake",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 103
                    },
                    {
                      "Name": "m_CombinedTransform.SetParent",
                      "FullName": "m_CombinedTransform.SetParent",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "transform",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "false",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 106
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_CombinedTransform",
                        "Type": "Transform",
                        "Assignment": "new GameObject(\"[Dynamic Move Provider] Combined Forward Source\").transform",
                        "Kind": "Assignment",
                        "AssignmentLine": 104,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_CombinedTransform",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_CombinedTransform"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_CombinedTransform"
                            ],
                            "Invocations": [],
                            "Type": "Transform",
                            "Statement": "m_CombinedTransform",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_CombinedTransform.localPosition",
                        "Type": "?",
                        "Assignment": "Vector3.zero",
                        "Kind": "Assignment",
                        "AssignmentLine": 106,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_CombinedTransform"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_CombinedTransform"
                            ],
                            "Invocations": [],
                            "Type": "Transform",
                            "Statement": "m_CombinedTransform",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_CombinedTransform.localRotation",
                        "Type": "?",
                        "Assignment": "Quaternion.identity",
                        "Kind": "Assignment",
                        "AssignmentLine": 107,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_CombinedTransform"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_CombinedTransform"
                            ],
                            "Invocations": [],
                            "Type": "Transform",
                            "Statement": "m_CombinedTransform",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "forwardSource",
                        "Type": "?",
                        "Assignment": "m_CombinedTransform",
                        "Kind": "Assignment",
                        "AssignmentLine": 109,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "new GameObject(\"[Dynamic Move Provider] Combined Forward Source\").transform",
                        "Type": "Transform",
                        "Kind": "Use",
                        "UseLine": 104,
                        "UseKind": "Invalid",
                        "AssignedTo": "m_CombinedTransform",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Vector3.zero",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 106,
                        "UseKind": "Invalid",
                        "AssignedTo": "m_CombinedTransform.localPosition",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Quaternion.identity",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 107,
                        "UseKind": "Invalid",
                        "AssignedTo": "m_CombinedTransform.localRotation",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_CombinedTransform",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 109,
                        "UseKind": "FieldReference",
                        "AssignedTo": "forwardSource",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 101
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "ComputeDesiredMove",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.ComputeDesiredMove(Vector2)",
                  "Modifiers": [
                    "protected",
                    "override"
                  ],
                  "Attributes": [],
                  "ReturnType": "Vector3",
                  "Parameters": [
                    {
                      "Name": "input",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": ".ReadValue<Vector2>",
                      "FullName": ".ReadValue<Vector2>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 174
                    },
                    {
                      "Name": ".ReadValue<Vector2>",
                      "FullName": ".ReadValue<Vector2>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 175
                    },
                    {
                      "Name": "Vector3.Lerp",
                      "FullName": "Vector3.Lerp",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_RightMovementPose.position",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_LeftMovementPose.position",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "leftHandBlend",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 182
                    },
                    {
                      "Name": "Quaternion.Slerp",
                      "FullName": "Quaternion.Slerp",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_RightMovementPose.rotation",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_LeftMovementPose.rotation",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "leftHandBlend",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 183
                    },
                    {
                      "Name": "m_CombinedTransform.SetPositionAndRotation",
                      "FullName": "m_CombinedTransform.SetPositionAndRotation",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "combinedPosition",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "combinedRotation",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 184
                    },
                    {
                      "Name": "base.ComputeDesiredMove",
                      "FullName": "base.ComputeDesiredMove",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "input",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 186
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "leftHandValue",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "leftHandMoveAction.action?.ReadValue<Vector2>() ?? Vector2.zero",
                        "Kind": "Definition",
                        "DefinitionLine": 173
                      }
                    },
                    {
                      "Variable": {
                        "Name": "rightHandValue",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "rightHandMoveAction.action?.ReadValue<Vector2>() ?? Vector2.zero",
                        "Kind": "Definition",
                        "DefinitionLine": 174
                      }
                    },
                    {
                      "Variable": {
                        "Name": "totalSqrMagnitude",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "leftHandValue.sqrMagnitude + rightHandValue.sqrMagnitude",
                        "Kind": "Definition",
                        "DefinitionLine": 176
                      }
                    },
                    {
                      "Variable": {
                        "Name": "leftHandBlend",
                        "Type": "var",
                        "FullName": "float",
                        "Assignment": "0.5f",
                        "Kind": "Definition",
                        "DefinitionLine": 177
                      }
                    },
                    {
                      "Variable": {
                        "Name": "combinedPosition",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "Vector3.Lerp(m_RightMovementPose.position, m_LeftMovementPose.position, leftHandBlend)",
                        "Kind": "Definition",
                        "DefinitionLine": 181
                      }
                    },
                    {
                      "Variable": {
                        "Name": "combinedRotation",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "Quaternion.Slerp(m_RightMovementPose.rotation, m_LeftMovementPose.rotation, leftHandBlend)",
                        "Kind": "Definition",
                        "DefinitionLine": 182
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "input",
                          "Vector2.zero"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "input == Vector2.zero",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 119,
                      "StartLine": 118,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": {
                            "Tokens": [],
                            "Properties": [],
                            "Fields": [],
                            "Invocations": [],
                            "Type": "?",
                            "Statement": "Vector3.zero",
                            "ExpressionType": "SimpleMemberAccessExpression",
                            "Kind": "Literal"
                          },
                          "ReturnType": "?",
                          "Line": 119
                        }
                      ]
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_HeadTransform",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_HeadTransform == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 131,
                      "StartLine": 122,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "xrOrigin",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "system.xrOrigin",
                            "Kind": "Definition",
                            "DefinitionLine": 123
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "xrOrigin",
                              "null"
                            ],
                            "Properties": [],
                            "Fields": [],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "xrOrigin != null",
                            "ExpressionType": "NotEqualsExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 130,
                          "StartLine": 125,
                          "Invocations": [],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "xrCamera",
                                "Type": "var",
                                "FullName": null,
                                "Assignment": "xrOrigin.Camera",
                                "Kind": "Definition",
                                "DefinitionLine": 126
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "xrCamera",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "xrCamera != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 3,
                              "EndLine": 129,
                              "StartLine": 128,
                              "Invocations": [],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "m_HeadTransform",
                                    "Type": "Transform",
                                    "Assignment": "xrCamera.transform",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 128,
                                    "VariableKind": "Field",
                                    "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "m_HeadTransform"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                                        ],
                                        "Invocations": [],
                                        "Type": "Transform",
                                        "Statement": "m_HeadTransform",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": "xrCamera.transform",
                                    "Type": "Transform",
                                    "Kind": "Use",
                                    "UseLine": 128,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "m_HeadTransform",
                                    "Value": null,
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "totalSqrMagnitude",
                          "Mathf.Epsilon"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "totalSqrMagnitude > Mathf.Epsilon",
                        "ExpressionType": "GreaterThanExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 180,
                      "StartLine": 179,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "leftHandBlend",
                            "Type": "float",
                            "Assignment": "leftHandValue.sqrMagnitude / totalSqrMagnitude",
                            "Kind": "Assignment",
                            "AssignmentLine": 179,
                            "VariableKind": "Local",
                            "FullName": "leftHandBlend",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "leftHandValue.sqrMagnitude / totalSqrMagnitude",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 179,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "leftHandBlend",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "leftHandValue.sqrMagnitude",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 179,
                                "UseKind": "Invalid",
                                "AssignedTo": "leftHandBlend",
                                "Value": null,
                                "Operation": "SimpleMemberAccessExpression",
                                "VariablesList": []
                              },
                              {
                                "Name": "totalSqrMagnitude",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 179,
                                "UseKind": "LocalReference",
                                "AssignedTo": "leftHandBlend",
                                "Value": null,
                                "Operation": "IdentifierName",
                                "VariablesList": []
                              }
                            ]
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_LeftHandMovementDirection"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_LeftHandMovementDirection",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "CaseBranches": [
                        {
                          "labels": [
                            "case MovementDirection.HeadRelative:"
                          ],
                          "EndLine": 140,
                          "StartLine": 136,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_HeadTransform",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_HeadTransform != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 2,
                              "EndLine": 138,
                              "StartLine": 137,
                              "Invocations": [
                                {
                                  "Name": "m_HeadTransform.GetWorldPose",
                                  "FullName": "m_HeadTransform.GetWorldPose",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [],
                                  "Line": 138
                                }
                              ],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "m_LeftMovementPose",
                                    "Type": "Pose",
                                    "Assignment": "m_HeadTransform.GetWorldPose()",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 137,
                                    "VariableKind": "Field",
                                    "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftMovementPose",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "m_LeftMovementPose"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftMovementPose"
                                        ],
                                        "Invocations": [],
                                        "Type": "Pose",
                                        "Statement": "m_LeftMovementPose",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": "m_HeadTransform.GetWorldPose()",
                                    "Type": "Pose",
                                    "Kind": "Use",
                                    "UseLine": 137,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "m_LeftMovementPose",
                                    "Value": null,
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "labels": [
                            "case MovementDirection.HandRelative:"
                          ],
                          "EndLine": 146,
                          "StartLine": 142,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_LeftControllerTransform",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftControllerTransform"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_LeftControllerTransform != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 2,
                              "EndLine": 144,
                              "StartLine": 143,
                              "Invocations": [
                                {
                                  "Name": "m_LeftControllerTransform.GetWorldPose",
                                  "FullName": "m_LeftControllerTransform.GetWorldPose",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [],
                                  "Line": 144
                                }
                              ],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "m_LeftMovementPose",
                                    "Type": "Pose",
                                    "Assignment": "m_LeftControllerTransform.GetWorldPose()",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 143,
                                    "VariableKind": "Field",
                                    "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftMovementPose",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "m_LeftMovementPose"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftMovementPose"
                                        ],
                                        "Invocations": [],
                                        "Type": "Pose",
                                        "Statement": "m_LeftMovementPose",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": "m_LeftControllerTransform.GetWorldPose()",
                                    "Type": "Pose",
                                    "Kind": "Use",
                                    "UseLine": 143,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "m_LeftMovementPose",
                                    "Value": null,
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "labels": [
                            "default:"
                          ],
                          "EndLine": 150,
                          "StartLine": 148,
                          "Invocations": [
                            {
                              "Name": "Assert.IsTrue",
                              "FullName": "Assert.IsTrue",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "false",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "$\"Unhandled {nameof(MovementDirection)}={m_LeftHandMovementDirection}\"",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 149
                            },
                            {
                              "Name": "nameof",
                              "FullName": "nameof",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "MovementDirection",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 149
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "Depth": 1,
                      "EndLine": 151,
                      "StartLine": 134,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_RightHandMovementDirection"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightHandMovementDirection"
                        ],
                        "Invocations": [],
                        "Type": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.MovementDirection",
                        "Statement": "m_RightHandMovementDirection",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "CaseBranches": [
                        {
                          "labels": [
                            "case MovementDirection.HeadRelative:"
                          ],
                          "EndLine": 160,
                          "StartLine": 156,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_HeadTransform",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_HeadTransform != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 2,
                              "EndLine": 158,
                              "StartLine": 157,
                              "Invocations": [
                                {
                                  "Name": "m_HeadTransform.GetWorldPose",
                                  "FullName": "m_HeadTransform.GetWorldPose",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [],
                                  "Line": 158
                                }
                              ],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "m_RightMovementPose",
                                    "Type": "Pose",
                                    "Assignment": "m_HeadTransform.GetWorldPose()",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 157,
                                    "VariableKind": "Field",
                                    "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightMovementPose",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "m_RightMovementPose"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightMovementPose"
                                        ],
                                        "Invocations": [],
                                        "Type": "Pose",
                                        "Statement": "m_RightMovementPose",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": "m_HeadTransform.GetWorldPose()",
                                    "Type": "Pose",
                                    "Kind": "Use",
                                    "UseLine": 157,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "m_RightMovementPose",
                                    "Value": null,
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "labels": [
                            "case MovementDirection.HandRelative:"
                          ],
                          "EndLine": 166,
                          "StartLine": 162,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [
                            {
                              "Condition": {
                                "Tokens": [
                                  "m_RightControllerTransform",
                                  "null"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightControllerTransform"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_RightControllerTransform != null",
                                "ExpressionType": "NotEqualsExpression",
                                "Kind": "Literal"
                              },
                              "Else": null,
                              "DanglingElse": true,
                              "Depth": 2,
                              "EndLine": 164,
                              "StartLine": 163,
                              "Invocations": [
                                {
                                  "Name": "m_RightControllerTransform.GetWorldPose",
                                  "FullName": "m_RightControllerTransform.GetWorldPose",
                                  "ReturnType": null,
                                  "FileName": null,
                                  "DefinitionLine": 1,
                                  "Kind": null,
                                  "Module": null,
                                  "ReferenceFound": false,
                                  "Arguments": [],
                                  "Line": 164
                                }
                              ],
                              "Variables": [
                                {
                                  "Variable": {
                                    "Name": "m_RightMovementPose",
                                    "Type": "Pose",
                                    "Assignment": "m_RightControllerTransform.GetWorldPose()",
                                    "Kind": "Assignment",
                                    "AssignmentLine": 163,
                                    "VariableKind": "Field",
                                    "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightMovementPose",
                                    "AssignmentKind": "SimpleAssignmentExpression",
                                    "Cascades": [
                                      {
                                        "Tokens": [
                                          "m_RightMovementPose"
                                        ],
                                        "Properties": [],
                                        "Fields": [
                                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightMovementPose"
                                        ],
                                        "Invocations": [],
                                        "Type": "Pose",
                                        "Statement": "m_RightMovementPose",
                                        "ExpressionType": "IdentifierName",
                                        "Kind": "Field"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Variable": {
                                    "Name": "m_RightControllerTransform.GetWorldPose()",
                                    "Type": "Pose",
                                    "Kind": "Use",
                                    "UseLine": 163,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "m_RightMovementPose",
                                    "Value": null,
                                    "Operation": "SimpleAssignmentExpression",
                                    "VariablesList": []
                                  }
                                }
                              ],
                              "WhileBlocks": [],
                              "ForBlocks": [],
                              "IfBlocks": [],
                              "SwitchBlocks": [],
                              "ForEachBlocks": [],
                              "ElseBlocks": [],
                              "TryBlocks": [],
                              "Returns": []
                            }
                          ],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "labels": [
                            "default:"
                          ],
                          "EndLine": 170,
                          "StartLine": 168,
                          "Invocations": [
                            {
                              "Name": "Assert.IsTrue",
                              "FullName": "Assert.IsTrue",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "false",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "$\"Unhandled {nameof(MovementDirection)}={m_RightHandMovementDirection}\"",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 169
                            },
                            {
                              "Name": "nameof",
                              "FullName": "nameof",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "MovementDirection",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 169
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "Depth": 1,
                      "EndLine": 171,
                      "StartLine": 154,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [
                          {
                            "Name": "base.ComputeDesiredMove",
                            "FullName": "base.ComputeDesiredMove",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "input",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 186
                          }
                        ],
                        "Type": "?",
                        "Statement": "base.ComputeDesiredMove(input)",
                        "ExpressionType": "InvocationExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "?",
                      "Line": 186
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 114
                }
              ],
              "Fields": [
                {
                  "Name": "m_HeadTransform",
                  "Type": "Transform",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "Space",
                    "Header(\"Movement Direction\")",
                    "SerializeField",
                    "Tooltip(\"Directs the XR Origin's movement when using the head-relative mode. If not set, will automatically find and use the XR Origin Camera.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_HeadTransform",
                  "Line": 34
                },
                {
                  "Name": "m_LeftControllerTransform",
                  "Type": "Transform",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Directs the XR Origin's movement when using the hand-relative mode with the left hand.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftControllerTransform",
                  "Line": 47
                },
                {
                  "Name": "m_RightControllerTransform",
                  "Type": "Transform",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Directs the XR Origin's movement when using the hand-relative mode with the right hand.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightControllerTransform",
                  "Line": 60
                },
                {
                  "Name": "m_LeftHandMovementDirection",
                  "Type": "MovementDirection",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to use the specified head transform or left controller transform to direct the XR Origin's movement for the left hand.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftHandMovementDirection",
                  "Line": 70
                },
                {
                  "Name": "m_RightHandMovementDirection",
                  "Type": "MovementDirection",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to use the specified head transform or right controller transform to direct the XR Origin's movement for the right hand.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightHandMovementDirection",
                  "Line": 84
                },
                {
                  "Name": "m_CombinedTransform",
                  "Type": "Transform",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_CombinedTransform",
                  "Line": 96
                },
                {
                  "Name": "m_LeftMovementPose",
                  "Type": "Pose",
                  "Modifiers": [],
                  "Assignment": "Pose.identity",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_LeftMovementPose",
                  "Line": 97
                },
                {
                  "Name": "m_RightMovementPose",
                  "Type": "Pose",
                  "Modifiers": [],
                  "Assignment": "Pose.identity",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.DynamicMoveProvider.m_RightMovementPose",
                  "Line": 98
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 11
            }
          ],
          "Usings": [],
          "Line": 4
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "Unity.XR.CoreUtils",
          "Line": 1
        },
        {
          "Name": "UnityEngine.Assertions",
          "Line": 2
        }
      ],
      "Line": 1
    },
    {
      "Name": "GazeInputManager",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\GazeInputManager.cs",
      "Language": "C#",
      "Loc": 95,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 91,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "GazeInputManager",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "fallbackIfEyeTrackingUnavailable",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_FallbackIfEyeTrackingUnavailable"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_FallbackIfEyeTrackingUnavailable"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_FallbackIfEyeTrackingUnavailable",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 23
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_FallbackIfEyeTrackingUnavailable",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_FallbackIfEyeTrackingUnavailable"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_FallbackIfEyeTrackingUnavailable = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 24
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 21
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.Awake()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "InputDevices.GetDevicesWithCharacteristics",
                      "FullName": "InputDevices.GetDevicesWithCharacteristics",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "InputDeviceCharacteristics.EyeTracking",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "inputDeviceList",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 37
                    },
                    {
                      "Name": "Debug.LogWarning",
                      "FullName": "Debug.LogWarning",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "$\"Could not find a device that supports eye tracking on Awake. {this} has subscribed to device connected events and will activate the GameObject when an eye tracking device is connected.\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "this",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 55
                    },
                    {
                      "Name": "gameObject.SetActive",
                      "FullName": "gameObject.SetActive",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_FallbackIfEyeTrackingUnavailable",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 60
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "inputDeviceList",
                        "Type": "var",
                        "FullName": "System.Collections.Generic.List<InputDevice>",
                        "Assignment": "new List<InputDevice>()",
                        "Kind": "Definition",
                        "DefinitionLine": 35
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InputDevices.deviceConnected",
                        "Type": "?",
                        "Assignment": "OnDeviceConnected",
                        "Kind": "Assignment",
                        "AssignmentLine": 56,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "AddAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InputSystem.InputSystem.onDeviceChange",
                        "Type": "?",
                        "Assignment": "OnDeviceChange",
                        "Kind": "Assignment",
                        "AssignmentLine": 57,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "AddAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "OnDeviceConnected",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 56,
                        "UseKind": "None",
                        "AssignedTo": "InputDevices.deviceConnected",
                        "Value": null,
                        "Operation": "AddAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "OnDeviceChange",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 57,
                        "UseKind": "None",
                        "AssignedTo": "InputSystem.InputSystem.onDeviceChange",
                        "Value": null,
                        "Operation": "AddAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [
                    {
                      "Iterator": "device",
                      "IteratorType": "var",
                      "Iterable": "InputSystem.InputSystem.devices",
                      "IterableType": "?",
                      "Invocation": null,
                      "Property": null,
                      "ExpressionIsInvocation": false,
                      "ExpressionIsProperty": false,
                      "Depth": 1,
                      "EndLine": 53,
                      "StartLine": 45,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "device.layout",
                              "k_EyeGazeLayoutName"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.k_EyeGazeLayoutName"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "device.layout == k_EyeGazeLayoutName",
                            "ExpressionType": "EqualsExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 52,
                          "StartLine": 47,
                          "Invocations": [
                            {
                              "Name": "Debug.Log",
                              "FullName": "Debug.Log",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "\"Eye gaze device found!\"",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "this",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 49
                            }
                          ],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "m_EyeTrackingDeviceFound",
                                "Type": "bool",
                                "Assignment": "true",
                                "Kind": "Assignment",
                                "AssignmentLine": 49,
                                "VariableKind": "Field",
                                "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": [
                                  {
                                    "Tokens": [
                                      "m_EyeTrackingDeviceFound"
                                    ],
                                    "Properties": [],
                                    "Fields": [
                                      "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                                    ],
                                    "Invocations": [],
                                    "Type": "bool",
                                    "Statement": "m_EyeTrackingDeviceFound",
                                    "ExpressionType": "IdentifierName",
                                    "Kind": "Field"
                                  }
                                ]
                              }
                            },
                            {
                              "Variable": {
                                "Name": null,
                                "Type": "bool",
                                "Kind": "Use",
                                "UseLine": 49,
                                "UseKind": "Literal",
                                "AssignedTo": "m_EyeTrackingDeviceFound",
                                "Value": "true",
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": [
                            {
                              "ReturnStatement": null,
                              "ReturnType": "void",
                              "Line": 51
                            }
                          ]
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "inputDeviceList.Count",
                          "0"
                        ],
                        "Properties": [
                          "System.Collections.Generic.List<InputDevice>.Count"
                        ],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "inputDeviceList.Count > 0",
                        "ExpressionType": "GreaterThanExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 43,
                      "StartLine": 38,
                      "Invocations": [
                        {
                          "Name": "Debug.Log",
                          "FullName": "Debug.Log",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "\"Eye tracking device found!\"",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "this",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 40
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_EyeTrackingDeviceFound",
                            "Type": "bool",
                            "Assignment": "true",
                            "Kind": "Assignment",
                            "AssignmentLine": 40,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_EyeTrackingDeviceFound"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_EyeTrackingDeviceFound",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 40,
                            "UseKind": "Literal",
                            "AssignedTo": "m_EyeTrackingDeviceFound",
                            "Value": "true",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 42
                        }
                      ]
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 33
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDestroy",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.OnDestroy()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "InputDevices.deviceConnected",
                        "Type": "?",
                        "Assignment": "OnDeviceConnected",
                        "Kind": "Assignment",
                        "AssignmentLine": 67,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SubtractAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InputSystem.InputSystem.onDeviceChange",
                        "Type": "?",
                        "Assignment": "OnDeviceChange",
                        "Kind": "Assignment",
                        "AssignmentLine": 68,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SubtractAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "OnDeviceConnected",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 67,
                        "UseKind": "None",
                        "AssignedTo": "InputDevices.deviceConnected",
                        "Value": null,
                        "Operation": "SubtractAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "OnDeviceChange",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 68,
                        "UseKind": "None",
                        "AssignedTo": "InputSystem.InputSystem.onDeviceChange",
                        "Value": null,
                        "Operation": "SubtractAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 66
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDeviceConnected",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.OnDeviceConnected(InputDevice)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "inputDevice",
                      "Type": "InputDevice",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "Debug.Log",
                      "FullName": "Debug.Log",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "\"Eye tracking device found!\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "this",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 77
                    },
                    {
                      "Name": "gameObject.SetActive",
                      "FullName": "gameObject.SetActive",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "true",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 79
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_EyeTrackingDeviceFound",
                        "Type": "bool",
                        "Assignment": "true",
                        "Kind": "Assignment",
                        "AssignmentLine": 77,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_EyeTrackingDeviceFound"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_EyeTrackingDeviceFound",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": null,
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 77,
                        "UseKind": "Literal",
                        "AssignedTo": "m_EyeTrackingDeviceFound",
                        "Value": "true",
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_EyeTrackingDeviceFound",
                          "inputDevice.characteristics.HasFlagInputDeviceCharacteristics.EyeTracking"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                        ],
                        "Invocations": [
                          {
                            "Name": "inputDevice.characteristics.HasFlag",
                            "FullName": "inputDevice.characteristics.HasFlag",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "InputDeviceCharacteristics.EyeTracking",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 74
                          }
                        ],
                        "Type": "?",
                        "Statement": "m_EyeTrackingDeviceFound || !inputDevice.characteristics.HasFlag(InputDeviceCharacteristics.EyeTracking)",
                        "ExpressionType": "LogicalOrExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 75,
                      "StartLine": 74,
                      "Invocations": [
                        {
                          "Name": "inputDevice.characteristics.HasFlag",
                          "FullName": "inputDevice.characteristics.HasFlag",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "InputDeviceCharacteristics.EyeTracking",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 74
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 75
                        }
                      ]
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 72
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDeviceChange",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.OnDeviceChange(InputSystem.InputDevice, InputDeviceChange)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "device",
                      "Type": "InputSystem.InputDevice",
                      "Assignment": null,
                      "Attributes": []
                    },
                    {
                      "Name": "change",
                      "Type": "InputDeviceChange",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_EyeTrackingDeviceFound",
                          "change",
                          "InputDeviceChange.Added"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_EyeTrackingDeviceFound || change != InputDeviceChange.Added",
                        "ExpressionType": "LogicalOrExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 85,
                      "StartLine": 84,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 85
                        }
                      ]
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "device.layout",
                          "k_EyeGazeLayoutName"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.k_EyeGazeLayoutName"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "device.layout == k_EyeGazeLayoutName",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 92,
                      "StartLine": 87,
                      "Invocations": [
                        {
                          "Name": "Debug.Log",
                          "FullName": "Debug.Log",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "\"Eye gaze device found!\"",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "this",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 89
                        },
                        {
                          "Name": "gameObject.SetActive",
                          "FullName": "gameObject.SetActive",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "true",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 91
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_EyeTrackingDeviceFound",
                            "Type": "bool",
                            "Assignment": "true",
                            "Kind": "Assignment",
                            "AssignmentLine": 89,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_EyeTrackingDeviceFound"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_EyeTrackingDeviceFound",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 89,
                            "UseKind": "Literal",
                            "AssignedTo": "m_EyeTrackingDeviceFound",
                            "Value": "true",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 82
                }
              ],
              "Fields": [
                {
                  "Name": "k_EyeGazeLayoutName",
                  "Type": "string",
                  "Modifiers": [
                    "const"
                  ],
                  "Assignment": "\"EyeGaze\"",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.k_EyeGazeLayoutName",
                  "Line": 12
                },
                {
                  "Name": "m_FallbackIfEyeTrackingUnavailable",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": "true",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Enable fallback to head tracking if eye tracking is unavailable.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_FallbackIfEyeTrackingUnavailable",
                  "Line": 16
                },
                {
                  "Name": "m_EyeTrackingDeviceFound",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.GazeInputManager.m_EyeTrackingDeviceFound",
                  "Line": 28
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 9
            }
          ],
          "Usings": [],
          "Line": 4
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "System.Collections.Generic",
          "Line": 1
        },
        {
          "Name": "UnityEngine.InputSystem",
          "Line": 2
        }
      ],
      "Line": 1
    },
    {
      "Name": "ObjectSpawner",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ObjectSpawner.cs",
      "Language": "C#",
      "Loc": 236,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 232,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "ObjectSpawner",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "cameraToFace",
                  "Type": "Camera",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": true,
                      "HasExpressionBody": false,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [
                        {
                          "Name": "EnsureFacingCamera",
                          "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.EnsureFacingCamera()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ObjectSpawner.cs",
                          "DefinitionLine": 163,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 23
                        }
                      ],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": {
                            "Tokens": [],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace"
                            ],
                            "Invocations": [],
                            "Type": "Camera",
                            "Statement": "m_CameraToFace",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          },
                          "ReturnType": "Camera",
                          "Line": 24
                        }
                      ],
                      "TryBlocks": [],
                      "ExpressionBody": null,
                      "Line": 21
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_CameraToFace",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace"
                        ],
                        "Invocations": [],
                        "Type": "Camera",
                        "Statement": "m_CameraToFace = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 26
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 19
                },
                {
                  "Name": "objectPrefabs",
                  "Type": "List<GameObject>",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ObjectPrefabs"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ObjectPrefabs"
                        ],
                        "Invocations": [],
                        "Type": "System.Collections.Generic.List<GameObject>",
                        "Statement": "m_ObjectPrefabs",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 38
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ObjectPrefabs",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ObjectPrefabs"
                        ],
                        "Invocations": [],
                        "Type": "System.Collections.Generic.List<GameObject>",
                        "Statement": "m_ObjectPrefabs = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 39
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 36
                },
                {
                  "Name": "spawnVisualizationPrefab",
                  "Type": "GameObject",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnVisualizationPrefab"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnVisualizationPrefab"
                        ],
                        "Invocations": [],
                        "Type": "GameObject",
                        "Statement": "m_SpawnVisualizationPrefab",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 53
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnVisualizationPrefab",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnVisualizationPrefab"
                        ],
                        "Invocations": [],
                        "Type": "GameObject",
                        "Statement": "m_SpawnVisualizationPrefab = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 54
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 51
                },
                {
                  "Name": "spawnOptionIndex",
                  "Type": "int",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnOptionIndex"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex"
                        ],
                        "Invocations": [],
                        "Type": "int",
                        "Statement": "m_SpawnOptionIndex",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 69
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnOptionIndex",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex"
                        ],
                        "Invocations": [],
                        "Type": "int",
                        "Statement": "m_SpawnOptionIndex = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 70
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 67
                },
                {
                  "Name": "isSpawnOptionRandomized",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [],
                  "HasExpressionBody": true,
                  "ExpressionBody": {
                    "Tokens": [
                      "m_SpawnOptionIndex",
                      "0",
                      "m_SpawnOptionIndex",
                      "m_ObjectPrefabs.Count"
                    ],
                    "Properties": [
                      "System.Collections.Generic.List<GameObject>.Count"
                    ],
                    "Fields": [
                      "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex",
                      "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex",
                      "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ObjectPrefabs"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "m_SpawnOptionIndex < 0 || m_SpawnOptionIndex >= m_ObjectPrefabs.Count",
                    "ExpressionType": "LogicalOrExpression",
                    "Kind": "Literal"
                  },
                  "Line": 78
                },
                {
                  "Name": "onlySpawnInView",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_OnlySpawnInView"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_OnlySpawnInView"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_OnlySpawnInView",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 89
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_OnlySpawnInView",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_OnlySpawnInView"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_OnlySpawnInView = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 90
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 87
                },
                {
                  "Name": "viewportPeriphery",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ViewportPeriphery"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ViewportPeriphery"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_ViewportPeriphery",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 102
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ViewportPeriphery",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ViewportPeriphery"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_ViewportPeriphery = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 103
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 100
                },
                {
                  "Name": "applyRandomAngleAtSpawn",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ApplyRandomAngleAtSpawn"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ApplyRandomAngleAtSpawn"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ApplyRandomAngleAtSpawn",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 117
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ApplyRandomAngleAtSpawn",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ApplyRandomAngleAtSpawn"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ApplyRandomAngleAtSpawn = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 118
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 115
                },
                {
                  "Name": "spawnAngleRange",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnAngleRange"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAngleRange"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_SpawnAngleRange",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 132
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnAngleRange",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAngleRange"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_SpawnAngleRange = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 133
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 130
                },
                {
                  "Name": "spawnAsChildren",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnAsChildren"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAsChildren"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SpawnAsChildren",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 145
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SpawnAsChildren",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAsChildren"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SpawnAsChildren = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 146
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 143
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.Awake()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "EnsureFacingCamera",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.EnsureFacingCamera()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ObjectSpawner.cs",
                      "DefinitionLine": 163,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 160
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 158
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "EnsureFacingCamera",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.EnsureFacingCamera()",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_CameraToFace",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_CameraToFace == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 166,
                      "StartLine": 165,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_CameraToFace",
                            "Type": "Camera",
                            "Assignment": "Camera.main",
                            "Kind": "Assignment",
                            "AssignmentLine": 165,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_CameraToFace"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace"
                                ],
                                "Invocations": [],
                                "Type": "Camera",
                                "Statement": "m_CameraToFace",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Camera.main",
                            "Type": "Camera",
                            "Kind": "Use",
                            "UseLine": 165,
                            "UseKind": "Invalid",
                            "AssignedTo": "m_CameraToFace",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 163
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "RandomizeSpawnOption",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.RandomizeSpawnOption()",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_SpawnOptionIndex",
                        "Type": "int",
                        "Assignment": "-1",
                        "Kind": "Assignment",
                        "AssignmentLine": 175,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_SpawnOptionIndex"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex"
                            ],
                            "Invocations": [],
                            "Type": "int",
                            "Statement": "m_SpawnOptionIndex",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "-1",
                        "Type": "int",
                        "Kind": "Use",
                        "UseLine": 175,
                        "UseKind": "UnaryOperator",
                        "AssignedTo": "m_SpawnOptionIndex",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 174
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "TrySpawnObject",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.TrySpawnObject(Vector3, Vector3)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "bool",
                  "Parameters": [
                    {
                      "Name": "spawnPoint",
                      "Type": "Vector3",
                      "Assignment": null,
                      "Attributes": []
                    },
                    {
                      "Name": "spawnNormal",
                      "Type": "Vector3",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "Random.Range",
                      "FullName": "Random.Range",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "0",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "m_ObjectPrefabs.Count",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 207
                    },
                    {
                      "Name": "Instantiate",
                      "FullName": "Instantiate",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_ObjectPrefabs[objectIndex]",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 208
                    },
                    {
                      "Name": "EnsureFacingCamera",
                      "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.EnsureFacingCamera()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\ObjectSpawner.cs",
                      "DefinitionLine": 163,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 213
                    },
                    {
                      "Name": "BurstMathUtility.ProjectOnPlane",
                      "FullName": "BurstMathUtility.ProjectOnPlane",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "forward",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "spawnNormal",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "var projectedForward",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 217
                    },
                    {
                      "Name": "Quaternion.LookRotation",
                      "FullName": "Quaternion.LookRotation",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "projectedForward",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "spawnNormal",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 218
                    },
                    {
                      "Name": ".Invoke",
                      "FullName": ".Invoke",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "newObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 233
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "objectIndex",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "isSpawnOptionRandomized ? Random.Range(0, m_ObjectPrefabs.Count) : m_SpawnOptionIndex",
                        "Kind": "Definition",
                        "DefinitionLine": 206
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newObject",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "Instantiate(m_ObjectPrefabs[objectIndex])",
                        "Kind": "Definition",
                        "DefinitionLine": 207
                      }
                    },
                    {
                      "Variable": {
                        "Name": "facePosition",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "m_CameraToFace.transform.position",
                        "Kind": "Definition",
                        "DefinitionLine": 214
                      }
                    },
                    {
                      "Variable": {
                        "Name": "forward",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "facePosition - spawnPoint",
                        "Kind": "Definition",
                        "DefinitionLine": 215
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newObject.transform.position",
                        "Type": "?",
                        "Assignment": "spawnPoint",
                        "Kind": "Assignment",
                        "AssignmentLine": 211,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newObject.transform.rotation",
                        "Type": "?",
                        "Assignment": "Quaternion.LookRotation(projectedForward, spawnNormal)",
                        "Kind": "Assignment",
                        "AssignmentLine": 217,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "spawnPoint",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 211,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "newObject.transform.position",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Quaternion.LookRotation(projectedForward, spawnNormal)",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 217,
                        "UseKind": "Invalid",
                        "AssignedTo": "newObject.transform.rotation",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_OnlySpawnInView"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_OnlySpawnInView"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_OnlySpawnInView",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 205,
                      "StartLine": 195,
                      "Invocations": [
                        {
                          "Name": "cameraToFace.WorldToViewportPoint",
                          "FullName": "cameraToFace.WorldToViewportPoint",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "spawnPoint",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 199
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "inViewMin",
                            "Type": "var",
                            "FullName": "float",
                            "Assignment": "m_ViewportPeriphery",
                            "Kind": "Definition",
                            "DefinitionLine": 196
                          }
                        },
                        {
                          "Variable": {
                            "Name": "inViewMax",
                            "Type": "var",
                            "FullName": "float",
                            "Assignment": "1f - m_ViewportPeriphery",
                            "Kind": "Definition",
                            "DefinitionLine": 197
                          }
                        },
                        {
                          "Variable": {
                            "Name": "pointInViewportSpace",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "cameraToFace.WorldToViewportPoint(spawnPoint)",
                            "Kind": "Definition",
                            "DefinitionLine": 198
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "pointInViewportSpace.z",
                              "0f",
                              "pointInViewportSpace.x",
                              "inViewMax",
                              "pointInViewportSpace.x",
                              "inViewMin",
                              "pointInViewportSpace.y",
                              "inViewMax",
                              "pointInViewportSpace.y",
                              "inViewMin"
                            ],
                            "Properties": [],
                            "Fields": [],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "pointInViewportSpace.z < 0f || pointInViewportSpace.x > inViewMax || pointInViewportSpace.x < inViewMin ||\r\n                    pointInViewportSpace.y > inViewMax || pointInViewportSpace.y < inViewMin",
                            "ExpressionType": "LogicalOrExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 204,
                          "StartLine": 200,
                          "Invocations": [],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": [
                            {
                              "ReturnStatement": {
                                "Tokens": [],
                                "Properties": [],
                                "Fields": [],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "false",
                                "ExpressionType": "FalseLiteralExpression",
                                "Kind": "Literal"
                              },
                              "ReturnType": "bool",
                              "Line": 203
                            }
                          ]
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_SpawnAsChildren"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAsChildren"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SpawnAsChildren",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 210,
                      "StartLine": 209,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "newObject.transform.parent",
                            "Type": "?",
                            "Assignment": "transform",
                            "Kind": "Assignment",
                            "AssignmentLine": 209,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "transform",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 209,
                            "UseKind": "Invalid",
                            "AssignedTo": "newObject.transform.parent",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_ApplyRandomAngleAtSpawn"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ApplyRandomAngleAtSpawn"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ApplyRandomAngleAtSpawn",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 224,
                      "StartLine": 220,
                      "Invocations": [
                        {
                          "Name": "Random.Range",
                          "FullName": "Random.Range",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "-m_SpawnAngleRange",
                              "IsInvocation": true,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "m_SpawnAngleRange",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 222
                        },
                        {
                          "Name": "newObject.transform.Rotate",
                          "FullName": "newObject.transform.Rotate",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "Vector3.up",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "randomRotation",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 223
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "randomRotation",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "Random.Range(-m_SpawnAngleRange, m_SpawnAngleRange)",
                            "Kind": "Definition",
                            "DefinitionLine": 221
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "m_SpawnVisualizationPrefab",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnVisualizationPrefab"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_SpawnVisualizationPrefab != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 231,
                      "StartLine": 226,
                      "Invocations": [
                        {
                          "Name": "Instantiate",
                          "FullName": "Instantiate",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "m_SpawnVisualizationPrefab",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 228
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "visualizationTrans",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "Instantiate(m_SpawnVisualizationPrefab).transform",
                            "Kind": "Definition",
                            "DefinitionLine": 227
                          }
                        },
                        {
                          "Variable": {
                            "Name": "visualizationTrans.position",
                            "Type": "?",
                            "Assignment": "spawnPoint",
                            "Kind": "Assignment",
                            "AssignmentLine": 228,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "visualizationTrans.rotation",
                            "Type": "?",
                            "Assignment": "newObject.transform.rotation",
                            "Kind": "Assignment",
                            "AssignmentLine": 229,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "spawnPoint",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 228,
                            "UseKind": "ParameterReference",
                            "AssignedTo": "visualizationTrans.position",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "newObject.transform.rotation",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 229,
                            "UseKind": "Invalid",
                            "AssignedTo": "visualizationTrans.rotation",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "true",
                        "ExpressionType": "TrueLiteralExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "bool",
                      "Line": 234
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 193
                }
              ],
              "Fields": [
                {
                  "Name": "m_CameraToFace",
                  "Type": "Camera",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The camera that objects will face when spawned. If not set, defaults to the main camera.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_CameraToFace",
                  "Line": 14
                },
                {
                  "Name": "m_ObjectPrefabs",
                  "Type": "List<GameObject>",
                  "Modifiers": [],
                  "Assignment": "new List<GameObject>()",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The list of prefabs available to spawn.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ObjectPrefabs",
                  "Line": 31
                },
                {
                  "Name": "m_SpawnVisualizationPrefab",
                  "Type": "GameObject",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Optional prefab to spawn for each spawned object. Use a prefab with the Destroy Self component to make \" +\r\n            \"sure the visualization only lives temporarily.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnVisualizationPrefab",
                  "Line": 45
                },
                {
                  "Name": "m_SpawnOptionIndex",
                  "Type": "int",
                  "Modifiers": [],
                  "Assignment": "-1",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The index of the prefab to spawn. If outside the range of the list, this behavior will select \" +\r\n            \"a random object each time it spawns.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnOptionIndex",
                  "Line": 60
                },
                {
                  "Name": "m_OnlySpawnInView",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": "true",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to only spawn an object if the spawn point is within view of the camera.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_OnlySpawnInView",
                  "Line": 82
                },
                {
                  "Name": "m_ViewportPeriphery",
                  "Type": "float",
                  "Modifiers": [],
                  "Assignment": "0.15f",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The size, in viewport units, of the periphery inside the viewport that will not be considered in view.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ViewportPeriphery",
                  "Line": 95
                },
                {
                  "Name": "m_ApplyRandomAngleAtSpawn",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": "true",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"When enabled, the object will be rotated about the y-axis when spawned by Spawn Angle Range, \" +\r\n            \"in relation to the direction of the spawn point to the camera.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_ApplyRandomAngleAtSpawn",
                  "Line": 109
                },
                {
                  "Name": "m_SpawnAngleRange",
                  "Type": "float",
                  "Modifiers": [],
                  "Assignment": "45f",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The range in degrees that the object will randomly be rotated about the y axis when spawned, \" +\r\n            \"in relation to the direction of the spawn point to the camera.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAngleRange",
                  "Line": 124
                },
                {
                  "Name": "m_SpawnAsChildren",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to spawn each object as a child of this object.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.ObjectSpawner.m_SpawnAsChildren",
                  "Line": 138
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 10
            }
          ],
          "Usings": [],
          "Line": 5
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "System",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit.Utilities",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "XRPokeFollowAffordance",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\Samples\\XR Interaction Toolkit\\2.5.4\\Starter Assets\\Scripts\\XRPokeFollowAffordance.cs",
      "Language": "C#",
      "Loc": 205,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets",
          "Loc": 199,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "XRPokeFollowAffordance",
              "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "pokeFollowTransform",
                  "Type": "Transform",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_PokeFollowTransform"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_PokeFollowTransform",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 27
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_PokeFollowTransform",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                        ],
                        "Invocations": [],
                        "Type": "Transform",
                        "Statement": "m_PokeFollowTransform = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 28
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 25
                },
                {
                  "Name": "smoothingSpeed",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SmoothingSpeed"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_SmoothingSpeed"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_SmoothingSpeed",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 41
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_SmoothingSpeed",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_SmoothingSpeed"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_SmoothingSpeed = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 42
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 39
                },
                {
                  "Name": "returnToInitialPosition",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ReturnToInitialPosition"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ReturnToInitialPosition"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ReturnToInitialPosition",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 54
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ReturnToInitialPosition",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ReturnToInitialPosition"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ReturnToInitialPosition = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 55
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 52
                },
                {
                  "Name": "applyIfChildIsTarget",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ApplyIfChildIsTarget"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ApplyIfChildIsTarget"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ApplyIfChildIsTarget",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 69
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ApplyIfChildIsTarget",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ApplyIfChildIsTarget"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ApplyIfChildIsTarget = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 70
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 67
                },
                {
                  "Name": "clampToMaxDistance",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ClampToMaxDistance"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ClampToMaxDistance"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ClampToMaxDistance",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 82
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_ClampToMaxDistance",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ClampToMaxDistance"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_ClampToMaxDistance = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 83
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 80
                },
                {
                  "Name": "maxDistance",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_MaxDistance"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MaxDistance"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_MaxDistance",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 96
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_MaxDistance",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MaxDistance"
                        ],
                        "Invocations": [],
                        "Type": "float",
                        "Statement": "m_MaxDistance = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 97
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 94
                },
                {
                  "Name": "initialPosition",
                  "Type": "Vector3",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_InitialPosition"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_InitialPosition"
                        ],
                        "Invocations": [],
                        "Type": "Vector3",
                        "Statement": "m_InitialPosition",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Line": 105
                    },
                    {
                      "AccessorType": "set",
                      "HasBody": false,
                      "HasExpressionBody": true,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [],
                      "TryBlocks": [],
                      "ExpressionBody": {
                        "Tokens": [
                          "m_InitialPosition",
                          "value"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_InitialPosition"
                        ],
                        "Invocations": [],
                        "Type": "Vector3",
                        "Statement": "m_InitialPosition = value",
                        "ExpressionType": "SimpleAssignmentExpression",
                        "Kind": "Literal"
                      },
                      "Line": 106
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 103
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.Awake()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "GetComponentInParent<IMultiPokeStateDataProvider>",
                      "FullName": "GetComponentInParent<IMultiPokeStateDataProvider>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 122
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_MultiPokeStateDataProvider",
                        "Type": "IMultiPokeStateDataProvider",
                        "Assignment": "GetComponentInParent<IMultiPokeStateDataProvider>()",
                        "Kind": "Assignment",
                        "AssignmentLine": 121,
                        "VariableKind": "Field",
                        "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MultiPokeStateDataProvider",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_MultiPokeStateDataProvider"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MultiPokeStateDataProvider"
                            ],
                            "Invocations": [],
                            "Type": "IMultiPokeStateDataProvider",
                            "Statement": "m_MultiPokeStateDataProvider",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "GetComponentInParent<IMultiPokeStateDataProvider>()",
                        "Type": "IMultiPokeStateDataProvider",
                        "Kind": "Use",
                        "UseLine": 121,
                        "UseKind": "Invalid",
                        "AssignedTo": "m_MultiPokeStateDataProvider",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_MultiPokeStateDataProvider",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MultiPokeStateDataProvider"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_MultiPokeStateDataProvider == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 124,
                      "StartLine": 123,
                      "Invocations": [
                        {
                          "Name": "GetComponentInParent<IPokeStateDataProvider>",
                          "FullName": "GetComponentInParent<IPokeStateDataProvider>",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [],
                          "Line": 124
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_PokeDataProvider",
                            "Type": "IPokeStateDataProvider",
                            "Assignment": "GetComponentInParent<IPokeStateDataProvider>()",
                            "Kind": "Assignment",
                            "AssignmentLine": 123,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeDataProvider",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_PokeDataProvider"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeDataProvider"
                                ],
                                "Invocations": [],
                                "Type": "IPokeStateDataProvider",
                                "Statement": "m_PokeDataProvider",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "GetComponentInParent<IPokeStateDataProvider>()",
                            "Type": "IPokeStateDataProvider",
                            "Kind": "Use",
                            "UseLine": 123,
                            "UseKind": "Invalid",
                            "AssignedTo": "m_PokeDataProvider",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 120
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Start",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.Start()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_PokeFollowTransform",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_PokeFollowTransform != null",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": {
                        "ElseStatement": "{\r\n                enabled = false;\r\n                Debug.LogWarning($\"Missing Poke Follow Transform assignment on {this}. Disabling component.\", this);\r\n            }",
                        "EndLine": 146,
                        "StartLine": 142,
                        "Invocations": [
                          {
                            "Name": "Debug.LogWarning",
                            "FullName": "Debug.LogWarning",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "$\"Missing Poke Follow Transform assignment on {this}. Disabling component.\"",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "this",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 145
                          }
                        ],
                        "Variables": [
                          {
                            "Variable": {
                              "Name": "enabled",
                              "Type": "?",
                              "Assignment": "false",
                              "Kind": "Assignment",
                              "AssignmentLine": 143,
                              "VariableKind": null,
                              "FullName": null,
                              "AssignmentKind": "SimpleAssignmentExpression",
                              "Cascades": []
                            }
                          },
                          {
                            "Variable": {
                              "Name": null,
                              "Type": "?",
                              "Kind": "Use",
                              "UseLine": 143,
                              "UseKind": "Literal",
                              "AssignedTo": "enabled",
                              "Value": "false",
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          }
                        ],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 146,
                      "StartLine": 132,
                      "Invocations": [
                        {
                          "Name": "m_BindingsGroup.AddBinding",
                          "FullName": "m_BindingsGroup.AddBinding",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "m_TransformTweenableVariable.Subscribe(OnTransformTweenableVariableUpdated)",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 135
                        },
                        {
                          "Name": "m_TransformTweenableVariable.Subscribe",
                          "FullName": "m_TransformTweenableVariable.Subscribe",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "OnTransformTweenableVariableUpdated",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 135
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_InitialPosition",
                            "Type": "Vector3",
                            "Assignment": "m_PokeFollowTransform.localPosition",
                            "Kind": "Assignment",
                            "AssignmentLine": 133,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_InitialPosition",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_InitialPosition"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_InitialPosition"
                                ],
                                "Invocations": [],
                                "Type": "Vector3",
                                "Statement": "m_InitialPosition",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "m_PokeFollowTransform.localPosition",
                            "Type": "Vector3",
                            "Kind": "Use",
                            "UseLine": 133,
                            "UseKind": "Invalid",
                            "AssignedTo": "m_InitialPosition",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "m_MultiPokeStateDataProvider",
                              "null"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MultiPokeStateDataProvider"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_MultiPokeStateDataProvider != null",
                            "ExpressionType": "NotEqualsExpression",
                            "Kind": "Literal"
                          },
                          "Else": {
                            "ElseStatement": "if(m_PokeDataProvider != null)\r\n                    m_BindingsGroup.AddBinding(m_PokeDataProvider.pokeStateData.SubscribeAndUpdate(OnPokeStateDataUpdated));",
                            "EndLine": 140,
                            "StartLine": 139,
                            "Invocations": [],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [
                              {
                                "Condition": {
                                  "Tokens": [
                                    "m_PokeDataProvider",
                                    "null"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeDataProvider"
                                  ],
                                  "Invocations": [],
                                  "Type": "bool",
                                  "Statement": "m_PokeDataProvider != null",
                                  "ExpressionType": "NotEqualsExpression",
                                  "Kind": "Literal"
                                },
                                "Else": null,
                                "DanglingElse": true,
                                "Depth": 3,
                                "EndLine": 140,
                                "StartLine": 139,
                                "Invocations": [
                                  {
                                    "Name": "m_BindingsGroup.AddBinding",
                                    "FullName": "m_BindingsGroup.AddBinding",
                                    "ReturnType": null,
                                    "FileName": null,
                                    "DefinitionLine": 1,
                                    "Kind": null,
                                    "Module": null,
                                    "ReferenceFound": false,
                                    "Arguments": [
                                      {
                                        "Argument": "m_PokeDataProvider.pokeStateData.SubscribeAndUpdate(OnPokeStateDataUpdated)",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      }
                                    ],
                                    "Line": 140
                                  },
                                  {
                                    "Name": "m_PokeDataProvider.pokeStateData.SubscribeAndUpdate",
                                    "FullName": "m_PokeDataProvider.pokeStateData.SubscribeAndUpdate",
                                    "ReturnType": null,
                                    "FileName": null,
                                    "DefinitionLine": 1,
                                    "Kind": null,
                                    "Module": null,
                                    "ReferenceFound": false,
                                    "Arguments": [
                                      {
                                        "Argument": "OnPokeStateDataUpdated",
                                        "IsInvocation": false,
                                        "IsLiteral": false
                                      }
                                    ],
                                    "Line": 140
                                  }
                                ],
                                "Variables": [],
                                "WhileBlocks": [],
                                "ForBlocks": [],
                                "IfBlocks": [],
                                "SwitchBlocks": [],
                                "ForEachBlocks": [],
                                "ElseBlocks": [],
                                "TryBlocks": [],
                                "Returns": []
                              }
                            ],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          },
                          "DanglingElse": false,
                          "Depth": 2,
                          "EndLine": 140,
                          "StartLine": 137,
                          "Invocations": [
                            {
                              "Name": "m_BindingsGroup.AddBinding",
                              "FullName": "m_BindingsGroup.AddBinding",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "m_MultiPokeStateDataProvider.GetPokeStateDataForTarget(transform).Subscribe(OnPokeStateDataUpdated)",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 138
                            },
                            {
                              "Name": "m_MultiPokeStateDataProvider.GetPokeStateDataForTarget(transform).Subscribe",
                              "FullName": "m_MultiPokeStateDataProvider.GetPokeStateDataForTarget(transform).Subscribe",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "OnPokeStateDataUpdated",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 138
                            },
                            {
                              "Name": "m_MultiPokeStateDataProvider.GetPokeStateDataForTarget",
                              "FullName": "m_MultiPokeStateDataProvider.GetPokeStateDataForTarget",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "transform",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 138
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 130
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDestroy",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.OnDestroy()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "m_BindingsGroup.Clear",
                      "FullName": "m_BindingsGroup.Clear",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 154
                    },
                    {
                      "Name": ".Dispose",
                      "FullName": ".Dispose",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 155
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 152
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "LateUpdate",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.LateUpdate()",
                  "Modifiers": [
                    "protected"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "m_TransformTweenableVariable.HandleTween",
                      "FullName": "m_TransformTweenableVariable.HandleTween",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "m_SmoothingSpeed > 0f ? Time.deltaTime * m_SmoothingSpeed : 1f",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 169
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_IsFirstFrame"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_IsFirstFrame"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_IsFirstFrame",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 168,
                      "StartLine": 163,
                      "Invocations": [
                        {
                          "Name": "m_TransformTweenableVariable.HandleTween",
                          "FullName": "m_TransformTweenableVariable.HandleTween",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "1f",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 165
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "m_IsFirstFrame",
                            "Type": "bool",
                            "Assignment": "false",
                            "Kind": "Assignment",
                            "AssignmentLine": 165,
                            "VariableKind": "Field",
                            "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_IsFirstFrame",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_IsFirstFrame"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_IsFirstFrame"
                                ],
                                "Invocations": [],
                                "Type": "bool",
                                "Statement": "m_IsFirstFrame",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 165,
                            "UseKind": "Literal",
                            "AssignedTo": "m_IsFirstFrame",
                            "Value": "false",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 167
                        }
                      ]
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 161
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnTransformTweenableVariableUpdated",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.OnTransformTweenableVariableUpdated(float3)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "position",
                      "Type": "float3",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_PokeFollowTransform.localPosition",
                        "Type": "?",
                        "Assignment": "position",
                        "Kind": "Assignment",
                        "AssignmentLine": 173,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_PokeFollowTransform"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                            ],
                            "Invocations": [],
                            "Type": "Transform",
                            "Statement": "m_PokeFollowTransform",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "position",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 173,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "m_PokeFollowTransform.localPosition",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 172
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnPokeStateDataUpdated",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.OnPokeStateDataUpdated(PokeStateData)",
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "data",
                      "Type": "PokeStateData",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "pokeTarget.IsChildOf",
                      "FullName": "pokeTarget.IsChildOf",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "transform",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 181
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "pokeTarget",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "data.target",
                        "Kind": "Definition",
                        "DefinitionLine": 178
                      }
                    },
                    {
                      "Variable": {
                        "Name": "applyFollow",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "m_ApplyIfChildIsTarget\r\n                ? pokeTarget != null && pokeTarget.IsChildOf(transform)\r\n                : pokeTarget == transform",
                        "Kind": "Definition",
                        "DefinitionLine": 179
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "applyFollow"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "?",
                        "Statement": "applyFollow",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Local"
                      },
                      "Else": {
                        "ElseStatement": "if (m_ReturnToInitialPosition)\r\n            {\r\n                m_TransformTweenableVariable.target = m_InitialPosition;\r\n            }",
                        "EndLine": 195,
                        "StartLine": 192,
                        "Invocations": [],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [
                          {
                            "Condition": {
                              "Tokens": [
                                "m_ReturnToInitialPosition"
                              ],
                              "Properties": [],
                              "Fields": [
                                "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ReturnToInitialPosition"
                              ],
                              "Invocations": [],
                              "Type": "bool",
                              "Statement": "m_ReturnToInitialPosition",
                              "ExpressionType": "IdentifierName",
                              "Kind": "Field"
                            },
                            "Else": null,
                            "DanglingElse": true,
                            "Depth": 2,
                            "EndLine": 195,
                            "StartLine": 192,
                            "Invocations": [],
                            "Variables": [
                              {
                                "Variable": {
                                  "Name": "m_TransformTweenableVariable.target",
                                  "Type": "?",
                                  "Assignment": "m_InitialPosition",
                                  "Kind": "Assignment",
                                  "AssignmentLine": 193,
                                  "VariableKind": null,
                                  "FullName": null,
                                  "AssignmentKind": "SimpleAssignmentExpression",
                                  "Cascades": [
                                    {
                                      "Tokens": [
                                        "m_TransformTweenableVariable"
                                      ],
                                      "Properties": [],
                                      "Fields": [
                                        "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_TransformTweenableVariable"
                                      ],
                                      "Invocations": [],
                                      "Type": "Vector3TweenableVariable",
                                      "Statement": "m_TransformTweenableVariable",
                                      "ExpressionType": "IdentifierName",
                                      "Kind": "Field"
                                    }
                                  ]
                                }
                              },
                              {
                                "Variable": {
                                  "Name": "m_InitialPosition",
                                  "Type": "?",
                                  "Kind": "Use",
                                  "UseLine": 193,
                                  "UseKind": "FieldReference",
                                  "AssignedTo": "m_TransformTweenableVariable.target",
                                  "Value": null,
                                  "Operation": "SimpleAssignmentExpression",
                                  "VariablesList": []
                                }
                              }
                            ],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          }
                        ],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 195,
                      "StartLine": 184,
                      "Invocations": [
                        {
                          "Name": "pokeTarget.InverseTransformPoint",
                          "FullName": "pokeTarget.InverseTransformPoint",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "data.axisAlignedPokeInteractionPoint",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 186
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "targetPosition",
                            "Type": "var",
                            "FullName": null,
                            "Assignment": "pokeTarget.InverseTransformPoint(data.axisAlignedPokeInteractionPoint)",
                            "Kind": "Definition",
                            "DefinitionLine": 185
                          }
                        },
                        {
                          "Variable": {
                            "Name": "m_TransformTweenableVariable.target",
                            "Type": "?",
                            "Assignment": "targetPosition",
                            "Kind": "Assignment",
                            "AssignmentLine": 189,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "m_TransformTweenableVariable"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_TransformTweenableVariable"
                                ],
                                "Invocations": [],
                                "Type": "Vector3TweenableVariable",
                                "Statement": "m_TransformTweenableVariable",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "targetPosition",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 189,
                            "UseKind": "LocalReference",
                            "AssignedTo": "m_TransformTweenableVariable.target",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "m_ClampToMaxDistance",
                              "targetPosition.sqrMagnitude",
                              "m_MaxDistance",
                              "*",
                              "m_MaxDistance"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ClampToMaxDistance",
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MaxDistance",
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MaxDistance"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "m_ClampToMaxDistance && targetPosition.sqrMagnitude > m_MaxDistance * m_MaxDistance",
                            "ExpressionType": "LogicalAndExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 188,
                          "StartLine": 187,
                          "Invocations": [
                            {
                              "Name": "Vector3.ClampMagnitude",
                              "FullName": "Vector3.ClampMagnitude",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "targetPosition",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                },
                                {
                                  "Argument": "m_MaxDistance",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 188
                            }
                          ],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "targetPosition",
                                "Type": "?",
                                "Assignment": "Vector3.ClampMagnitude(targetPosition, m_MaxDistance)",
                                "Kind": "Assignment",
                                "AssignmentLine": 187,
                                "VariableKind": "Local",
                                "FullName": "targetPosition",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": []
                              }
                            },
                            {
                              "Variable": {
                                "Name": "Vector3.ClampMagnitude(targetPosition, m_MaxDistance)",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 187,
                                "UseKind": "Invalid",
                                "AssignedTo": "targetPosition",
                                "Value": null,
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 177
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "ResetFollowTransform",
                  "IsEmpty": false,
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.ResetFollowTransform()",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "m_PokeFollowTransform.localPosition",
                        "Type": "?",
                        "Assignment": "m_InitialPosition",
                        "Kind": "Assignment",
                        "AssignmentLine": 202,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "m_PokeFollowTransform"
                            ],
                            "Properties": [],
                            "Fields": [
                              "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                            ],
                            "Invocations": [],
                            "Type": "Transform",
                            "Statement": "m_PokeFollowTransform",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "m_InitialPosition",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 202,
                        "UseKind": "FieldReference",
                        "AssignedTo": "m_PokeFollowTransform.localPosition",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "m_ClampToMaxDistance",
                          "m_PokeFollowTransform",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ClampToMaxDistance",
                          "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "!m_ClampToMaxDistance || m_PokeFollowTransform == null",
                        "ExpressionType": "LogicalOrExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 201,
                      "StartLine": 200,
                      "Invocations": [],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": null,
                          "ReturnType": "void",
                          "Line": 201
                        }
                      ]
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 198
                }
              ],
              "Fields": [
                {
                  "Name": "m_PokeFollowTransform",
                  "Type": "Transform",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Transform that will move in the poke direction when this or a parent GameObject is poked.\" +\r\n                 \"\\nNote: Should be a direct child GameObject.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeFollowTransform",
                  "Line": 19
                },
                {
                  "Name": "m_SmoothingSpeed",
                  "Type": "float",
                  "Modifiers": [],
                  "Assignment": "16f",
                  "Attributes": [
                    "SerializeField",
                    "Range(0f, 20f)",
                    "Tooltip(\"Multiplies transform position interpolation as a factor of Time.deltaTime. If 0, no smoothing will be applied.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_SmoothingSpeed",
                  "Line": 34
                },
                {
                  "Name": "m_ReturnToInitialPosition",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": "true",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"When this component is no longer the target of the poke, the Poke Follow Transform returns to the original position.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ReturnToInitialPosition",
                  "Line": 47
                },
                {
                  "Name": "m_ApplyIfChildIsTarget",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": "true",
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to apply the follow animation if the target of the poke is a child of this transform. \" +\r\n                 \"This is useful for UI objects that may have child graphics.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ApplyIfChildIsTarget",
                  "Line": 61
                },
                {
                  "Name": "m_ClampToMaxDistance",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"Whether to keep the Poke Follow Transform from moving past a maximum distance from the poke target.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_ClampToMaxDistance",
                  "Line": 75
                },
                {
                  "Name": "m_MaxDistance",
                  "Type": "float",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [
                    "SerializeField",
                    "Tooltip(\"The maximum distance from this transform that the Poke Follow Transform can move.\")"
                  ],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MaxDistance",
                  "Line": 88
                },
                {
                  "Name": "m_PokeDataProvider",
                  "Type": "IPokeStateDataProvider",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_PokeDataProvider",
                  "Line": 109
                },
                {
                  "Name": "m_MultiPokeStateDataProvider",
                  "Type": "IMultiPokeStateDataProvider",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_MultiPokeStateDataProvider",
                  "Line": 110
                },
                {
                  "Name": "m_TransformTweenableVariable",
                  "Type": "Vector3TweenableVariable",
                  "Modifiers": [
                    "readonly"
                  ],
                  "Assignment": "new Vector3TweenableVariable()",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_TransformTweenableVariable",
                  "Line": 112
                },
                {
                  "Name": "m_BindingsGroup",
                  "Type": "BindingsGroup",
                  "Modifiers": [
                    "readonly"
                  ],
                  "Assignment": "new BindingsGroup()",
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_BindingsGroup",
                  "Line": 113
                },
                {
                  "Name": "m_InitialPosition",
                  "Type": "Vector3",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_InitialPosition",
                  "Line": 114
                },
                {
                  "Name": "m_IsFirstFrame",
                  "Type": "bool",
                  "Modifiers": [],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "UnityEngine.XR.Interaction.Toolkit.Samples.StarterAssets.XRPokeFollowAffordance.m_IsFirstFrame",
                  "Line": 115
                }
              ],
              "Constructors": [],
              "Attributes": [
                "AddComponentMenu"
              ],
              "Line": 13
            }
          ],
          "Usings": [],
          "Line": 7
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "Unity.Mathematics",
          "Line": 1
        },
        {
          "Name": "Unity.XR.CoreUtils.Bindings",
          "Line": 2
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State",
          "Line": 3
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit.Filtering",
          "Line": 4
        },
        {
          "Name": "UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.Primitives",
          "Line": 5
        }
      ],
      "Line": 1
    },
    {
      "Name": "BasicRigidBodyPush",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\BasicRigidBodyPush.cs",
      "Language": "C#",
      "Loc": 34,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "BasicRigidBodyPush",
          "FullName": "BasicRigidBodyPush",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnControllerColliderHit",
              "IsEmpty": false,
              "FullName": "BasicRigidBodyPush.OnControllerColliderHit(ControllerColliderHit)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "hit",
                  "Type": "ControllerColliderHit",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "canPush"
                    ],
                    "Properties": [],
                    "Fields": [
                      "BasicRigidBodyPush.canPush"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "canPush",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 11,
                  "StartLine": 11,
                  "Invocations": [
                    {
                      "Name": "PushRigidBodies",
                      "FullName": "BasicRigidBodyPush.PushRigidBodies(ControllerColliderHit)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\BasicRigidBodyPush.cs",
                      "DefinitionLine": 14,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "hit",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 11
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 9
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "PushRigidBodies",
              "IsEmpty": false,
              "FullName": "BasicRigidBodyPush.PushRigidBodies(ControllerColliderHit)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "hit",
                  "Type": "ControllerColliderHit",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "body.AddForce",
                  "FullName": "body.AddForce",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "pushDir * strength",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "ForceMode.Impulse",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 33
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "body",
                    "Type": "Rigidbody",
                    "FullName": null,
                    "Assignment": "hit.collider.attachedRigidbody",
                    "Kind": "Definition",
                    "DefinitionLine": 18
                  }
                },
                {
                  "Variable": {
                    "Name": "bodyLayerMask",
                    "Type": "var",
                    "FullName": null,
                    "Assignment": "1 << body.gameObject.layer",
                    "Kind": "Definition",
                    "DefinitionLine": 22
                  }
                },
                {
                  "Variable": {
                    "Name": "pushDir",
                    "Type": "Vector3",
                    "FullName": null,
                    "Assignment": "new Vector3(hit.moveDirection.x, 0.0f, hit.moveDirection.z)",
                    "Kind": "Definition",
                    "DefinitionLine": 29
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "body",
                      "null",
                      "body.isKinematic"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "?",
                    "Statement": "body == null || body.isKinematic",
                    "ExpressionType": "LogicalOrExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 20,
                  "StartLine": 20,
                  "Invocations": [],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": null,
                      "ReturnType": "void",
                      "Line": 20
                    }
                  ]
                },
                {
                  "Condition": {
                    "Tokens": [
                      "bodyLayerMask",
                      "&",
                      "pushLayers.value",
                      "0"
                    ],
                    "Properties": [],
                    "Fields": [
                      "BasicRigidBodyPush.pushLayers"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "(bodyLayerMask & pushLayers.value) == 0",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 24,
                  "StartLine": 24,
                  "Invocations": [],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": null,
                      "ReturnType": "void",
                      "Line": 24
                    }
                  ]
                },
                {
                  "Condition": {
                    "Tokens": [
                      "hit.moveDirection.y",
                      "-0.3f"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "hit.moveDirection.y < -0.3f",
                    "ExpressionType": "LessThanExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 27,
                  "StartLine": 27,
                  "Invocations": [],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": null,
                      "ReturnType": "void",
                      "Line": 27
                    }
                  ]
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 14
            }
          ],
          "Fields": [
            {
              "Name": "pushLayers",
              "Type": "LayerMask",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "BasicRigidBodyPush.pushLayers",
              "Line": 5
            },
            {
              "Name": "canPush",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "BasicRigidBodyPush.canPush",
              "Line": 6
            },
            {
              "Name": "strength",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "1.1f",
              "Attributes": [
                "Range(0.5f, 5f)"
              ],
              "FullName": "BasicRigidBodyPush.strength",
              "Line": 7
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 3
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        }
      ],
      "Line": 1
    },
    {
      "Name": "FirstPersonController",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
      "Language": "C#",
      "Loc": 267,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "StarterAssets",
          "Loc": 262,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "FirstPersonController",
              "FullName": "StarterAssets.FirstPersonController",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [
                {
                  "Name": "IsCurrentDeviceMouse",
                  "Type": "bool",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "IsAutoProperty": false,
                  "Initializer": false,
                  "InitializerValue": null,
                  "Accessor": [
                    {
                      "AccessorType": "get",
                      "HasBody": true,
                      "HasExpressionBody": false,
                      "IsEmpty": false,
                      "Modifiers": [],
                      "Attributes": [],
                      "ReturnType": null,
                      "Parameters": [],
                      "Invocations": [],
                      "Variables": [],
                      "Statements": [],
                      "WhileBlocks": [],
                      "ForEachBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "Returns": [
                        {
                          "ReturnStatement": {
                            "Tokens": [],
                            "Properties": [],
                            "Fields": [],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "false",
                            "ExpressionType": "FalseLiteralExpression",
                            "Kind": "Literal"
                          },
                          "ReturnType": "bool",
                          "Line": 84
                        }
                      ],
                      "TryBlocks": [],
                      "ExpressionBody": null,
                      "Line": 79
                    }
                  ],
                  "HasExpressionBody": false,
                  "ExpressionBody": null,
                  "Line": 77
                }
              ],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Awake",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.Awake()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "_mainCamera",
                          "null"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.FirstPersonController._mainCamera"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "_mainCamera == null",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 95,
                      "StartLine": 92,
                      "Invocations": [
                        {
                          "Name": "GameObject.FindGameObjectWithTag",
                          "FullName": "GameObject.FindGameObjectWithTag",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "\"MainCamera\"",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 94
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "_mainCamera",
                            "Type": "GameObject",
                            "Assignment": "GameObject.FindGameObjectWithTag(\"MainCamera\")",
                            "Kind": "Assignment",
                            "AssignmentLine": 93,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._mainCamera",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_mainCamera"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._mainCamera"
                                ],
                                "Invocations": [],
                                "Type": "GameObject",
                                "Statement": "_mainCamera",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "GameObject.FindGameObjectWithTag(\"MainCamera\")",
                            "Type": "GameObject",
                            "Kind": "Use",
                            "UseLine": 93,
                            "UseKind": "Invalid",
                            "AssignedTo": "_mainCamera",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 89
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Start",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.Start()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "GetComponent<CharacterController>",
                      "FullName": "GetComponent<CharacterController>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 100
                    },
                    {
                      "Name": "GetComponent<StarterAssetsInputs>",
                      "FullName": "GetComponent<StarterAssetsInputs>",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [],
                      "Line": 101
                    },
                    {
                      "Name": "Debug.LogError",
                      "FullName": "Debug.LogError",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "\"Starter Assets package is missing dependencies. Please use Tools/Starter Assets/Reinstall Dependencies to fix it\"",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 105
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "_controller",
                        "Type": "CharacterController",
                        "Assignment": "GetComponent<CharacterController>()",
                        "Kind": "Assignment",
                        "AssignmentLine": 99,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.FirstPersonController._controller",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "_controller"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._controller"
                            ],
                            "Invocations": [],
                            "Type": "CharacterController",
                            "Statement": "_controller",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "_input",
                        "Type": "StarterAssets.StarterAssetsInputs",
                        "Assignment": "GetComponent<StarterAssetsInputs>()",
                        "Kind": "Assignment",
                        "AssignmentLine": 100,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.FirstPersonController._input",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "_input"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._input"
                            ],
                            "Invocations": [],
                            "Type": "StarterAssets.StarterAssetsInputs",
                            "Statement": "_input",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "_jumpTimeoutDelta",
                        "Type": "float",
                        "Assignment": "JumpTimeout",
                        "Kind": "Assignment",
                        "AssignmentLine": 108,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.FirstPersonController._jumpTimeoutDelta",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "_jumpTimeoutDelta"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._jumpTimeoutDelta"
                            ],
                            "Invocations": [],
                            "Type": "float",
                            "Statement": "_jumpTimeoutDelta",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "_fallTimeoutDelta",
                        "Type": "float",
                        "Assignment": "FallTimeout",
                        "Kind": "Assignment",
                        "AssignmentLine": 109,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.FirstPersonController._fallTimeoutDelta",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "_fallTimeoutDelta"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._fallTimeoutDelta"
                            ],
                            "Invocations": [],
                            "Type": "float",
                            "Statement": "_fallTimeoutDelta",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "GetComponent<CharacterController>()",
                        "Type": "CharacterController",
                        "Kind": "Use",
                        "UseLine": 99,
                        "UseKind": "Invalid",
                        "AssignedTo": "_controller",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "GetComponent<StarterAssetsInputs>()",
                        "Type": "StarterAssets.StarterAssetsInputs",
                        "Kind": "Use",
                        "UseLine": 100,
                        "UseKind": "Invalid",
                        "AssignedTo": "_input",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "JumpTimeout",
                        "Type": "float",
                        "Kind": "Use",
                        "UseLine": 108,
                        "UseKind": "FieldReference",
                        "AssignedTo": "_jumpTimeoutDelta",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "FallTimeout",
                        "Type": "float",
                        "Kind": "Use",
                        "UseLine": 109,
                        "UseKind": "FieldReference",
                        "AssignedTo": "_fallTimeoutDelta",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 98
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Update",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.Update()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "JumpAndGravity",
                      "FullName": "StarterAssets.FirstPersonController.JumpAndGravity()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
                      "DefinitionLine": 201,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 115
                    },
                    {
                      "Name": "GroundedCheck",
                      "FullName": "StarterAssets.FirstPersonController.GroundedCheck()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
                      "DefinitionLine": 125,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 116
                    },
                    {
                      "Name": "Move",
                      "FullName": "StarterAssets.FirstPersonController.Move()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
                      "DefinitionLine": 154,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 117
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 113
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "LateUpdate",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.LateUpdate()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "CameraRotation",
                      "FullName": "StarterAssets.FirstPersonController.CameraRotation()",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
                      "DefinitionLine": 132,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 122
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 120
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "GroundedCheck",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.GroundedCheck()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "Physics.CheckSphere",
                      "FullName": "Physics.CheckSphere",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "spherePosition",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "GroundedRadius",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "GroundLayers",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "QueryTriggerInteraction.Ignore",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 129
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "spherePosition",
                        "Type": "Vector3",
                        "FullName": null,
                        "Assignment": "new Vector3(transform.position.x, transform.position.y - GroundedOffset, transform.position.z)",
                        "Kind": "Definition",
                        "DefinitionLine": 127
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Grounded",
                        "Type": "bool",
                        "Assignment": "Physics.CheckSphere(spherePosition, GroundedRadius, GroundLayers, QueryTriggerInteraction.Ignore)",
                        "Kind": "Assignment",
                        "AssignmentLine": 128,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.FirstPersonController.Grounded",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "Grounded"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController.Grounded"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "Grounded",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Physics.CheckSphere(spherePosition, GroundedRadius, GroundLayers, QueryTriggerInteraction.Ignore)",
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 128,
                        "UseKind": "Invalid",
                        "AssignedTo": "Grounded",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 125
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "CameraRotation",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.CameraRotation()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "_input.look.sqrMagnitude",
                          "_threshold"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.StarterAssetsInputs.look",
                          "StarterAssets.FirstPersonController._input",
                          "StarterAssets.FirstPersonController._threshold"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "_input.look.sqrMagnitude >= _threshold",
                        "ExpressionType": "GreaterThanOrEqualExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 151,
                      "StartLine": 135,
                      "Invocations": [
                        {
                          "Name": "ClampAngle",
                          "FullName": "StarterAssets.FirstPersonController.ClampAngle(float, float, float)",
                          "ReturnType": "Single",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\FirstPersonController\\Scripts\\FirstPersonController.cs",
                          "DefinitionLine": 249,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "_cinemachineTargetPitch",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "BottomClamp",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "TopClamp",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 144
                        },
                        {
                          "Name": "Quaternion.Euler",
                          "FullName": "Quaternion.Euler",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "_cinemachineTargetPitch",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "0.0f",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "0.0f",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 147
                        },
                        {
                          "Name": "transform.Rotate",
                          "FullName": "transform.Rotate",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "Vector3.up * _rotationVelocity",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 150
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "deltaTimeMultiplier",
                            "Type": "float",
                            "FullName": "float",
                            "Assignment": "IsCurrentDeviceMouse ? 1.0f : Time.deltaTime",
                            "Kind": "Definition",
                            "DefinitionLine": 137
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_cinemachineTargetPitch",
                            "Type": "float",
                            "Assignment": "_input.look.y * RotationSpeed * deltaTimeMultiplier",
                            "Kind": "Assignment",
                            "AssignmentLine": 139,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._cinemachineTargetPitch",
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_cinemachineTargetPitch"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._cinemachineTargetPitch"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_cinemachineTargetPitch",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_rotationVelocity",
                            "Type": "float",
                            "Assignment": "_input.look.x * RotationSpeed * deltaTimeMultiplier",
                            "Kind": "Assignment",
                            "AssignmentLine": 140,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._rotationVelocity",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_rotationVelocity"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._rotationVelocity"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_rotationVelocity",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_cinemachineTargetPitch",
                            "Type": "float",
                            "Assignment": "ClampAngle(_cinemachineTargetPitch, BottomClamp, TopClamp)",
                            "Kind": "Assignment",
                            "AssignmentLine": 143,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._cinemachineTargetPitch",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_cinemachineTargetPitch"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._cinemachineTargetPitch"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_cinemachineTargetPitch",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "CinemachineCameraTarget.transform.localRotation",
                            "Type": "?",
                            "Assignment": "Quaternion.Euler(_cinemachineTargetPitch, 0.0f, 0.0f)",
                            "Kind": "Assignment",
                            "AssignmentLine": 146,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "CinemachineCameraTarget"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController.CinemachineCameraTarget"
                                ],
                                "Invocations": [],
                                "Type": "GameObject",
                                "Statement": "CinemachineCameraTarget",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_input.look.y * RotationSpeed * deltaTimeMultiplier",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 139,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "_cinemachineTargetPitch",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "_input.look.y * RotationSpeed",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 139,
                                "UseKind": "BinaryOperator",
                                "AssignedTo": "_cinemachineTargetPitch",
                                "Value": null,
                                "Operation": "MultiplyExpression",
                                "VariablesList": [
                                  {
                                    "Name": "_input.look.y",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 139,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "_cinemachineTargetPitch",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  },
                                  {
                                    "Name": "RotationSpeed",
                                    "Type": "float",
                                    "Kind": "Use",
                                    "UseLine": 139,
                                    "UseKind": "FieldReference",
                                    "AssignedTo": "_cinemachineTargetPitch",
                                    "Value": null,
                                    "Operation": "IdentifierName",
                                    "VariablesList": []
                                  }
                                ]
                              },
                              {
                                "Name": "deltaTimeMultiplier",
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 139,
                                "UseKind": "LocalReference",
                                "AssignedTo": "_cinemachineTargetPitch",
                                "Value": null,
                                "Operation": "IdentifierName",
                                "VariablesList": []
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_input.look.x * RotationSpeed * deltaTimeMultiplier",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 140,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "_rotationVelocity",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "_input.look.x * RotationSpeed",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 140,
                                "UseKind": "BinaryOperator",
                                "AssignedTo": "_rotationVelocity",
                                "Value": null,
                                "Operation": "MultiplyExpression",
                                "VariablesList": [
                                  {
                                    "Name": "_input.look.x",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 140,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "_rotationVelocity",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  },
                                  {
                                    "Name": "RotationSpeed",
                                    "Type": "float",
                                    "Kind": "Use",
                                    "UseLine": 140,
                                    "UseKind": "FieldReference",
                                    "AssignedTo": "_rotationVelocity",
                                    "Value": null,
                                    "Operation": "IdentifierName",
                                    "VariablesList": []
                                  }
                                ]
                              },
                              {
                                "Name": "deltaTimeMultiplier",
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 140,
                                "UseKind": "LocalReference",
                                "AssignedTo": "_rotationVelocity",
                                "Value": null,
                                "Operation": "IdentifierName",
                                "VariablesList": []
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "ClampAngle(_cinemachineTargetPitch, BottomClamp, TopClamp)",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 143,
                            "UseKind": "Invocation",
                            "AssignedTo": "_cinemachineTargetPitch",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Quaternion.Euler(_cinemachineTargetPitch, 0.0f, 0.0f)",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 146,
                            "UseKind": "Invalid",
                            "AssignedTo": "CinemachineCameraTarget.transform.localRotation",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 132
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "Move",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.Move()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "_controller.Move",
                      "FullName": "_controller.Move",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "inputDirection.normalized * (_speed * Time.deltaTime) + new Vector3(0.0f, _verticalVelocity, 0.0f) * Time.deltaTime",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 198
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "targetSpeed",
                        "Type": "float",
                        "FullName": "float",
                        "Assignment": "_input.sprint ? SprintSpeed : MoveSpeed",
                        "Kind": "Definition",
                        "DefinitionLine": 156
                      }
                    },
                    {
                      "Variable": {
                        "Name": "currentHorizontalSpeed",
                        "Type": "float",
                        "FullName": "float",
                        "Assignment": "new Vector3(_controller.velocity.x, 0.0f, _controller.velocity.z).magnitude",
                        "Kind": "Definition",
                        "DefinitionLine": 165
                      }
                    },
                    {
                      "Variable": {
                        "Name": "speedOffset",
                        "Type": "float",
                        "FullName": "float",
                        "Assignment": "0.1f",
                        "Kind": "Definition",
                        "DefinitionLine": 167
                      }
                    },
                    {
                      "Variable": {
                        "Name": "inputMagnitude",
                        "Type": "float",
                        "FullName": "float",
                        "Assignment": "_input.analogMovement ? _input.move.magnitude : 1f",
                        "Kind": "Definition",
                        "DefinitionLine": 168
                      }
                    },
                    {
                      "Variable": {
                        "Name": "inputDirection",
                        "Type": "Vector3",
                        "FullName": null,
                        "Assignment": "new Vector3(_input.move.x, 0.0f, _input.move.y).normalized",
                        "Kind": "Definition",
                        "DefinitionLine": 186
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "_input.move",
                          "Vector2.zero"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.StarterAssetsInputs.move",
                          "StarterAssets.FirstPersonController._input"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "_input.move == Vector2.zero",
                        "ExpressionType": "EqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 163,
                      "StartLine": 163,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "targetSpeed",
                            "Type": "float",
                            "Assignment": "0.0f",
                            "Kind": "Assignment",
                            "AssignmentLine": 162,
                            "VariableKind": "Local",
                            "FullName": "targetSpeed",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 162,
                            "UseKind": "Literal",
                            "AssignedTo": "targetSpeed",
                            "Value": "0.0f",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "currentHorizontalSpeed",
                          "targetSpeed",
                          "-",
                          "speedOffset",
                          "currentHorizontalSpeed",
                          "targetSpeed",
                          "+",
                          "speedOffset"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "currentHorizontalSpeed < targetSpeed - speedOffset || currentHorizontalSpeed > targetSpeed + speedOffset",
                        "ExpressionType": "LogicalOrExpression",
                        "Kind": "Literal"
                      },
                      "Else": {
                        "ElseStatement": "{\r\n\t\t\t\t_speed = targetSpeed;\r\n\t\t\t}",
                        "EndLine": 184,
                        "StartLine": 181,
                        "Invocations": [],
                        "Variables": [
                          {
                            "Variable": {
                              "Name": "_speed",
                              "Type": "float",
                              "Assignment": "targetSpeed",
                              "Kind": "Assignment",
                              "AssignmentLine": 182,
                              "VariableKind": "Field",
                              "FullName": "StarterAssets.FirstPersonController._speed",
                              "AssignmentKind": "SimpleAssignmentExpression",
                              "Cascades": [
                                {
                                  "Tokens": [
                                    "_speed"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "StarterAssets.FirstPersonController._speed"
                                  ],
                                  "Invocations": [],
                                  "Type": "float",
                                  "Statement": "_speed",
                                  "ExpressionType": "IdentifierName",
                                  "Kind": "Field"
                                }
                              ]
                            }
                          },
                          {
                            "Variable": {
                              "Name": "targetSpeed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 182,
                              "UseKind": "LocalReference",
                              "AssignedTo": "_speed",
                              "Value": null,
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          }
                        ],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 184,
                      "StartLine": 172,
                      "Invocations": [
                        {
                          "Name": "Mathf.Lerp",
                          "FullName": "Mathf.Lerp",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "currentHorizontalSpeed",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "targetSpeed * inputMagnitude",
                              "IsInvocation": true,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "Time.deltaTime * SpeedChangeRate",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 176
                        },
                        {
                          "Name": "Mathf.Round",
                          "FullName": "Mathf.Round",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "_speed * 1000f",
                              "IsInvocation": true,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 179
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "_speed",
                            "Type": "float",
                            "Assignment": "Mathf.Lerp(currentHorizontalSpeed, targetSpeed * inputMagnitude, Time.deltaTime * SpeedChangeRate)",
                            "Kind": "Assignment",
                            "AssignmentLine": 175,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._speed",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_speed"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._speed"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_speed",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "_speed",
                            "Type": "float",
                            "Assignment": "Mathf.Round(_speed * 1000f) / 1000f",
                            "Kind": "Assignment",
                            "AssignmentLine": 178,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._speed",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_speed"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._speed"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_speed",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Mathf.Lerp(currentHorizontalSpeed, targetSpeed * inputMagnitude, Time.deltaTime * SpeedChangeRate)",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 175,
                            "UseKind": "Invalid",
                            "AssignedTo": "_speed",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Mathf.Round(_speed * 1000f) / 1000f",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 178,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "_speed",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "Mathf.Round(_speed * 1000f)",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 178,
                                "UseKind": "Invalid",
                                "AssignedTo": "_speed",
                                "Value": null,
                                "Operation": "InvocationExpression",
                                "VariablesList": []
                              },
                              {
                                "Name": null,
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 178,
                                "UseKind": "Literal",
                                "AssignedTo": "_speed",
                                "Value": "1000f",
                                "Operation": "NumericLiteralExpression",
                                "VariablesList": []
                              }
                            ]
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "_input.move",
                          "Vector2.zero"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.StarterAssetsInputs.move",
                          "StarterAssets.FirstPersonController._input"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "_input.move != Vector2.zero",
                        "ExpressionType": "NotEqualsExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 195,
                      "StartLine": 191,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "inputDirection",
                            "Type": "Vector3",
                            "Assignment": "transform.right * _input.move.x + transform.forward * _input.move.y",
                            "Kind": "Assignment",
                            "AssignmentLine": 193,
                            "VariableKind": "Local",
                            "FullName": "inputDirection",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "transform.right * _input.move.x + transform.forward * _input.move.y",
                            "Type": "Vector3",
                            "Kind": "Use",
                            "UseLine": 193,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "inputDirection",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "transform.right * _input.move.x",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 193,
                                "UseKind": "BinaryOperator",
                                "AssignedTo": "inputDirection",
                                "Value": null,
                                "Operation": "MultiplyExpression",
                                "VariablesList": [
                                  {
                                    "Name": "transform.right",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 193,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "inputDirection",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  },
                                  {
                                    "Name": "_input.move.x",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 193,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "inputDirection",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  }
                                ]
                              },
                              {
                                "Name": "transform.forward * _input.move.y",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 193,
                                "UseKind": "BinaryOperator",
                                "AssignedTo": "inputDirection",
                                "Value": null,
                                "Operation": "MultiplyExpression",
                                "VariablesList": [
                                  {
                                    "Name": "transform.forward",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 193,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "inputDirection",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  },
                                  {
                                    "Name": "_input.move.y",
                                    "Type": "?",
                                    "Kind": "Use",
                                    "UseLine": 193,
                                    "UseKind": "Invalid",
                                    "AssignedTo": "inputDirection",
                                    "Value": null,
                                    "Operation": "SimpleMemberAccessExpression",
                                    "VariablesList": []
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 154
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "JumpAndGravity",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.JumpAndGravity()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "Grounded"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.FirstPersonController.Grounded"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "Grounded",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": {
                        "ElseStatement": "{\r\n\t\t\t\t// reset the jump timeout timer\r\n\t\t\t\t_jumpTimeoutDelta = JumpTimeout;\r\n\r\n\t\t\t\t// fall timeout\r\n\t\t\t\tif (_fallTimeoutDelta >= 0.0f)\r\n\t\t\t\t{\r\n\t\t\t\t\t_fallTimeoutDelta -= Time.deltaTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if we are not grounded, do not jump\r\n\t\t\t\t_input.jump = false;\r\n\t\t\t}",
                        "EndLine": 240,
                        "StartLine": 227,
                        "Invocations": [],
                        "Variables": [
                          {
                            "Variable": {
                              "Name": "_jumpTimeoutDelta",
                              "Type": "float",
                              "Assignment": "JumpTimeout",
                              "Kind": "Assignment",
                              "AssignmentLine": 229,
                              "VariableKind": "Field",
                              "FullName": "StarterAssets.FirstPersonController._jumpTimeoutDelta",
                              "AssignmentKind": "SimpleAssignmentExpression",
                              "Cascades": [
                                {
                                  "Tokens": [
                                    "_jumpTimeoutDelta"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "StarterAssets.FirstPersonController._jumpTimeoutDelta"
                                  ],
                                  "Invocations": [],
                                  "Type": "float",
                                  "Statement": "_jumpTimeoutDelta",
                                  "ExpressionType": "IdentifierName",
                                  "Kind": "Field"
                                }
                              ]
                            }
                          },
                          {
                            "Variable": {
                              "Name": "_input.jump",
                              "Type": "bool",
                              "Assignment": "false",
                              "Kind": "Assignment",
                              "AssignmentLine": 238,
                              "VariableKind": "Field",
                              "FullName": "StarterAssets.StarterAssetsInputs.jump",
                              "AssignmentKind": "SimpleAssignmentExpression",
                              "Cascades": [
                                {
                                  "Tokens": [
                                    "_input"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "StarterAssets.FirstPersonController._input"
                                  ],
                                  "Invocations": [],
                                  "Type": "StarterAssets.StarterAssetsInputs",
                                  "Statement": "_input",
                                  "ExpressionType": "IdentifierName",
                                  "Kind": "Field"
                                },
                                {
                                  "Tokens": [
                                    "_input"
                                  ],
                                  "Properties": [],
                                  "Fields": [
                                    "StarterAssets.FirstPersonController._input"
                                  ],
                                  "Invocations": [],
                                  "Type": "StarterAssets.StarterAssetsInputs",
                                  "Statement": "_input",
                                  "ExpressionType": "IdentifierName",
                                  "Kind": "Field"
                                }
                              ]
                            }
                          },
                          {
                            "Variable": {
                              "Name": "JumpTimeout",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 229,
                              "UseKind": "FieldReference",
                              "AssignedTo": "_jumpTimeoutDelta",
                              "Value": null,
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          },
                          {
                            "Variable": {
                              "Name": null,
                              "Type": "bool",
                              "Kind": "Use",
                              "UseLine": 238,
                              "UseKind": "Literal",
                              "AssignedTo": "_input.jump",
                              "Value": "false",
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          }
                        ],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [
                          {
                            "Condition": {
                              "Tokens": [
                                "_fallTimeoutDelta",
                                "0.0f"
                              ],
                              "Properties": [],
                              "Fields": [
                                "StarterAssets.FirstPersonController._fallTimeoutDelta"
                              ],
                              "Invocations": [],
                              "Type": "bool",
                              "Statement": "_fallTimeoutDelta >= 0.0f",
                              "ExpressionType": "GreaterThanOrEqualExpression",
                              "Kind": "Method"
                            },
                            "Else": null,
                            "DanglingElse": true,
                            "Depth": 2,
                            "EndLine": 236,
                            "StartLine": 233,
                            "Invocations": [],
                            "Variables": [
                              {
                                "Variable": {
                                  "Name": "_fallTimeoutDelta",
                                  "Type": "float",
                                  "Assignment": "Time.deltaTime",
                                  "Kind": "Assignment",
                                  "AssignmentLine": 234,
                                  "VariableKind": "Field",
                                  "FullName": "StarterAssets.FirstPersonController._fallTimeoutDelta",
                                  "AssignmentKind": "SubtractAssignmentExpression",
                                  "Cascades": [
                                    {
                                      "Tokens": [
                                        "_fallTimeoutDelta"
                                      ],
                                      "Properties": [],
                                      "Fields": [
                                        "StarterAssets.FirstPersonController._fallTimeoutDelta"
                                      ],
                                      "Invocations": [],
                                      "Type": "float",
                                      "Statement": "_fallTimeoutDelta",
                                      "ExpressionType": "IdentifierName",
                                      "Kind": "Field"
                                    }
                                  ]
                                }
                              },
                              {
                                "Variable": {
                                  "Name": "Time.deltaTime",
                                  "Type": "?",
                                  "Kind": "Use",
                                  "UseLine": 234,
                                  "UseKind": "Invalid",
                                  "AssignedTo": "_fallTimeoutDelta",
                                  "Value": null,
                                  "Operation": "SubtractAssignmentExpression",
                                  "VariablesList": []
                                }
                              }
                            ],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          }
                        ],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 240,
                      "StartLine": 203,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "_fallTimeoutDelta",
                            "Type": "float",
                            "Assignment": "FallTimeout",
                            "Kind": "Assignment",
                            "AssignmentLine": 205,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._fallTimeoutDelta",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_fallTimeoutDelta"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._fallTimeoutDelta"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_fallTimeoutDelta",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "FallTimeout",
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 205,
                            "UseKind": "FieldReference",
                            "AssignedTo": "_fallTimeoutDelta",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "_verticalVelocity",
                              "0.0f"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._verticalVelocity"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "_verticalVelocity < 0.0f",
                            "ExpressionType": "LessThanExpression",
                            "Kind": "Method"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 212,
                          "StartLine": 209,
                          "Invocations": [],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "_verticalVelocity",
                                "Type": "float",
                                "Assignment": "-2f",
                                "Kind": "Assignment",
                                "AssignmentLine": 210,
                                "VariableKind": "Field",
                                "FullName": "StarterAssets.FirstPersonController._verticalVelocity",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": [
                                  {
                                    "Tokens": [
                                      "_verticalVelocity"
                                    ],
                                    "Properties": [],
                                    "Fields": [
                                      "StarterAssets.FirstPersonController._verticalVelocity"
                                    ],
                                    "Invocations": [],
                                    "Type": "float",
                                    "Statement": "_verticalVelocity",
                                    "ExpressionType": "IdentifierName",
                                    "Kind": "Field"
                                  }
                                ]
                              }
                            },
                            {
                              "Variable": {
                                "Name": "-2f",
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 210,
                                "UseKind": "UnaryOperator",
                                "AssignedTo": "_verticalVelocity",
                                "Value": null,
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "Condition": {
                            "Tokens": [
                              "_input.jump",
                              "_jumpTimeoutDelta",
                              "0.0f"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.StarterAssetsInputs.jump",
                              "StarterAssets.FirstPersonController._input",
                              "StarterAssets.FirstPersonController._jumpTimeoutDelta"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "_input.jump && _jumpTimeoutDelta <= 0.0f",
                            "ExpressionType": "LogicalAndExpression",
                            "Kind": "Literal"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 219,
                          "StartLine": 215,
                          "Invocations": [
                            {
                              "Name": "Mathf.Sqrt",
                              "FullName": "Mathf.Sqrt",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "JumpHeight * -2f * Gravity",
                                  "IsInvocation": true,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 218
                            }
                          ],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "_verticalVelocity",
                                "Type": "float",
                                "Assignment": "Mathf.Sqrt(JumpHeight * -2f * Gravity)",
                                "Kind": "Assignment",
                                "AssignmentLine": 217,
                                "VariableKind": "Field",
                                "FullName": "StarterAssets.FirstPersonController._verticalVelocity",
                                "AssignmentKind": "SimpleAssignmentExpression",
                                "Cascades": [
                                  {
                                    "Tokens": [
                                      "_verticalVelocity"
                                    ],
                                    "Properties": [],
                                    "Fields": [
                                      "StarterAssets.FirstPersonController._verticalVelocity"
                                    ],
                                    "Invocations": [],
                                    "Type": "float",
                                    "Statement": "_verticalVelocity",
                                    "ExpressionType": "IdentifierName",
                                    "Kind": "Field"
                                  }
                                ]
                              }
                            },
                            {
                              "Variable": {
                                "Name": "Mathf.Sqrt(JumpHeight * -2f * Gravity)",
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 217,
                                "UseKind": "Invalid",
                                "AssignedTo": "_verticalVelocity",
                                "Value": null,
                                "Operation": "SimpleAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        },
                        {
                          "Condition": {
                            "Tokens": [
                              "_jumpTimeoutDelta",
                              "0.0f"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.FirstPersonController._jumpTimeoutDelta"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "_jumpTimeoutDelta >= 0.0f",
                            "ExpressionType": "GreaterThanOrEqualExpression",
                            "Kind": "Method"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 2,
                          "EndLine": 225,
                          "StartLine": 222,
                          "Invocations": [],
                          "Variables": [
                            {
                              "Variable": {
                                "Name": "_jumpTimeoutDelta",
                                "Type": "float",
                                "Assignment": "Time.deltaTime",
                                "Kind": "Assignment",
                                "AssignmentLine": 223,
                                "VariableKind": "Field",
                                "FullName": "StarterAssets.FirstPersonController._jumpTimeoutDelta",
                                "AssignmentKind": "SubtractAssignmentExpression",
                                "Cascades": [
                                  {
                                    "Tokens": [
                                      "_jumpTimeoutDelta"
                                    ],
                                    "Properties": [],
                                    "Fields": [
                                      "StarterAssets.FirstPersonController._jumpTimeoutDelta"
                                    ],
                                    "Invocations": [],
                                    "Type": "float",
                                    "Statement": "_jumpTimeoutDelta",
                                    "ExpressionType": "IdentifierName",
                                    "Kind": "Field"
                                  }
                                ]
                              }
                            },
                            {
                              "Variable": {
                                "Name": "Time.deltaTime",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 223,
                                "UseKind": "Invalid",
                                "AssignedTo": "_jumpTimeoutDelta",
                                "Value": null,
                                "Operation": "SubtractAssignmentExpression",
                                "VariablesList": []
                              }
                            }
                          ],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "_verticalVelocity",
                          "_terminalVelocity"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.FirstPersonController._verticalVelocity",
                          "StarterAssets.FirstPersonController._terminalVelocity"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "_verticalVelocity < _terminalVelocity",
                        "ExpressionType": "LessThanExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 246,
                      "StartLine": 243,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "_verticalVelocity",
                            "Type": "float",
                            "Assignment": "Gravity * Time.deltaTime",
                            "Kind": "Assignment",
                            "AssignmentLine": 244,
                            "VariableKind": "Field",
                            "FullName": "StarterAssets.FirstPersonController._verticalVelocity",
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "_verticalVelocity"
                                ],
                                "Properties": [],
                                "Fields": [
                                  "StarterAssets.FirstPersonController._verticalVelocity"
                                ],
                                "Invocations": [],
                                "Type": "float",
                                "Statement": "_verticalVelocity",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Field"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": "Gravity * Time.deltaTime",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 244,
                            "UseKind": "BinaryOperator",
                            "AssignedTo": "_verticalVelocity",
                            "Value": null,
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": [
                              {
                                "Name": "Gravity",
                                "Type": "float",
                                "Kind": "Use",
                                "UseLine": 244,
                                "UseKind": "FieldReference",
                                "AssignedTo": "_verticalVelocity",
                                "Value": null,
                                "Operation": "IdentifierName",
                                "VariablesList": []
                              },
                              {
                                "Name": "Time.deltaTime",
                                "Type": "?",
                                "Kind": "Use",
                                "UseLine": 244,
                                "UseKind": "Invalid",
                                "AssignedTo": "_verticalVelocity",
                                "Value": null,
                                "Operation": "SimpleMemberAccessExpression",
                                "VariablesList": []
                              }
                            ]
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 201
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "ClampAngle",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.ClampAngle(float, float, float)",
                  "Modifiers": [
                    "private",
                    "static"
                  ],
                  "Attributes": [],
                  "ReturnType": "float",
                  "Parameters": [
                    {
                      "Name": "lfAngle",
                      "Type": "float",
                      "Assignment": null,
                      "Attributes": []
                    },
                    {
                      "Name": "lfMin",
                      "Type": "float",
                      "Assignment": null,
                      "Attributes": []
                    },
                    {
                      "Name": "lfMax",
                      "Type": "float",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "Mathf.Clamp",
                      "FullName": "Mathf.Clamp",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "lfAngle",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "lfMin",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "lfMax",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 253
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "lfAngle",
                          "-360f"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "lfAngle < -360f",
                        "ExpressionType": "LessThanExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 251,
                      "StartLine": 251,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "lfAngle",
                            "Type": "float",
                            "Assignment": "360f",
                            "Kind": "Assignment",
                            "AssignmentLine": 250,
                            "VariableKind": "Parameter",
                            "FullName": "float",
                            "AssignmentKind": "AddAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 250,
                            "UseKind": "Literal",
                            "AssignedTo": "lfAngle",
                            "Value": "360f",
                            "Operation": "AddAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "lfAngle",
                          "360f"
                        ],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "lfAngle > 360f",
                        "ExpressionType": "GreaterThanExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 1,
                      "EndLine": 252,
                      "StartLine": 252,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "lfAngle",
                            "Type": "float",
                            "Assignment": "360f",
                            "Kind": "Assignment",
                            "AssignmentLine": 251,
                            "VariableKind": "Parameter",
                            "FullName": "float",
                            "AssignmentKind": "SubtractAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "float",
                            "Kind": "Use",
                            "UseLine": 251,
                            "UseKind": "Literal",
                            "AssignedTo": "lfAngle",
                            "Value": "360f",
                            "Operation": "SubtractAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [
                          {
                            "Name": "Mathf.Clamp",
                            "FullName": "Mathf.Clamp",
                            "ReturnType": null,
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": null,
                            "Module": null,
                            "ReferenceFound": false,
                            "Arguments": [
                              {
                                "Argument": "lfAngle",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "lfMin",
                                "IsInvocation": false,
                                "IsLiteral": false
                              },
                              {
                                "Argument": "lfMax",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 253
                          }
                        ],
                        "Type": "?",
                        "Statement": "Mathf.Clamp(lfAngle, lfMin, lfMax)",
                        "ExpressionType": "InvocationExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "?",
                      "Line": 253
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 249
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnDrawGizmosSelected",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.FirstPersonController.OnDrawGizmosSelected()",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [],
                  "Invocations": [
                    {
                      "Name": "Gizmos.DrawSphere",
                      "FullName": "Gizmos.DrawSphere",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "new Vector3(transform.position.x, transform.position.y - GroundedOffset, transform.position.z)",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "GroundedRadius",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 265
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "transparentGreen",
                        "Type": "Color",
                        "FullName": null,
                        "Assignment": "new Color(0.0f, 1.0f, 0.0f, 0.35f)",
                        "Kind": "Definition",
                        "DefinitionLine": 257
                      }
                    },
                    {
                      "Variable": {
                        "Name": "transparentRed",
                        "Type": "Color",
                        "FullName": null,
                        "Assignment": "new Color(1.0f, 0.0f, 0.0f, 0.35f)",
                        "Kind": "Definition",
                        "DefinitionLine": 258
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "Grounded"
                        ],
                        "Properties": [],
                        "Fields": [
                          "StarterAssets.FirstPersonController.Grounded"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "Grounded",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "Else": {
                        "ElseStatement": "Gizmos.color = transparentRed;",
                        "EndLine": 262,
                        "StartLine": 262,
                        "Invocations": [],
                        "Variables": [
                          {
                            "Variable": {
                              "Name": "Gizmos.color",
                              "Type": "?",
                              "Assignment": "transparentRed",
                              "Kind": "Assignment",
                              "AssignmentLine": 261,
                              "VariableKind": null,
                              "FullName": null,
                              "AssignmentKind": "SimpleAssignmentExpression",
                              "Cascades": []
                            }
                          },
                          {
                            "Variable": {
                              "Name": "transparentRed",
                              "Type": "?",
                              "Kind": "Use",
                              "UseLine": 261,
                              "UseKind": "LocalReference",
                              "AssignedTo": "Gizmos.color",
                              "Value": null,
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          }
                        ],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      "DanglingElse": false,
                      "Depth": 1,
                      "EndLine": 262,
                      "StartLine": 261,
                      "Invocations": [],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "Gizmos.color",
                            "Type": "?",
                            "Assignment": "transparentGreen",
                            "Kind": "Assignment",
                            "AssignmentLine": 260,
                            "VariableKind": null,
                            "FullName": null,
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": []
                          }
                        },
                        {
                          "Variable": {
                            "Name": "transparentGreen",
                            "Type": "?",
                            "Kind": "Use",
                            "UseLine": 260,
                            "UseKind": "LocalReference",
                            "AssignedTo": "Gizmos.color",
                            "Value": null,
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 256
                }
              ],
              "Fields": [
                {
                  "Name": "MoveSpeed",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "4.0f",
                  "Attributes": [
                    "Header(\"Player\")",
                    "Tooltip(\"Move speed of the character in m/s\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.MoveSpeed",
                  "Line": 16
                },
                {
                  "Name": "SprintSpeed",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "6.0f",
                  "Attributes": [
                    "Tooltip(\"Sprint speed of the character in m/s\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.SprintSpeed",
                  "Line": 18
                },
                {
                  "Name": "RotationSpeed",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "1.0f",
                  "Attributes": [
                    "Tooltip(\"Rotation speed of the character\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.RotationSpeed",
                  "Line": 20
                },
                {
                  "Name": "SpeedChangeRate",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "10.0f",
                  "Attributes": [
                    "Tooltip(\"Acceleration and deceleration\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.SpeedChangeRate",
                  "Line": 22
                },
                {
                  "Name": "JumpHeight",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "1.2f",
                  "Attributes": [
                    "Space(10)",
                    "Tooltip(\"The height the player can jump\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.JumpHeight",
                  "Line": 26
                },
                {
                  "Name": "Gravity",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "-15.0f",
                  "Attributes": [
                    "Tooltip(\"The character uses its own gravity value. The engine default is -9.81f\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.Gravity",
                  "Line": 28
                },
                {
                  "Name": "JumpTimeout",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "0.1f",
                  "Attributes": [
                    "Space(10)",
                    "Tooltip(\"Time required to pass before being able to jump again. Set to 0f to instantly jump again\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.JumpTimeout",
                  "Line": 32
                },
                {
                  "Name": "FallTimeout",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "0.15f",
                  "Attributes": [
                    "Tooltip(\"Time required to pass before entering the fall state. Useful for walking down stairs\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.FallTimeout",
                  "Line": 34
                },
                {
                  "Name": "Grounded",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "true",
                  "Attributes": [
                    "Header(\"Player Grounded\")",
                    "Tooltip(\"If the character is grounded or not. Not part of the CharacterController built in grounded check\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.Grounded",
                  "Line": 38
                },
                {
                  "Name": "GroundedOffset",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "-0.14f",
                  "Attributes": [
                    "Tooltip(\"Useful for rough ground\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.GroundedOffset",
                  "Line": 40
                },
                {
                  "Name": "GroundedRadius",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "0.5f",
                  "Attributes": [
                    "Tooltip(\"The radius of the grounded check. Should match the radius of the CharacterController\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.GroundedRadius",
                  "Line": 42
                },
                {
                  "Name": "GroundLayers",
                  "Type": "LayerMask",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [
                    "Tooltip(\"What layers the character uses as ground\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.GroundLayers",
                  "Line": 44
                },
                {
                  "Name": "CinemachineCameraTarget",
                  "Type": "GameObject",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [
                    "Header(\"Cinemachine\")",
                    "Tooltip(\"The follow target set in the Cinemachine Virtual Camera that the camera will follow\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.CinemachineCameraTarget",
                  "Line": 48
                },
                {
                  "Name": "TopClamp",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "90.0f",
                  "Attributes": [
                    "Tooltip(\"How far in degrees can you move the camera up\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.TopClamp",
                  "Line": 50
                },
                {
                  "Name": "BottomClamp",
                  "Type": "float",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "-90.0f",
                  "Attributes": [
                    "Tooltip(\"How far in degrees can you move the camera down\")"
                  ],
                  "FullName": "StarterAssets.FirstPersonController.BottomClamp",
                  "Line": 52
                },
                {
                  "Name": "_cinemachineTargetPitch",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._cinemachineTargetPitch",
                  "Line": 55
                },
                {
                  "Name": "_speed",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._speed",
                  "Line": 58
                },
                {
                  "Name": "_rotationVelocity",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._rotationVelocity",
                  "Line": 59
                },
                {
                  "Name": "_verticalVelocity",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._verticalVelocity",
                  "Line": 60
                },
                {
                  "Name": "_terminalVelocity",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": "53.0f",
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._terminalVelocity",
                  "Line": 61
                },
                {
                  "Name": "_jumpTimeoutDelta",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._jumpTimeoutDelta",
                  "Line": 64
                },
                {
                  "Name": "_fallTimeoutDelta",
                  "Type": "float",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._fallTimeoutDelta",
                  "Line": 65
                },
                {
                  "Name": "_controller",
                  "Type": "CharacterController",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._controller",
                  "Line": 71
                },
                {
                  "Name": "_input",
                  "Type": "StarterAssetsInputs",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._input",
                  "Line": 72
                },
                {
                  "Name": "_mainCamera",
                  "Type": "GameObject",
                  "Modifiers": [
                    "private"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._mainCamera",
                  "Line": 73
                },
                {
                  "Name": "_threshold",
                  "Type": "float",
                  "Modifiers": [
                    "private",
                    "const"
                  ],
                  "Assignment": "0.01f",
                  "Attributes": [],
                  "FullName": "StarterAssets.FirstPersonController._threshold",
                  "Line": 75
                }
              ],
              "Constructors": [],
              "Attributes": [
                "RequireComponent"
              ],
              "Line": 8
            }
          ],
          "Usings": [],
          "Line": 6
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        }
      ],
      "Line": 1
    },
    {
      "Name": "StarterAssetsInputs",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
      "Language": "C#",
      "Loc": 79,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "StarterAssets",
          "Loc": 74,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "StarterAssetsInputs",
              "FullName": "StarterAssets.StarterAssetsInputs",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "MoveInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.MoveInput(Vector2)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "newMoveDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "move",
                        "Type": "Vector2",
                        "Assignment": "newMoveDirection",
                        "Kind": "Assignment",
                        "AssignmentLine": 50,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.StarterAssetsInputs.move",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "move"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.StarterAssetsInputs.move"
                            ],
                            "Invocations": [],
                            "Type": "Vector2",
                            "Statement": "move",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newMoveDirection",
                        "Type": "Vector2",
                        "Kind": "Use",
                        "UseLine": 50,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "move",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 49
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "LookInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.LookInput(Vector2)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "newLookDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "look",
                        "Type": "Vector2",
                        "Assignment": "newLookDirection",
                        "Kind": "Assignment",
                        "AssignmentLine": 55,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.StarterAssetsInputs.look",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "look"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.StarterAssetsInputs.look"
                            ],
                            "Invocations": [],
                            "Type": "Vector2",
                            "Statement": "look",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newLookDirection",
                        "Type": "Vector2",
                        "Kind": "Use",
                        "UseLine": 55,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "look",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 54
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "JumpInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.JumpInput(bool)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "newJumpState",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "jump",
                        "Type": "bool",
                        "Assignment": "newJumpState",
                        "Kind": "Assignment",
                        "AssignmentLine": 60,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.StarterAssetsInputs.jump",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "jump"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.StarterAssetsInputs.jump"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "jump",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newJumpState",
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 60,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "jump",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 59
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "SprintInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.SprintInput(bool)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "newSprintState",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "sprint",
                        "Type": "bool",
                        "Assignment": "newSprintState",
                        "Kind": "Assignment",
                        "AssignmentLine": 65,
                        "VariableKind": "Field",
                        "FullName": "StarterAssets.StarterAssetsInputs.sprint",
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": [
                          {
                            "Tokens": [
                              "sprint"
                            ],
                            "Properties": [],
                            "Fields": [
                              "StarterAssets.StarterAssetsInputs.sprint"
                            ],
                            "Invocations": [],
                            "Type": "bool",
                            "Statement": "sprint",
                            "ExpressionType": "IdentifierName",
                            "Kind": "Field"
                          }
                        ]
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newSprintState",
                        "Type": "bool",
                        "Kind": "Use",
                        "UseLine": 65,
                        "UseKind": "ParameterReference",
                        "AssignedTo": "sprint",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 64
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "OnApplicationFocus",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.OnApplicationFocus(bool)",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "hasFocus",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "SetCursorState",
                      "FullName": "StarterAssets.StarterAssetsInputs.SetCursorState(bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
                      "DefinitionLine": 74,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "cursorLocked",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 71
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 69
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "SetCursorState",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.StarterAssetsInputs.SetCursorState(bool)",
                  "Modifiers": [
                    "private"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "newState",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "Cursor.lockState",
                        "Type": "?",
                        "Assignment": "newState ? CursorLockMode.Locked : CursorLockMode.None",
                        "Kind": "Assignment",
                        "AssignmentLine": 75,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "newState ? CursorLockMode.Locked : CursorLockMode.None",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 75,
                        "UseKind": "Conditional",
                        "AssignedTo": "Cursor.lockState",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 74
                }
              ],
              "Fields": [
                {
                  "Name": "move",
                  "Type": "Vector2",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [
                    "Header(\"Character Input Values\")"
                  ],
                  "FullName": "StarterAssets.StarterAssetsInputs.move",
                  "Line": 11
                },
                {
                  "Name": "look",
                  "Type": "Vector2",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.StarterAssetsInputs.look",
                  "Line": 12
                },
                {
                  "Name": "jump",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.StarterAssetsInputs.jump",
                  "Line": 13
                },
                {
                  "Name": "sprint",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "StarterAssets.StarterAssetsInputs.sprint",
                  "Line": 14
                },
                {
                  "Name": "analogMovement",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [
                    "Header(\"Movement Settings\")"
                  ],
                  "FullName": "StarterAssets.StarterAssetsInputs.analogMovement",
                  "Line": 17
                },
                {
                  "Name": "cursorLocked",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "true",
                  "Attributes": [
                    "Header(\"Mouse Cursor Settings\")"
                  ],
                  "FullName": "StarterAssets.StarterAssetsInputs.cursorLocked",
                  "Line": 20
                },
                {
                  "Name": "cursorInputForLook",
                  "Type": "bool",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": "true",
                  "Attributes": [],
                  "FullName": "StarterAssets.StarterAssetsInputs.cursorInputForLook",
                  "Line": 21
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 8
            }
          ],
          "Usings": [],
          "Line": 6
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        }
      ],
      "Line": 1
    },
    {
      "Name": "UICanvasControllerInput",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\CanvasInputs\\UICanvasControllerInput.cs",
      "Language": "C#",
      "Loc": 33,
      "Interfaces": [],
      "Namespaces": [
        {
          "Attributes": [],
          "Name": "StarterAssets",
          "Loc": 30,
          "Interfaces": [],
          "Namespaces": [],
          "Classes": [
            {
              "Name": "UICanvasControllerInput",
              "FullName": "StarterAssets.UICanvasControllerInput",
              "FullInheritanceName": "MonoBehaviour",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "MonoBehaviour",
              "Interfaces": [],
              "Properties": [],
              "Methods": [
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "VirtualMoveInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.UICanvasControllerInput.VirtualMoveInput(Vector2)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "virtualMoveDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "MoveInput",
                      "FullName": "StarterAssets.StarterAssetsInputs.MoveInput(Vector2)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
                      "DefinitionLine": 49,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "virtualMoveDirection",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 13
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 11
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "VirtualLookInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.UICanvasControllerInput.VirtualLookInput(Vector2)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "virtualLookDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "LookInput",
                      "FullName": "StarterAssets.StarterAssetsInputs.LookInput(Vector2)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
                      "DefinitionLine": 54,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "virtualLookDirection",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 18
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 16
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "VirtualJumpInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.UICanvasControllerInput.VirtualJumpInput(bool)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "virtualJumpState",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "JumpInput",
                      "FullName": "StarterAssets.StarterAssetsInputs.JumpInput(bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
                      "DefinitionLine": 59,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "virtualJumpState",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 23
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 21
                },
                {
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "Name": "VirtualSprintInput",
                  "IsEmpty": false,
                  "FullName": "StarterAssets.UICanvasControllerInput.VirtualSprintInput(bool)",
                  "Modifiers": [
                    "public"
                  ],
                  "Attributes": [],
                  "ReturnType": "void",
                  "Parameters": [
                    {
                      "Name": "virtualSprintState",
                      "Type": "bool",
                      "Assignment": null,
                      "Attributes": []
                    }
                  ],
                  "Invocations": [
                    {
                      "Name": "SprintInput",
                      "FullName": "StarterAssets.StarterAssetsInputs.SprintInput(bool)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\InputSystem\\StarterAssetsInputs.cs",
                      "DefinitionLine": 64,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "virtualSprintState",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 28
                    }
                  ],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 26
                }
              ],
              "Fields": [
                {
                  "Name": "starterAssetsInputs",
                  "Type": "StarterAssetsInputs",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [
                    "Header(\"Output\")"
                  ],
                  "FullName": "StarterAssets.UICanvasControllerInput.starterAssetsInputs",
                  "Line": 9
                }
              ],
              "Constructors": [],
              "Attributes": [],
              "Line": 5
            }
          ],
          "Usings": [],
          "Line": 3
        }
      ],
      "Classes": [],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        }
      ],
      "Line": 1
    },
    {
      "Name": "MobileDisableAutoSwitchControls",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\Utilities\\MobileDisableAutoSwitchControls.cs",
      "Language": "C#",
      "Loc": 26,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "MobileDisableAutoSwitchControls",
          "FullName": "MobileDisableAutoSwitchControls",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [],
          "Properties": [],
          "Methods": [],
          "Fields": [],
          "Constructors": [],
          "Attributes": [],
          "Line": 15
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 10
        }
      ],
      "Line": 10
    },
    {
      "Name": "UIVirtualButton",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualButton.cs",
      "Language": "C#",
      "Loc": 41,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "UIVirtualButton",
          "FullName": "UIVirtualButton",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [
            {
              "Name": "BoolEvent",
              "FullName": "UIVirtualButton.BoolEvent",
              "FullInheritanceName": "UnityEvent<bool>",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "UnityEvent<bool>",
              "Interfaces": [],
              "Properties": [],
              "Methods": [],
              "Fields": [],
              "Constructors": [],
              "Attributes": [
                "System.Serializable"
              ],
              "Line": 7
            },
            {
              "Name": "Event",
              "FullName": "UIVirtualButton.Event",
              "FullInheritanceName": "UnityEvent",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "UnityEvent",
              "Interfaces": [],
              "Properties": [],
              "Methods": [],
              "Fields": [],
              "Constructors": [],
              "Attributes": [
                "System.Serializable"
              ],
              "Line": 9
            }
          ],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [
            "IPointerDownHandler",
            "IPointerUpHandler",
            "IPointerClickHandler"
          ],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerDown",
              "IsEmpty": false,
              "FullName": "UIVirtualButton.OnPointerDown(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OutputButtonStateValue",
                  "FullName": "UIVirtualButton.OutputButtonStateValue(bool)",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualButton.cs",
                  "DefinitionLine": 31,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "true",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 18
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 16
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerUp",
              "IsEmpty": false,
              "FullName": "UIVirtualButton.OnPointerUp(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OutputButtonStateValue",
                  "FullName": "UIVirtualButton.OutputButtonStateValue(bool)",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualButton.cs",
                  "DefinitionLine": 31,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "false",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 23
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 21
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerClick",
              "IsEmpty": false,
              "FullName": "UIVirtualButton.OnPointerClick(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OutputButtonClickEvent",
                  "FullName": "UIVirtualButton.OutputButtonClickEvent()",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualButton.cs",
                  "DefinitionLine": 36,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [],
                  "Line": 28
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 26
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OutputButtonStateValue",
              "IsEmpty": false,
              "FullName": "UIVirtualButton.OutputButtonStateValue(bool)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "buttonState",
                  "Type": "bool",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "buttonStateOutputEvent.Invoke",
                  "FullName": "buttonStateOutputEvent.Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "buttonState",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 33
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 31
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OutputButtonClickEvent",
              "IsEmpty": false,
              "FullName": "UIVirtualButton.OutputButtonClickEvent()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "buttonClickOutputEvent.Invoke",
                  "FullName": "buttonClickOutputEvent.Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 38
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 36
            }
          ],
          "Fields": [
            {
              "Name": "buttonStateOutputEvent",
              "Type": "BoolEvent",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Output\")"
              ],
              "FullName": "UIVirtualButton.buttonStateOutputEvent",
              "Line": 13
            },
            {
              "Name": "buttonClickOutputEvent",
              "Type": "Event",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualButton.buttonClickOutputEvent",
              "Line": 14
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        },
        {
          "Name": "UnityEngine.EventSystems",
          "Line": 2
        },
        {
          "Name": "UnityEngine.Events",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "UIVirtualJoystick",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
      "Language": "C#",
      "Loc": 112,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "UIVirtualJoystick",
          "FullName": "UIVirtualJoystick",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [
            {
              "Name": "Event",
              "FullName": "UIVirtualJoystick.Event",
              "FullInheritanceName": "UnityEvent<Vector2>",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "UnityEvent<Vector2>",
              "Interfaces": [],
              "Properties": [],
              "Methods": [],
              "Fields": [],
              "Constructors": [],
              "Attributes": [
                "System.Serializable"
              ],
              "Line": 7
            }
          ],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [
            "IPointerDownHandler",
            "IDragHandler",
            "IPointerUpHandler"
          ],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.Start()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "SetupHandle",
                  "FullName": "UIVirtualJoystick.SetupHandle()",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
                  "DefinitionLine": 28,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [],
                  "Line": 25
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 23
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "SetupHandle",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.SetupHandle()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualJoystick.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 33,
                  "StartLine": 30,
                  "Invocations": [
                    {
                      "Name": "UpdateHandleRectPosition",
                      "FullName": "UpdateHandleRectPosition",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "Vector2.zero",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 32
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 28
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerDown",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.OnPointerDown(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OnDrag",
                  "FullName": "UIVirtualJoystick.OnDrag(PointerEventData)",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
                  "DefinitionLine": 41,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "eventData",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 38
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 36
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnDrag",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.OnDrag(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "FullName": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "containerRect",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.pressEventCamera",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "Vector2 position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 44
                },
                {
                  "Name": "ApplySizeDelta",
                  "FullName": "UIVirtualJoystick.ApplySizeDelta(Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
                  "DefinitionLine": 81,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 46
                },
                {
                  "Name": "ClampValuesToMagnitude",
                  "FullName": "UIVirtualJoystick.ClampValuesToMagnitude(Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
                  "DefinitionLine": 88,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 48
                },
                {
                  "Name": "ApplyInversionFilter",
                  "FullName": "UIVirtualJoystick.ApplyInversionFilter(Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualJoystick.cs",
                  "DefinitionLine": 93,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 50
                },
                {
                  "Name": "OutputPointerEventValue",
                  "FullName": "OutputPointerEventValue",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "outputPosition * magnitudeMultiplier",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 52
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "clampedPosition",
                    "Type": "Vector2",
                    "FullName": null,
                    "Assignment": "ClampValuesToMagnitude(position)",
                    "Kind": "Definition",
                    "DefinitionLine": 47
                  }
                },
                {
                  "Variable": {
                    "Name": "outputPosition",
                    "Type": "Vector2",
                    "FullName": null,
                    "Assignment": "ApplyInversionFilter(position)",
                    "Kind": "Definition",
                    "DefinitionLine": 49
                  }
                },
                {
                  "Variable": {
                    "Name": "position",
                    "Type": "Vector2",
                    "Assignment": "ApplySizeDelta(position)",
                    "Kind": "Assignment",
                    "AssignmentLine": 45,
                    "VariableKind": "Local",
                    "FullName": "position",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": []
                  }
                },
                {
                  "Variable": {
                    "Name": "ApplySizeDelta(position)",
                    "Type": "Vector2",
                    "Kind": "Use",
                    "UseLine": 45,
                    "UseKind": "Invocation",
                    "AssignedTo": "position",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualJoystick.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 57,
                  "StartLine": 54,
                  "Invocations": [
                    {
                      "Name": "UpdateHandleRectPosition",
                      "FullName": "UpdateHandleRectPosition",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "clampedPosition * joystickRange",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 56
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 41
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerUp",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.OnPointerUp(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OutputPointerEventValue",
                  "FullName": "OutputPointerEventValue",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "Vector2.zero",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 63
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualJoystick.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 68,
                  "StartLine": 65,
                  "Invocations": [
                    {
                      "Name": "UpdateHandleRectPosition",
                      "FullName": "UpdateHandleRectPosition",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "Vector2.zero",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 67
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 61
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OutputPointerEventValue",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.OutputPointerEventValue(Vector2)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "pointerPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "joystickOutputEvent.Invoke",
                  "FullName": "joystickOutputEvent.Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "pointerPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 71
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "UpdateHandleRectPosition",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.UpdateHandleRectPosition(Vector2)",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "newPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "handleRect.anchoredPosition",
                    "Type": "?",
                    "Assignment": "newPosition",
                    "Kind": "Assignment",
                    "AssignmentLine": 77,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "handleRect"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UIVirtualJoystick.handleRect"
                        ],
                        "Invocations": [],
                        "Type": "RectTransform",
                        "Statement": "handleRect",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "newPosition",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 77,
                    "UseKind": "ParameterReference",
                    "AssignedTo": "handleRect.anchoredPosition",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 76
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ApplySizeDelta",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.ApplySizeDelta(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "position",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "x",
                    "Type": "float",
                    "FullName": "float",
                    "Assignment": "(position.x/containerRect.sizeDelta.x) * 2.5f",
                    "Kind": "Definition",
                    "DefinitionLine": 82
                  }
                },
                {
                  "Variable": {
                    "Name": "y",
                    "Type": "float",
                    "FullName": "float",
                    "Assignment": "(position.y/containerRect.sizeDelta.y) * 2.5f",
                    "Kind": "Definition",
                    "DefinitionLine": 83
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "Vector2",
                    "Statement": "new Vector2(x, y)",
                    "ExpressionType": "ObjectCreationExpression",
                    "Kind": "Literal"
                  },
                  "ReturnType": "Vector2",
                  "Line": 85
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 81
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ClampValuesToMagnitude",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.ClampValuesToMagnitude(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "position",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "Vector2.ClampMagnitude",
                  "FullName": "Vector2.ClampMagnitude",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "1",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 90
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Vector2.ClampMagnitude",
                        "FullName": "Vector2.ClampMagnitude",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "position",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "1",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 90
                      }
                    ],
                    "Type": "?",
                    "Statement": "Vector2.ClampMagnitude(position, 1)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "ReturnType": "?",
                  "Line": 90
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 88
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ApplyInversionFilter",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.ApplyInversionFilter(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "position",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "invertXOutputValue"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualJoystick.invertXOutputValue"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "invertXOutputValue",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 98,
                  "StartLine": 95,
                  "Invocations": [
                    {
                      "Name": "InvertValue",
                      "FullName": "InvertValue",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "position.x",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 97
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "position.x",
                        "Type": "?",
                        "Assignment": "InvertValue(position.x)",
                        "Kind": "Assignment",
                        "AssignmentLine": 96,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InvertValue(position.x)",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 96,
                        "UseKind": "Invalid",
                        "AssignedTo": "position.x",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                },
                {
                  "Condition": {
                    "Tokens": [
                      "invertYOutputValue"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualJoystick.invertYOutputValue"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "invertYOutputValue",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 103,
                  "StartLine": 100,
                  "Invocations": [
                    {
                      "Name": "InvertValue",
                      "FullName": "InvertValue",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "position.y",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 102
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "position.y",
                        "Type": "?",
                        "Assignment": "InvertValue(position.y)",
                        "Kind": "Assignment",
                        "AssignmentLine": 101,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InvertValue(position.y)",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 101,
                        "UseKind": "Invalid",
                        "AssignedTo": "position.y",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "Vector2",
                    "Statement": "position",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Parameter"
                  },
                  "ReturnType": "Vector2",
                  "Line": 105
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 93
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "InvertValue",
              "IsEmpty": false,
              "FullName": "UIVirtualJoystick.InvertValue(float)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "float",
              "Parameters": [
                {
                  "Name": "value",
                  "Type": "float",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "float",
                    "Statement": "-value",
                    "ExpressionType": "UnaryMinusExpression",
                    "Kind": "Method"
                  },
                  "ReturnType": "float",
                  "Line": 110
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 108
            }
          ],
          "Fields": [
            {
              "Name": "containerRect",
              "Type": "RectTransform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Rect References\")"
              ],
              "FullName": "UIVirtualJoystick.containerRect",
              "Line": 11
            },
            {
              "Name": "handleRect",
              "Type": "RectTransform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualJoystick.handleRect",
              "Line": 12
            },
            {
              "Name": "joystickRange",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "50f",
              "Attributes": [
                "Header(\"Settings\")"
              ],
              "FullName": "UIVirtualJoystick.joystickRange",
              "Line": 15
            },
            {
              "Name": "magnitudeMultiplier",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "1f",
              "Attributes": [],
              "FullName": "UIVirtualJoystick.magnitudeMultiplier",
              "Line": 16
            },
            {
              "Name": "invertXOutputValue",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualJoystick.invertXOutputValue",
              "Line": 17
            },
            {
              "Name": "invertYOutputValue",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualJoystick.invertYOutputValue",
              "Line": 18
            },
            {
              "Name": "joystickOutputEvent",
              "Type": "Event",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Output\")"
              ],
              "FullName": "UIVirtualJoystick.joystickOutputEvent",
              "Line": 21
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        },
        {
          "Name": "UnityEngine.EventSystems",
          "Line": 2
        },
        {
          "Name": "UnityEngine.Events",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "UIVirtualTouchZone",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
      "Language": "C#",
      "Loc": 125,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "UIVirtualTouchZone",
          "FullName": "UIVirtualTouchZone",
          "FullInheritanceName": "MonoBehaviour",
          "InnerClasses": [
            {
              "Name": "Event",
              "FullName": "UIVirtualTouchZone.Event",
              "FullInheritanceName": "UnityEvent<Vector2>",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "UnityEvent<Vector2>",
              "Interfaces": [],
              "Properties": [],
              "Methods": [],
              "Fields": [],
              "Constructors": [],
              "Attributes": [
                "System.Serializable"
              ],
              "Line": 7
            }
          ],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "MonoBehaviour",
          "Interfaces": [
            "IPointerDownHandler",
            "IDragHandler",
            "IPointerUpHandler"
          ],
          "Properties": [],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Start",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.Start()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "SetupHandle",
                  "FullName": "UIVirtualTouchZone.SetupHandle()",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
                  "DefinitionLine": 32,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [],
                  "Line": 29
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 27
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "SetupHandle",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.SetupHandle()",
              "Modifiers": [
                "private"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualTouchZone.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 37,
                  "StartLine": 34,
                  "Invocations": [
                    {
                      "Name": "SetObjectActiveState",
                      "FullName": "SetObjectActiveState",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "handleRect.gameObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "false",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 36
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 32
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerDown",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.OnPointerDown(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "FullName": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "containerRect",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.pressEventCamera",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "pointerDownPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 43
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualTouchZone.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 49,
                  "StartLine": 45,
                  "Invocations": [
                    {
                      "Name": "SetObjectActiveState",
                      "FullName": "SetObjectActiveState",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "handleRect.gameObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "true",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 47
                    },
                    {
                      "Name": "UpdateHandleRectPosition",
                      "FullName": "UIVirtualTouchZone.UpdateHandleRectPosition(Vector2)",
                      "ReturnType": "Void",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
                      "DefinitionLine": 85,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [
                        {
                          "Argument": "pointerDownPosition",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 48
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 40
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnDrag",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.OnDrag(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "FullName": "RectTransformUtility.ScreenPointToLocalPointInRectangle",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "containerRect",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "eventData.pressEventCamera",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "currentPointerPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 55
                },
                {
                  "Name": "GetDeltaBetweenPositions",
                  "FullName": "UIVirtualTouchZone.GetDeltaBetweenPositions(Vector2, Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
                  "DefinitionLine": 95,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "pointerDownPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "currentPointerPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 57
                },
                {
                  "Name": "ClampValuesToMagnitude",
                  "FullName": "UIVirtualTouchZone.ClampValuesToMagnitude(Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
                  "DefinitionLine": 100,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "positionDelta",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 59
                },
                {
                  "Name": "ApplyInversionFilter",
                  "FullName": "UIVirtualTouchZone.ApplyInversionFilter(Vector2)",
                  "ReturnType": "Vector2",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\Mobile\\Scripts\\VirtualInputs\\UIVirtualTouchZone.cs",
                  "DefinitionLine": 105,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "clampedPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 61
                },
                {
                  "Name": "OutputPointerEventValue",
                  "FullName": "OutputPointerEventValue",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "outputPosition * magnitudeMultiplier",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 63
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "positionDelta",
                    "Type": "Vector2",
                    "FullName": null,
                    "Assignment": "GetDeltaBetweenPositions(pointerDownPosition, currentPointerPosition)",
                    "Kind": "Definition",
                    "DefinitionLine": 56
                  }
                },
                {
                  "Variable": {
                    "Name": "clampedPosition",
                    "Type": "Vector2",
                    "FullName": null,
                    "Assignment": "ClampValuesToMagnitude(positionDelta)",
                    "Kind": "Definition",
                    "DefinitionLine": 58
                  }
                },
                {
                  "Variable": {
                    "Name": "outputPosition",
                    "Type": "Vector2",
                    "FullName": null,
                    "Assignment": "ApplyInversionFilter(clampedPosition)",
                    "Kind": "Definition",
                    "DefinitionLine": 60
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 52
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnPointerUp",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.OnPointerUp(PointerEventData)",
              "Modifiers": [
                "public"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "eventData",
                  "Type": "PointerEventData",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "OutputPointerEventValue",
                  "FullName": "OutputPointerEventValue",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "Vector2.zero",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 71
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "pointerDownPosition",
                    "Type": "Vector2",
                    "Assignment": "Vector2.zero",
                    "Kind": "Assignment",
                    "AssignmentLine": 67,
                    "VariableKind": "Field",
                    "FullName": "UIVirtualTouchZone.pointerDownPosition",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "pointerDownPosition"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UIVirtualTouchZone.pointerDownPosition"
                        ],
                        "Invocations": [],
                        "Type": "Vector2",
                        "Statement": "pointerDownPosition",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "currentPointerPosition",
                    "Type": "Vector2",
                    "Assignment": "Vector2.zero",
                    "Kind": "Assignment",
                    "AssignmentLine": 68,
                    "VariableKind": "Field",
                    "FullName": "UIVirtualTouchZone.currentPointerPosition",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "currentPointerPosition"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UIVirtualTouchZone.currentPointerPosition"
                        ],
                        "Invocations": [],
                        "Type": "Vector2",
                        "Statement": "currentPointerPosition",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "Vector2.zero",
                    "Type": "Vector2",
                    "Kind": "Use",
                    "UseLine": 67,
                    "UseKind": "Invalid",
                    "AssignedTo": "pointerDownPosition",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "Vector2.zero",
                    "Type": "Vector2",
                    "Kind": "Use",
                    "UseLine": 68,
                    "UseKind": "Invalid",
                    "AssignedTo": "currentPointerPosition",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "handleRect"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualTouchZone.handleRect"
                    ],
                    "Invocations": [],
                    "Type": "RectTransform",
                    "Statement": "handleRect",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 77,
                  "StartLine": 73,
                  "Invocations": [
                    {
                      "Name": "SetObjectActiveState",
                      "FullName": "SetObjectActiveState",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "handleRect.gameObject",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "false",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 75
                    },
                    {
                      "Name": "UpdateHandleRectPosition",
                      "FullName": "UpdateHandleRectPosition",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "Vector2.zero",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 76
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 66
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OutputPointerEventValue",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.OutputPointerEventValue(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "pointerPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "touchZoneOutputEvent.Invoke",
                  "FullName": "touchZoneOutputEvent.Invoke",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "pointerPosition",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 82
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 80
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "UpdateHandleRectPosition",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.UpdateHandleRectPosition(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "newPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "handleRect.anchoredPosition",
                    "Type": "?",
                    "Assignment": "newPosition",
                    "Kind": "Assignment",
                    "AssignmentLine": 86,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "handleRect"
                        ],
                        "Properties": [],
                        "Fields": [
                          "UIVirtualTouchZone.handleRect"
                        ],
                        "Invocations": [],
                        "Type": "RectTransform",
                        "Statement": "handleRect",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "newPosition",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 86,
                    "UseKind": "ParameterReference",
                    "AssignedTo": "handleRect.anchoredPosition",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 85
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "SetObjectActiveState",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.SetObjectActiveState(GameObject, bool)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [
                {
                  "Name": "targetObject",
                  "Type": "GameObject",
                  "Assignment": null,
                  "Attributes": []
                },
                {
                  "Name": "newState",
                  "Type": "bool",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "targetObject.SetActive",
                  "FullName": "targetObject.SetActive",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "newState",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 92
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 90
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "GetDeltaBetweenPositions",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.GetDeltaBetweenPositions(Vector2, Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "firstPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                },
                {
                  "Name": "secondPosition",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "?",
                    "Statement": "secondPosition - firstPosition",
                    "ExpressionType": "SubtractExpression",
                    "Kind": "Literal"
                  },
                  "ReturnType": "?",
                  "Line": 97
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 95
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ClampValuesToMagnitude",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.ClampValuesToMagnitude(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "position",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "Vector2.ClampMagnitude",
                  "FullName": "Vector2.ClampMagnitude",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "1",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 102
                }
              ],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "Vector2.ClampMagnitude",
                        "FullName": "Vector2.ClampMagnitude",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "position",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "1",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 102
                      }
                    ],
                    "Type": "?",
                    "Statement": "Vector2.ClampMagnitude(position, 1)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "ReturnType": "?",
                  "Line": 102
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 100
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ApplyInversionFilter",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.ApplyInversionFilter(Vector2)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "Vector2",
              "Parameters": [
                {
                  "Name": "position",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "invertXOutputValue"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualTouchZone.invertXOutputValue"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "invertXOutputValue",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 110,
                  "StartLine": 107,
                  "Invocations": [
                    {
                      "Name": "InvertValue",
                      "FullName": "InvertValue",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "position.x",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 109
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "position.x",
                        "Type": "?",
                        "Assignment": "InvertValue(position.x)",
                        "Kind": "Assignment",
                        "AssignmentLine": 108,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InvertValue(position.x)",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 108,
                        "UseKind": "Invalid",
                        "AssignedTo": "position.x",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                },
                {
                  "Condition": {
                    "Tokens": [
                      "invertYOutputValue"
                    ],
                    "Properties": [],
                    "Fields": [
                      "UIVirtualTouchZone.invertYOutputValue"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "invertYOutputValue",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 115,
                  "StartLine": 112,
                  "Invocations": [
                    {
                      "Name": "InvertValue",
                      "FullName": "InvertValue",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "position.y",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 114
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "position.y",
                        "Type": "?",
                        "Assignment": "InvertValue(position.y)",
                        "Kind": "Assignment",
                        "AssignmentLine": 113,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "InvertValue(position.y)",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 113,
                        "UseKind": "Invalid",
                        "AssignedTo": "position.y",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "Vector2",
                    "Statement": "position",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Parameter"
                  },
                  "ReturnType": "Vector2",
                  "Line": 117
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 105
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "InvertValue",
              "IsEmpty": false,
              "FullName": "UIVirtualTouchZone.InvertValue(float)",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "float",
              "Parameters": [
                {
                  "Name": "value",
                  "Type": "float",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "float",
                    "Statement": "-value",
                    "ExpressionType": "UnaryMinusExpression",
                    "Kind": "Method"
                  },
                  "ReturnType": "float",
                  "Line": 122
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 120
            }
          ],
          "Fields": [
            {
              "Name": "containerRect",
              "Type": "RectTransform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Rect References\")"
              ],
              "FullName": "UIVirtualTouchZone.containerRect",
              "Line": 11
            },
            {
              "Name": "handleRect",
              "Type": "RectTransform",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.handleRect",
              "Line": 12
            },
            {
              "Name": "clampToMagnitude",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Settings\")"
              ],
              "FullName": "UIVirtualTouchZone.clampToMagnitude",
              "Line": 15
            },
            {
              "Name": "magnitudeMultiplier",
              "Type": "float",
              "Modifiers": [
                "public"
              ],
              "Assignment": "1f",
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.magnitudeMultiplier",
              "Line": 16
            },
            {
              "Name": "invertXOutputValue",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.invertXOutputValue",
              "Line": 17
            },
            {
              "Name": "invertYOutputValue",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.invertYOutputValue",
              "Line": 18
            },
            {
              "Name": "pointerDownPosition",
              "Type": "Vector2",
              "Modifiers": [
                "private"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.pointerDownPosition",
              "Line": 21
            },
            {
              "Name": "currentPointerPosition",
              "Type": "Vector2",
              "Modifiers": [
                "private"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "UIVirtualTouchZone.currentPointerPosition",
              "Line": 22
            },
            {
              "Name": "touchZoneOutputEvent",
              "Type": "Event",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [
                "Header(\"Output\")"
              ],
              "FullName": "UIVirtualTouchZone.touchZoneOutputEvent",
              "Line": 25
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 5
        }
      ],
      "Usings": [
        {
          "Name": "UnityEngine",
          "Line": 1
        },
        {
          "Name": "UnityEngine.EventSystems",
          "Line": 2
        },
        {
          "Name": "UnityEngine.Events",
          "Line": 3
        }
      ],
      "Line": 1
    },
    {
      "Name": "Readme",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Readme.cs",
      "Language": "C#",
      "Loc": 14,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "Readme",
          "FullName": "Readme",
          "FullInheritanceName": "ScriptableObject",
          "InnerClasses": [
            {
              "Name": "Section",
              "FullName": "Readme.Section",
              "FullInheritanceName": "object",
              "InnerClasses": [],
              "ClassConstraints": [],
              "Modifiers": [
                "public"
              ],
              "Inheritance": "object",
              "Interfaces": [],
              "Properties": [],
              "Methods": [],
              "Fields": [
                {
                  "Name": "heading",
                  "Type": "string",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "Readme.Section.heading",
                  "Line": 12
                },
                {
                  "Name": "text",
                  "Type": "string",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "Readme.Section.text",
                  "Line": 12
                },
                {
                  "Name": "linkText",
                  "Type": "string",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "Readme.Section.linkText",
                  "Line": 12
                },
                {
                  "Name": "url",
                  "Type": "string",
                  "Modifiers": [
                    "public"
                  ],
                  "Assignment": null,
                  "Attributes": [],
                  "FullName": "Readme.Section.url",
                  "Line": 12
                }
              ],
              "Constructors": [],
              "Attributes": [
                "Serializable"
              ],
              "Line": 10
            }
          ],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "ScriptableObject",
          "Interfaces": [],
          "Properties": [],
          "Methods": [],
          "Fields": [
            {
              "Name": "icon",
              "Type": "Texture2D",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "Readme.icon",
              "Line": 5
            },
            {
              "Name": "title",
              "Type": "string",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "Readme.title",
              "Line": 6
            },
            {
              "Name": "sections",
              "Type": "Section[]",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "Readme.sections",
              "Line": 7
            },
            {
              "Name": "loadedLayout",
              "Type": "bool",
              "Modifiers": [
                "public"
              ],
              "Assignment": null,
              "Attributes": [],
              "FullName": "Readme.loadedLayout",
              "Line": 8
            }
          ],
          "Constructors": [],
          "Attributes": [],
          "Line": 4
        }
      ],
      "Usings": [
        {
          "Name": "System",
          "Line": 1
        },
        {
          "Name": "UnityEngine",
          "Line": 2
        }
      ],
      "Line": 1
    },
    {
      "Name": "ReadmeEditor",
      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
      "Language": "C#",
      "Loc": 158,
      "Interfaces": [],
      "Namespaces": [],
      "Classes": [
        {
          "Name": "ReadmeEditor",
          "FullName": "ReadmeEditor",
          "FullInheritanceName": "Editor",
          "InnerClasses": [],
          "ClassConstraints": [],
          "Modifiers": [
            "public"
          ],
          "Inheritance": "Editor",
          "Interfaces": [],
          "Properties": [
            {
              "Name": "LinkStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Attributes": [],
              "IsAutoProperty": false,
              "Initializer": false,
              "InitializerValue": null,
              "Accessor": [
                {
                  "AccessorType": "get",
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "IsEmpty": false,
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": null,
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_LinkStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_LinkStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "ReturnType": "GUIStyle",
                      "Line": 108
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 108
                }
              ],
              "HasExpressionBody": false,
              "ExpressionBody": null,
              "Line": 108
            },
            {
              "Name": "TitleStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Attributes": [],
              "IsAutoProperty": false,
              "Initializer": false,
              "InitializerValue": null,
              "Accessor": [
                {
                  "AccessorType": "get",
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "IsEmpty": false,
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": null,
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_TitleStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_TitleStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "ReturnType": "GUIStyle",
                      "Line": 111
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 111
                }
              ],
              "HasExpressionBody": false,
              "ExpressionBody": null,
              "Line": 111
            },
            {
              "Name": "HeadingStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Attributes": [],
              "IsAutoProperty": false,
              "Initializer": false,
              "InitializerValue": null,
              "Accessor": [
                {
                  "AccessorType": "get",
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "IsEmpty": false,
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": null,
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_HeadingStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_HeadingStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "ReturnType": "GUIStyle",
                      "Line": 114
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 114
                }
              ],
              "HasExpressionBody": false,
              "ExpressionBody": null,
              "Line": 114
            },
            {
              "Name": "BodyStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Attributes": [],
              "IsAutoProperty": false,
              "Initializer": false,
              "InitializerValue": null,
              "Accessor": [
                {
                  "AccessorType": "get",
                  "HasBody": true,
                  "HasExpressionBody": false,
                  "IsEmpty": false,
                  "Modifiers": [],
                  "Attributes": [],
                  "ReturnType": null,
                  "Parameters": [],
                  "Invocations": [],
                  "Variables": [],
                  "Statements": [],
                  "WhileBlocks": [],
                  "ForEachBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_BodyStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_BodyStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      },
                      "ReturnType": "GUIStyle",
                      "Line": 117
                    }
                  ],
                  "TryBlocks": [],
                  "ExpressionBody": null,
                  "Line": 117
                }
              ],
              "HasExpressionBody": false,
              "ExpressionBody": null,
              "Line": 117
            }
          ],
          "Methods": [
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "SelectReadmeAutomatically",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.SelectReadmeAutomatically()",
              "Modifiers": [
                "static"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "SessionState.GetBoolkShowedReadmeSessionStateName,",
                      "false"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ReadmeEditor.kShowedReadmeSessionStateName"
                    ],
                    "Invocations": [
                      {
                        "Name": "SessionState.GetBool",
                        "FullName": "SessionState.GetBool",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "kShowedReadmeSessionStateName",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "false",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 24
                      }
                    ],
                    "Type": "?",
                    "Statement": "!SessionState.GetBool(kShowedReadmeSessionStateName, false )",
                    "ExpressionType": "LogicalNotExpression",
                    "Kind": "Literal"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 34,
                  "StartLine": 24,
                  "Invocations": [
                    {
                      "Name": "SessionState.GetBool",
                      "FullName": "SessionState.GetBool",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "kShowedReadmeSessionStateName",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "false",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 24
                    },
                    {
                      "Name": "SelectReadme",
                      "FullName": "ReadmeEditor.SelectReadme()",
                      "ReturnType": "Readme",
                      "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                      "DefinitionLine": 46,
                      "Kind": "SourceFile",
                      "Module": null,
                      "ReferenceFound": true,
                      "Arguments": [],
                      "Line": 26
                    },
                    {
                      "Name": "SessionState.SetBool",
                      "FullName": "SessionState.SetBool",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "kShowedReadmeSessionStateName",
                          "IsInvocation": false,
                          "IsLiteral": false
                        },
                        {
                          "Argument": "true",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 27
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "readme",
                        "Type": "var",
                        "FullName": "Readme",
                        "Assignment": "SelectReadme()",
                        "Kind": "Definition",
                        "DefinitionLine": 25
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "readme",
                          "readme.loadedLayout"
                        ],
                        "Properties": [],
                        "Fields": [
                          "Readme.loadedLayout"
                        ],
                        "Invocations": [],
                        "Type": "?",
                        "Statement": "readme && !readme.loadedLayout",
                        "ExpressionType": "LogicalAndExpression",
                        "Kind": "Literal"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 33,
                      "StartLine": 29,
                      "Invocations": [
                        {
                          "Name": "LoadLayout",
                          "FullName": "ReadmeEditor.LoadLayout()",
                          "ReturnType": "Void",
                          "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                          "DefinitionLine": 37,
                          "Kind": "SourceFile",
                          "Module": null,
                          "ReferenceFound": true,
                          "Arguments": [],
                          "Line": 31
                        }
                      ],
                      "Variables": [
                        {
                          "Variable": {
                            "Name": "readme.loadedLayout",
                            "Type": "bool",
                            "Assignment": "true",
                            "Kind": "Assignment",
                            "AssignmentLine": 31,
                            "VariableKind": "Field",
                            "FullName": "Readme.loadedLayout",
                            "AssignmentKind": "SimpleAssignmentExpression",
                            "Cascades": [
                              {
                                "Tokens": [
                                  "readme"
                                ],
                                "Properties": [],
                                "Fields": [],
                                "Invocations": [],
                                "Type": "Readme",
                                "Statement": "readme",
                                "ExpressionType": "IdentifierName",
                                "Kind": "Local"
                              }
                            ]
                          }
                        },
                        {
                          "Variable": {
                            "Name": null,
                            "Type": "bool",
                            "Kind": "Use",
                            "UseLine": 31,
                            "UseKind": "Literal",
                            "AssignedTo": "readme.loadedLayout",
                            "Value": "true",
                            "Operation": "SimpleAssignmentExpression",
                            "VariablesList": []
                          }
                        }
                      ],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 22
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "LoadLayout",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.LoadLayout()",
              "Modifiers": [
                "static"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "GetType",
                  "FullName": "System.Reflection.Assembly.GetType(string, bool)",
                  "ReturnType": "Type",
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": "MetadataFile",
                  "Module": "CommonLanguageRuntimeLibrary",
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "\"UnityEditor.WindowLayout\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "true",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 40
                },
                {
                  "Name": "GetMethod",
                  "FullName": "System.Type.GetMethod(string, System.Reflection.BindingFlags)",
                  "ReturnType": "MethodInfo",
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": "MetadataFile",
                  "Module": "CommonLanguageRuntimeLibrary",
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "\"LoadWindowLayout\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "BindingFlags.Public | BindingFlags.Static",
                      "IsInvocation": true,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 41
                },
                {
                  "Name": "Invoke",
                  "FullName": "System.Reflection.MethodBase.Invoke(object, object[])",
                  "ReturnType": "Object",
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": "MetadataFile",
                  "Module": "CommonLanguageRuntimeLibrary",
                  "ReferenceFound": true,
                  "Arguments": [
                    {
                      "Argument": "null",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "new object[]{Path.Combine(Application.dataPath, \"TutorialInfo/Layout.wlt\"), false}",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 42
                },
                {
                  "Name": "Path.Combine",
                  "FullName": "Path.Combine",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "Application.dataPath",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "\"TutorialInfo/Layout.wlt\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 42
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "assembly",
                    "Type": "var",
                    "FullName": "System.Reflection.Assembly",
                    "Assignment": "typeof(EditorApplication).Assembly",
                    "Kind": "Definition",
                    "DefinitionLine": 38
                  }
                },
                {
                  "Variable": {
                    "Name": "windowLayoutType",
                    "Type": "var",
                    "FullName": "System.Type",
                    "Assignment": "assembly.GetType(\"UnityEditor.WindowLayout\", true)",
                    "Kind": "Definition",
                    "DefinitionLine": 39
                  }
                },
                {
                  "Variable": {
                    "Name": "method",
                    "Type": "var",
                    "FullName": "System.Reflection.MethodInfo",
                    "Assignment": "windowLayoutType.GetMethod(\"LoadWindowLayout\", BindingFlags.Public | BindingFlags.Static)",
                    "Kind": "Definition",
                    "DefinitionLine": 40
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 37
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "SelectReadme",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.SelectReadme()",
              "Modifiers": [
                "static"
              ],
              "Attributes": [
                "MenuItem"
              ],
              "ReturnType": "Readme",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "AssetDatabase.FindAssets",
                  "FullName": "AssetDatabase.FindAssets",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"Readme t:Readme\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 48
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "ids",
                    "Type": "var",
                    "FullName": null,
                    "Assignment": "AssetDatabase.FindAssets(\"Readme t:Readme\")",
                    "Kind": "Definition",
                    "DefinitionLine": 47
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "ids.Length",
                      "1"
                    ],
                    "Properties": [],
                    "Fields": [],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "ids.Length == 1",
                    "ExpressionType": "EqualsExpression",
                    "Kind": "Literal"
                  },
                  "Else": {
                    "ElseStatement": "{\r\n\t\t\tDebug.Log(\"Couldn't find a readme\");\r\n\t\t\treturn null;\r\n\t\t}",
                    "EndLine": 61,
                    "StartLine": 57,
                    "Invocations": [
                      {
                        "Name": "Debug.Log",
                        "FullName": "Debug.Log",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "\"Couldn't find a readme\"",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 59
                      }
                    ],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": {
                          "Tokens": [],
                          "Properties": [],
                          "Fields": [],
                          "Invocations": [],
                          "Type": null,
                          "Statement": "null",
                          "ExpressionType": "NullLiteralExpression",
                          "Kind": "Literal"
                        },
                        "ReturnType": null,
                        "Line": 60
                      }
                    ]
                  },
                  "DanglingElse": false,
                  "Depth": 1,
                  "EndLine": 61,
                  "StartLine": 49,
                  "Invocations": [
                    {
                      "Name": "AssetDatabase.LoadMainAssetAtPath",
                      "FullName": "AssetDatabase.LoadMainAssetAtPath",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "AssetDatabase.GUIDToAssetPath(ids[0])",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 51
                    },
                    {
                      "Name": "AssetDatabase.GUIDToAssetPath",
                      "FullName": "AssetDatabase.GUIDToAssetPath",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "ids[0]",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 51
                    }
                  ],
                  "Variables": [
                    {
                      "Variable": {
                        "Name": "readmeObject",
                        "Type": "var",
                        "FullName": null,
                        "Assignment": "AssetDatabase.LoadMainAssetAtPath(AssetDatabase.GUIDToAssetPath(ids[0]))",
                        "Kind": "Definition",
                        "DefinitionLine": 50
                      }
                    },
                    {
                      "Variable": {
                        "Name": "Selection.objects",
                        "Type": "?",
                        "Assignment": "new UnityEngine.Object[]{readmeObject}",
                        "Kind": "Assignment",
                        "AssignmentLine": 52,
                        "VariableKind": null,
                        "FullName": null,
                        "AssignmentKind": "SimpleAssignmentExpression",
                        "Cascades": []
                      }
                    },
                    {
                      "Variable": {
                        "Name": "new UnityEngine.Object[]{readmeObject}",
                        "Type": "?",
                        "Kind": "Use",
                        "UseLine": 52,
                        "UseKind": "ArrayCreation",
                        "AssignedTo": "Selection.objects",
                        "Value": null,
                        "Operation": "SimpleAssignmentExpression",
                        "VariablesList": []
                      }
                    }
                  ],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": {
                        "Tokens": [],
                        "Properties": [],
                        "Fields": [],
                        "Invocations": [],
                        "Type": "Readme",
                        "Statement": "(Readme)readmeObject",
                        "ExpressionType": "CastExpression",
                        "Kind": "Literal"
                      },
                      "ReturnType": "Readme",
                      "Line": 55
                    }
                  ]
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 45
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnHeaderGUI",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.OnHeaderGUI()",
              "Modifiers": [
                "protected",
                "override"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Init",
                  "FullName": "ReadmeEditor.Init()",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                  "DefinitionLine": 120,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [],
                  "Line": 67
                },
                {
                  "Name": "Mathf.Min",
                  "FullName": "Mathf.Min",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "EditorGUIUtility.currentViewWidth/3f - 20f",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "128f",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 69
                },
                {
                  "Name": "GUILayout.BeginHorizontal",
                  "FullName": "GUILayout.BeginHorizontal",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "\"In BigTitle\"",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 71
                },
                {
                  "Name": "GUILayout.Label",
                  "FullName": "GUILayout.Label",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "readme.icon",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "GUILayout.Width(iconWidth)",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "GUILayout.Height(iconWidth)",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                },
                {
                  "Name": "GUILayout.Width",
                  "FullName": "GUILayout.Width",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "iconWidth",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                },
                {
                  "Name": "GUILayout.Height",
                  "FullName": "GUILayout.Height",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "iconWidth",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 73
                },
                {
                  "Name": "GUILayout.Label",
                  "FullName": "GUILayout.Label",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "readme.title",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "TitleStyle",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 74
                },
                {
                  "Name": "GUILayout.EndHorizontal",
                  "FullName": "GUILayout.EndHorizontal",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 76
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "readme",
                    "Type": "var",
                    "FullName": "Readme",
                    "Assignment": "(Readme)target",
                    "Kind": "Definition",
                    "DefinitionLine": 65
                  }
                },
                {
                  "Variable": {
                    "Name": "iconWidth",
                    "Type": "var",
                    "FullName": null,
                    "Assignment": "Mathf.Min(EditorGUIUtility.currentViewWidth/3f - 20f, 128f)",
                    "Kind": "Definition",
                    "DefinitionLine": 68
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 64
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "OnInspectorGUI",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.OnInspectorGUI()",
              "Modifiers": [
                "public",
                "override"
              ],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [
                {
                  "Name": "Init",
                  "FullName": "ReadmeEditor.Init()",
                  "ReturnType": "Void",
                  "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                  "DefinitionLine": 120,
                  "Kind": "SourceFile",
                  "Module": null,
                  "ReferenceFound": true,
                  "Arguments": [],
                  "Line": 82
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "readme",
                    "Type": "var",
                    "FullName": "Readme",
                    "Assignment": "(Readme)target",
                    "Kind": "Definition",
                    "DefinitionLine": 80
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [
                {
                  "Iterator": "section",
                  "IteratorType": "var",
                  "Iterable": "readme.sections",
                  "IterableType": "Readme.Section[]",
                  "Invocation": null,
                  "Property": null,
                  "ExpressionIsInvocation": false,
                  "ExpressionIsProperty": false,
                  "Depth": 1,
                  "EndLine": 102,
                  "StartLine": 84,
                  "Invocations": [
                    {
                      "Name": "GUILayout.Space",
                      "FullName": "GUILayout.Space",
                      "ReturnType": null,
                      "FileName": null,
                      "DefinitionLine": 1,
                      "Kind": null,
                      "Module": null,
                      "ReferenceFound": false,
                      "Arguments": [
                        {
                          "Argument": "kSpace",
                          "IsInvocation": false,
                          "IsLiteral": false
                        }
                      ],
                      "Line": 101
                    }
                  ],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [
                    {
                      "Condition": {
                        "Tokens": [
                          "string.IsNullOrEmptysection.heading"
                        ],
                        "Properties": [],
                        "Fields": [
                          "Readme.Section.heading"
                        ],
                        "Invocations": [
                          {
                            "Name": "IsNullOrEmpty",
                            "FullName": "string.IsNullOrEmpty(string)",
                            "ReturnType": "Boolean",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "section.heading",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 86
                          }
                        ],
                        "Type": "bool",
                        "Statement": "!string.IsNullOrEmpty(section.heading)",
                        "ExpressionType": "LogicalNotExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 89,
                      "StartLine": 86,
                      "Invocations": [
                        {
                          "Name": "IsNullOrEmpty",
                          "FullName": "string.IsNullOrEmpty(string)",
                          "ReturnType": "Boolean",
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": "MetadataFile",
                          "Module": "CommonLanguageRuntimeLibrary",
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "section.heading",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 86
                        },
                        {
                          "Name": "GUILayout.Label",
                          "FullName": "GUILayout.Label",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "section.heading",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "HeadingStyle",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 88
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "string.IsNullOrEmptysection.text"
                        ],
                        "Properties": [],
                        "Fields": [
                          "Readme.Section.text"
                        ],
                        "Invocations": [
                          {
                            "Name": "IsNullOrEmpty",
                            "FullName": "string.IsNullOrEmpty(string)",
                            "ReturnType": "Boolean",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "section.text",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 90
                          }
                        ],
                        "Type": "bool",
                        "Statement": "!string.IsNullOrEmpty(section.text)",
                        "ExpressionType": "LogicalNotExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 93,
                      "StartLine": 90,
                      "Invocations": [
                        {
                          "Name": "IsNullOrEmpty",
                          "FullName": "string.IsNullOrEmpty(string)",
                          "ReturnType": "Boolean",
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": "MetadataFile",
                          "Module": "CommonLanguageRuntimeLibrary",
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "section.text",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 90
                        },
                        {
                          "Name": "GUILayout.Label",
                          "FullName": "GUILayout.Label",
                          "ReturnType": null,
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": null,
                          "Module": null,
                          "ReferenceFound": false,
                          "Arguments": [
                            {
                              "Argument": "section.text",
                              "IsInvocation": false,
                              "IsLiteral": false
                            },
                            {
                              "Argument": "BodyStyle",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 92
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    {
                      "Condition": {
                        "Tokens": [
                          "string.IsNullOrEmptysection.linkText"
                        ],
                        "Properties": [],
                        "Fields": [
                          "Readme.Section.linkText"
                        ],
                        "Invocations": [
                          {
                            "Name": "IsNullOrEmpty",
                            "FullName": "string.IsNullOrEmpty(string)",
                            "ReturnType": "Boolean",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "ReferenceFound": true,
                            "Arguments": [
                              {
                                "Argument": "section.linkText",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 94
                          }
                        ],
                        "Type": "bool",
                        "Statement": "!string.IsNullOrEmpty(section.linkText)",
                        "ExpressionType": "LogicalNotExpression",
                        "Kind": "Method"
                      },
                      "Else": null,
                      "DanglingElse": true,
                      "Depth": 2,
                      "EndLine": 100,
                      "StartLine": 94,
                      "Invocations": [
                        {
                          "Name": "IsNullOrEmpty",
                          "FullName": "string.IsNullOrEmpty(string)",
                          "ReturnType": "Boolean",
                          "FileName": null,
                          "DefinitionLine": 1,
                          "Kind": "MetadataFile",
                          "Module": "CommonLanguageRuntimeLibrary",
                          "ReferenceFound": true,
                          "Arguments": [
                            {
                              "Argument": "section.linkText",
                              "IsInvocation": false,
                              "IsLiteral": false
                            }
                          ],
                          "Line": 94
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [
                        {
                          "Condition": {
                            "Tokens": [
                              "LinkLabelnew",
                              "GUIContentsection.linkText"
                            ],
                            "Properties": [],
                            "Fields": [
                              "Readme.Section.linkText"
                            ],
                            "Invocations": [
                              {
                                "Name": "LinkLabel",
                                "FullName": "ReadmeEditor.LinkLabel(GUIContent, params GUILayoutOption[])",
                                "ReturnType": "Boolean",
                                "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                                "DefinitionLine": 143,
                                "Kind": "SourceFile",
                                "Module": null,
                                "ReferenceFound": true,
                                "Arguments": [
                                  {
                                    "Argument": "new GUIContent(section.linkText)",
                                    "IsInvocation": false,
                                    "IsLiteral": false
                                  }
                                ],
                                "Line": 96
                              }
                            ],
                            "Type": "bool",
                            "Statement": "LinkLabel(new GUIContent(section.linkText))",
                            "ExpressionType": "InvocationExpression",
                            "Kind": "Method"
                          },
                          "Else": null,
                          "DanglingElse": true,
                          "Depth": 3,
                          "EndLine": 99,
                          "StartLine": 96,
                          "Invocations": [
                            {
                              "Name": "LinkLabel",
                              "FullName": "ReadmeEditor.LinkLabel(GUIContent, params GUILayoutOption[])",
                              "ReturnType": "Boolean",
                              "FileName": "D:\\XRFix\\dataset_collection\\overall\\VR-AR-Game\\Game\\Assets\\StarterAssets\\TutorialInfo\\Scripts\\Editor\\ReadmeEditor.cs",
                              "DefinitionLine": 143,
                              "Kind": "SourceFile",
                              "Module": null,
                              "ReferenceFound": true,
                              "Arguments": [
                                {
                                  "Argument": "new GUIContent(section.linkText)",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 96
                            },
                            {
                              "Name": "Application.OpenURL",
                              "FullName": "Application.OpenURL",
                              "ReturnType": null,
                              "FileName": null,
                              "DefinitionLine": 1,
                              "Kind": null,
                              "Module": null,
                              "ReferenceFound": false,
                              "Arguments": [
                                {
                                  "Argument": "section.url",
                                  "IsInvocation": false,
                                  "IsLiteral": false
                                }
                              ],
                              "Line": 98
                            }
                          ],
                          "Variables": [],
                          "WhileBlocks": [],
                          "ForBlocks": [],
                          "IfBlocks": [],
                          "SwitchBlocks": [],
                          "ForEachBlocks": [],
                          "ElseBlocks": [],
                          "TryBlocks": [],
                          "Returns": []
                        }
                      ],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    }
                  ],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": []
                }
              ],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 79
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "Init",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.Init()",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "void",
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "m_BodyStyle",
                    "Type": "GUIStyle",
                    "Assignment": "new GUIStyle(EditorStyles.label)",
                    "Kind": "Assignment",
                    "AssignmentLine": 123,
                    "VariableKind": "Field",
                    "FullName": "ReadmeEditor.m_BodyStyle",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_BodyStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_BodyStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_BodyStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_BodyStyle.wordWrap",
                    "Type": "?",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 124,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_BodyStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_BodyStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_BodyStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_BodyStyle.fontSize",
                    "Type": "?",
                    "Assignment": "14",
                    "Kind": "Assignment",
                    "AssignmentLine": 125,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_BodyStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_BodyStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_BodyStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_TitleStyle",
                    "Type": "GUIStyle",
                    "Assignment": "new GUIStyle(m_BodyStyle)",
                    "Kind": "Assignment",
                    "AssignmentLine": 127,
                    "VariableKind": "Field",
                    "FullName": "ReadmeEditor.m_TitleStyle",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_TitleStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_TitleStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_TitleStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_TitleStyle.fontSize",
                    "Type": "?",
                    "Assignment": "26",
                    "Kind": "Assignment",
                    "AssignmentLine": 128,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_TitleStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_TitleStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_TitleStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_HeadingStyle",
                    "Type": "GUIStyle",
                    "Assignment": "new GUIStyle(m_BodyStyle)",
                    "Kind": "Assignment",
                    "AssignmentLine": 130,
                    "VariableKind": "Field",
                    "FullName": "ReadmeEditor.m_HeadingStyle",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_HeadingStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_HeadingStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_HeadingStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_HeadingStyle.fontSize",
                    "Type": "?",
                    "Assignment": "18",
                    "Kind": "Assignment",
                    "AssignmentLine": 131,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_HeadingStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_HeadingStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_HeadingStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_LinkStyle",
                    "Type": "GUIStyle",
                    "Assignment": "new GUIStyle(m_BodyStyle)",
                    "Kind": "Assignment",
                    "AssignmentLine": 133,
                    "VariableKind": "Field",
                    "FullName": "ReadmeEditor.m_LinkStyle",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_LinkStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_LinkStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_LinkStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_LinkStyle.wordWrap",
                    "Type": "?",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 134,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_LinkStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_LinkStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_LinkStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_LinkStyle.normal.textColor",
                    "Type": "?",
                    "Assignment": "new Color (0x00/255f, 0x78/255f, 0xDA/255f, 1f)",
                    "Kind": "Assignment",
                    "AssignmentLine": 136,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_LinkStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_LinkStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_LinkStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_LinkStyle.stretchWidth",
                    "Type": "?",
                    "Assignment": "false",
                    "Kind": "Assignment",
                    "AssignmentLine": 137,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_LinkStyle"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_LinkStyle"
                        ],
                        "Invocations": [],
                        "Type": "GUIStyle",
                        "Statement": "m_LinkStyle",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "m_Initialized",
                    "Type": "bool",
                    "Assignment": "true",
                    "Kind": "Assignment",
                    "AssignmentLine": 139,
                    "VariableKind": "Field",
                    "FullName": "ReadmeEditor.m_Initialized",
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": [
                      {
                        "Tokens": [
                          "m_Initialized"
                        ],
                        "Properties": [],
                        "Fields": [
                          "ReadmeEditor.m_Initialized"
                        ],
                        "Invocations": [],
                        "Type": "bool",
                        "Statement": "m_Initialized",
                        "ExpressionType": "IdentifierName",
                        "Kind": "Field"
                      }
                    ]
                  }
                },
                {
                  "Variable": {
                    "Name": "new GUIStyle(EditorStyles.label)",
                    "Type": "GUIStyle",
                    "Kind": "Use",
                    "UseLine": 123,
                    "UseKind": "Invalid",
                    "AssignedTo": "m_BodyStyle",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 124,
                    "UseKind": "Literal",
                    "AssignedTo": "m_BodyStyle.wordWrap",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 125,
                    "UseKind": "Literal",
                    "AssignedTo": "m_BodyStyle.fontSize",
                    "Value": "14",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "new GUIStyle(m_BodyStyle)",
                    "Type": "GUIStyle",
                    "Kind": "Use",
                    "UseLine": 127,
                    "UseKind": "Invalid",
                    "AssignedTo": "m_TitleStyle",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 128,
                    "UseKind": "Literal",
                    "AssignedTo": "m_TitleStyle.fontSize",
                    "Value": "26",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "new GUIStyle(m_BodyStyle)",
                    "Type": "GUIStyle",
                    "Kind": "Use",
                    "UseLine": 130,
                    "UseKind": "Invalid",
                    "AssignedTo": "m_HeadingStyle",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 131,
                    "UseKind": "Literal",
                    "AssignedTo": "m_HeadingStyle.fontSize",
                    "Value": "18",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "new GUIStyle(m_BodyStyle)",
                    "Type": "GUIStyle",
                    "Kind": "Use",
                    "UseLine": 133,
                    "UseKind": "Invalid",
                    "AssignedTo": "m_LinkStyle",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 134,
                    "UseKind": "Literal",
                    "AssignedTo": "m_LinkStyle.wordWrap",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "new Color (0x00/255f, 0x78/255f, 0xDA/255f, 1f)",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 136,
                    "UseKind": "Invalid",
                    "AssignedTo": "m_LinkStyle.normal.textColor",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 137,
                    "UseKind": "Literal",
                    "AssignedTo": "m_LinkStyle.stretchWidth",
                    "Value": "false",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": null,
                    "Type": "bool",
                    "Kind": "Use",
                    "UseLine": 139,
                    "UseKind": "Literal",
                    "AssignedTo": "m_Initialized",
                    "Value": "true",
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [
                {
                  "Condition": {
                    "Tokens": [
                      "m_Initialized"
                    ],
                    "Properties": [],
                    "Fields": [
                      "ReadmeEditor.m_Initialized"
                    ],
                    "Invocations": [],
                    "Type": "bool",
                    "Statement": "m_Initialized",
                    "ExpressionType": "IdentifierName",
                    "Kind": "Field"
                  },
                  "Else": null,
                  "DanglingElse": true,
                  "Depth": 1,
                  "EndLine": 123,
                  "StartLine": 122,
                  "Invocations": [],
                  "Variables": [],
                  "WhileBlocks": [],
                  "ForBlocks": [],
                  "IfBlocks": [],
                  "SwitchBlocks": [],
                  "ForEachBlocks": [],
                  "ElseBlocks": [],
                  "TryBlocks": [],
                  "Returns": [
                    {
                      "ReturnStatement": null,
                      "ReturnType": "void",
                      "Line": 123
                    }
                  ]
                }
              ],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 120
            },
            {
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "LinkLabel",
              "IsEmpty": false,
              "FullName": "ReadmeEditor.LinkLabel(GUIContent, params GUILayoutOption[])",
              "Modifiers": [],
              "Attributes": [],
              "ReturnType": "bool",
              "Parameters": [
                {
                  "Name": "label",
                  "Type": "GUIContent",
                  "Assignment": null,
                  "Attributes": []
                },
                {
                  "Name": "options",
                  "Type": "GUILayoutOption[]",
                  "Assignment": null,
                  "Attributes": []
                }
              ],
              "Invocations": [
                {
                  "Name": "GUILayoutUtility.GetRect",
                  "FullName": "GUILayoutUtility.GetRect",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "label",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "LinkStyle",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "options",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 145
                },
                {
                  "Name": "Handles.BeginGUI",
                  "FullName": "Handles.BeginGUI",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 147
                },
                {
                  "Name": "Handles.DrawLine",
                  "FullName": "Handles.DrawLine",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "new Vector3(position.xMin, position.yMax)",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "new Vector3(position.xMax, position.yMax)",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 149
                },
                {
                  "Name": "Handles.EndGUI",
                  "FullName": "Handles.EndGUI",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [],
                  "Line": 151
                },
                {
                  "Name": "EditorGUIUtility.AddCursorRect",
                  "FullName": "EditorGUIUtility.AddCursorRect",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "MouseCursor.Link",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 153
                },
                {
                  "Name": "GUI.Button",
                  "FullName": "GUI.Button",
                  "ReturnType": null,
                  "FileName": null,
                  "DefinitionLine": 1,
                  "Kind": null,
                  "Module": null,
                  "ReferenceFound": false,
                  "Arguments": [
                    {
                      "Argument": "position",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "label",
                      "IsInvocation": false,
                      "IsLiteral": false
                    },
                    {
                      "Argument": "LinkStyle",
                      "IsInvocation": false,
                      "IsLiteral": false
                    }
                  ],
                  "Line": 155
                }
              ],
              "Variables": [
                {
                  "Variable": {
                    "Name": "position",
                    "Type": "var",
                    "FullName": null,
                    "Assignment": "GUILayoutUtility.GetRect(label, LinkStyle, options)",
                    "Kind": "Definition",
                    "DefinitionLine": 144
                  }
                },
                {
                  "Variable": {
                    "Name": "Handles.color",
                    "Type": "?",
                    "Assignment": "LinkStyle.normal.textColor",
                    "Kind": "Assignment",
                    "AssignmentLine": 147,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": []
                  }
                },
                {
                  "Variable": {
                    "Name": "Handles.color",
                    "Type": "?",
                    "Assignment": "Color.white",
                    "Kind": "Assignment",
                    "AssignmentLine": 149,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "SimpleAssignmentExpression",
                    "Cascades": []
                  }
                },
                {
                  "Variable": {
                    "Name": "LinkStyle.normal.textColor",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 147,
                    "UseKind": "Invalid",
                    "AssignedTo": "Handles.color",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                },
                {
                  "Variable": {
                    "Name": "Color.white",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 149,
                    "UseKind": "Invalid",
                    "AssignedTo": "Handles.color",
                    "Value": null,
                    "Operation": "SimpleAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [
                {
                  "ReturnStatement": {
                    "Tokens": [],
                    "Properties": [
                      "ReadmeEditor.LinkStyle"
                    ],
                    "Fields": [],
                    "Invocations": [
                      {
                        "Name": "GUI.Button",
                        "FullName": "GUI.Button",
                        "ReturnType": null,
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": null,
                        "Module": null,
                        "ReferenceFound": false,
                        "Arguments": [
                          {
                            "Argument": "position",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "label",
                            "IsInvocation": false,
                            "IsLiteral": false
                          },
                          {
                            "Argument": "LinkStyle",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 155
                      }
                    ],
                    "Type": "?",
                    "Statement": "GUI.Button (position, label, LinkStyle)",
                    "ExpressionType": "InvocationExpression",
                    "Kind": "Literal"
                  },
                  "ReturnType": "?",
                  "Line": 155
                }
              ],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 143
            }
          ],
          "Fields": [
            {
              "Name": "kShowedReadmeSessionStateName",
              "Type": "string",
              "Modifiers": [
                "static"
              ],
              "Assignment": "\"ReadmeEditor.showedReadme\"",
              "Attributes": [],
              "FullName": "ReadmeEditor.kShowedReadmeSessionStateName",
              "Line": 13
            },
            {
              "Name": "kSpace",
              "Type": "float",
              "Modifiers": [
                "static"
              ],
              "Assignment": "16f",
              "Attributes": [],
              "FullName": "ReadmeEditor.kSpace",
              "Line": 15
            },
            {
              "Name": "m_Initialized",
              "Type": "bool",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [],
              "FullName": "ReadmeEditor.m_Initialized",
              "Line": 106
            },
            {
              "Name": "m_LinkStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [
                "SerializeField"
              ],
              "FullName": "ReadmeEditor.m_LinkStyle",
              "Line": 109
            },
            {
              "Name": "m_TitleStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [
                "SerializeField"
              ],
              "FullName": "ReadmeEditor.m_TitleStyle",
              "Line": 112
            },
            {
              "Name": "m_HeadingStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [
                "SerializeField"
              ],
              "FullName": "ReadmeEditor.m_HeadingStyle",
              "Line": 115
            },
            {
              "Name": "m_BodyStyle",
              "Type": "GUIStyle",
              "Modifiers": [],
              "Assignment": null,
              "Attributes": [
                "SerializeField"
              ],
              "FullName": "ReadmeEditor.m_BodyStyle",
              "Line": 118
            }
          ],
          "Constructors": [
            {
              "ClassRef": "ReadmeEditor",
              "ReturnType": "ReadmeEditor",
              "HasBody": true,
              "HasExpressionBody": false,
              "Name": "ReadmeEditor",
              "IsEmpty": false,
              "FullName": "ReadmeEditor",
              "Modifiers": [
                "static"
              ],
              "Attributes": [],
              "Parameters": [],
              "Invocations": [],
              "Variables": [
                {
                  "Variable": {
                    "Name": "EditorApplication.delayCall",
                    "Type": "?",
                    "Assignment": "SelectReadmeAutomatically",
                    "Kind": "Assignment",
                    "AssignmentLine": 18,
                    "VariableKind": null,
                    "FullName": null,
                    "AssignmentKind": "AddAssignmentExpression",
                    "Cascades": []
                  }
                },
                {
                  "Variable": {
                    "Name": "SelectReadmeAutomatically",
                    "Type": "?",
                    "Kind": "Use",
                    "UseLine": 18,
                    "UseKind": "None",
                    "AssignedTo": "EditorApplication.delayCall",
                    "Value": null,
                    "Operation": "AddAssignmentExpression",
                    "VariablesList": []
                  }
                }
              ],
              "Statements": [],
              "WhileBlocks": [],
              "ForEachBlocks": [],
              "ForBlocks": [],
              "IfBlocks": [],
              "SwitchBlocks": [],
              "Returns": [],
              "TryBlocks": [],
              "ExpressionBody": null,
              "Line": 17
            }
          ],
          "Attributes": [
            "CustomEditor",
            "InitializeOnLoad"
          ],
          "Line": 9
        }
      ],
      "Usings": [
        {
          "Name": "System.Collections",
          "Line": 1
        },
        {
          "Name": "System.Collections.Generic",
          "Line": 2
        },
        {
          "Name": "UnityEngine",
          "Line": 3
        },
        {
          "Name": "UnityEditor",
          "Line": 4
        },
        {
          "Name": "System",
          "Line": 5
        },
        {
          "Name": "System.IO",
          "Line": 6
        },
        {
          "Name": "System.Reflection",
          "Line": 7
        }
      ],
      "Line": 1
    }
  ]
}